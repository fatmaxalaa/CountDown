%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Vecteezy_Graduation-Characters_SA0421.eps
%%Creator: Adobe Illustrator(R) 23.1
%%For: salma
%%CreationDate: 4/30/2021
%%BoundingBox: 0 0 2500 1600
%%HiResBoundingBox: 0 0 2500 1600
%%CropBox: 0 0 2500 1600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.1.0 x670 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Happy People Celebrate Graduation with Different Pose</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>Graduation</rdf:li>
               <rdf:li>Celebration</rdf:li>
               <rdf:li>Celebrate</rdf:li>
               <rdf:li>Event</rdf:li>
               <rdf:li>Degree</rdf:li>
               <rdf:li>Student</rdf:li>
               <rdf:li>University</rdf:li>
               <rdf:li>Happy</rdf:li>
               <rdf:li>Education</rdf:li>
               <rdf:li>Hat</rdf:li>
               <rdf:li>Modern</rdf:li>
               <rdf:li>Technology</rdf:li>
               <rdf:li>School</rdf:li>
               <rdf:li>College</rdf:li>
               <rdf:li>Graduation</rdf:li>
               <rdf:li>Happy</rdf:li>
               <rdf:li>Smile</rdf:li>
               <rdf:li>Poses</rdf:li>
               <rdf:li>Character</rdf:li>
               <rdf:li>Collection</rdf:li>
               <rdf:li>Bundle</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:CreatorTool>Adobe Illustrator CC 23.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2021-04-30T12:18:56+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-04-30T12:18:57+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-04-30T12:18:57+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>164</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9IZhue7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq1yXxGKabqDirsUOxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KtFlHU0xSApm4UdBXBbIQK03DdgMHEy4GvrD+2NrwBxuuKlmoFAqSdgAMbX&#xA;gXJdIyhhupFQQagg4bRwLxNGe9MbRwFsSIf2hhtjRb5L4jFadyXxGK0tM0Y71+WC08JU5LoKpbZV&#xA;AqWboAMbZCCkJfUUMG5KdwQagj6MiWYAdilwJHTFVRJ2H2tx+OEFgYK6srCoyTWRTeKHYq7FXYq7&#xA;FXYq7FXYq7FUq8zeZ9G8taW2qavM0NorCPkqNIS7V4qAgPWnfbJwgZGgpNPJvNn/ADkVcWbi30bR&#xA;+LyRpNFc3zggxyqHRvSiPdWB3k+jLtPijkBIN0SPiDR+1jMmLy3X/wAzfPuusfruqzpCTUW9ufq8&#xA;Q9uMfHlT/KrmfDTgcg0HL5u0D8zfPugsPqWqzvCDU29wfrER9uMnLjX/ACaYz04PMKMvm9L8vf8A&#xA;OS6/DF5i0qh/aubFv+ZMp/5mZiz0fcW0ZHrfl7zZpHmPTF1LR5WltWYpzdGQh1pyWjAdK/LMLJEx&#xA;NFvgARaOJJNTucrbXYqlXmXzFZ+XtKk1O8hnngjIDJaxmV96mtNgBt1JAycIGRoMZSoW8f8ANn5/&#xA;a/C62+labDZ+tFHNHPO5ncxzIJI2CgIitxYVB5ZkaXDDICQbqRj8Ymj9oasuQx+V/N5hrvm7zZr7&#xA;E6tqU90hNfRZuMQPtEvFB92bKGAR5BxJZr5lrRPNvmzQSP0TqVxaoDX0VflET7xNyQ/SuM8AlzCx&#xA;zVyL0bQP+ci9Zt+MWu6fFeoNjPbn0ZfmVPJGPy45hz0Q6GnIjnPV7R5X8y2XmPSI9Us4Z4IJCVCX&#xA;MfpvUU7VII36g0zByQMTRciMrFpvkGSVeZfMVn5e0qTU7yGeeCMgMlrGZX3qa02AG3UkDJwgZGgx&#xA;lKhbyDzZ+fuvwmOHSdNhs1uIUnhuJ3M8hjlHJG4KEVWp1B5ZkabDDJZu+GRj8Q1Zcko15i3l+u+b&#xA;vNmvsTq2pT3SE19Fm4xA+0S8UH/A5soYBHkHElmvmVuh+avNWgsG0nUZ7RQa+kj8oifeJuSH6Vxn&#xA;gEuYWOauRej6B/zkXrNvxi13T4r1BsZ7c+jL8yp5Ix+XHMOeiHQ05Ec56vZ/Kvmey8y6Sup2UNxB&#xA;AzFAl1GYnqADUbkMvxfaUkZg5MZiaLkRlYtOMgybVipqMUEWkXmn8xPL/ly4tbK79WbU76gsrGFK&#xA;tIWbgv7xuMa/Ftu2WGhCUztGIJJ8hu016hHqXkPmT/nI/wAwzvJb6Hp0WnqCV9ac/WJttqgDjGp+&#xA;YbM7HpYkXdtMslPN9U86+c9VuPrF9q93LJ2AlZEX/VRCqL9AzLjgA5BqOQd7IPL351fmFonFGvf0&#xA;jbL/ALpv1M3/ACUqsv8Aw+VT0sT0plHL5vTfLv8Azkj5duykWuWM2nSnYzQ/6RD8yAFkHyCtmLPS&#xA;Ecm0ZHrttcRXNvFcQtyhmRZI2oRVWFQaGhGx75ikM1TArsVdirTokiMjqHRhRlYVBB7EHCrxD84/&#xA;LvlaKytriOxii1W4uJolnjZkZYIG4hRGpEdB8Kiq7DpmL2XqJwjKv9Uyf7suwGkjml6uXDH7nmUN&#xA;lbxL8EQ8C1Knf3OZs885cy52LSYsYqMQ1PYW0o+OMAtuHAofDrhx6mcORRm0WLJzHxHN6z+UPkjy&#xA;XdaJ+kZ9NiutSineOSW4rMNqMhEbfAuzfy45NTOXV1mXSRxSofa9XRERAiKFRRRVUUAA7ADMdiux&#xA;V2KuxV41+e9lolp5PfU/qEB1ae/+rQ3vAiRVDO5HJKA/DHxAfanTfIdhzl6t9vEyf7ssddEED3R+&#xA;58+fWrxhUHY+AGdF4knWeGEVZW+u3cxt7O0mu5wok9OKJ5HCEV5UQE0p3yJz8I3IZDBZ2D6H/InS&#xA;PJ9/5Rt9UjsIZtZhlkivrqWIsyyq5dAjSAqKRMn2Pp3zXazJLj57OXp4jher5huQ7FXYq81/M/yn&#xA;omo+Wb+7+qwLrQnWOzuyOEgHrLyWopyAj57GuYvZer8HjMj6fEm3z0UtRIQjz4Rv3PM7X8v7FYVa&#xA;X1piw+39lSf8mg/jl2TtvMT6QAPm7jD7N6aIqRMpe+lOb8v7BBUyzoWqVrxp/wAR/jkh27l6xj9v&#xA;62J9mNOeUpfZ+p6h+UPk3y/beX47y4sLebWEmkWW6dRI4o5MfEtXh8FPs0zIy6zxTcTs6Oehlpzw&#xA;zG/6HpWUodirsVQmqQQS2EwmiSUIjOgdQ3F1BKsK9CDuDmJ2ga0+T+pL/clsxC5x94eOfmx+Wfl+&#xA;0vdKudHtxYJeid78ozMrMnpcOCMSFJ5t02zcaXWGOPfc0KRpuyzqshF8MY82JR+TNIC0Ilcjckt9&#xA;HYDCdfk8nex9nNMBvxH4oa+8k2rRM1nK6SgVVHIZT7VoCMsx9oSv1DZxtT7NYzEnESJefJ9G+W/I&#xA;PkvQUjk0jS4I5KApdsPVmPeolk5OK+xzEnllLmXQcFMjytXYq7FXYq7FXl35i+WdV1i0so6pHc29&#xA;xI3pkrRkuSlTy8VKE07/ADzUdneLjjIZhUjInbz3++3eYDGyY7ih9jXlmy07TtXvtHgnkE1sqTNb&#xA;GGFI5Ipa8XVwrSvw3Uln65mTiTASYSz3LhrdDa1omma5qd1pUc5FxYwhvqzQxKkYkU+kI5FRJAOW&#xA;/wBojthAMYiXQllDOOLhTHyEbPyrodvY6tcLFc6ndM0dPiQSMqoIy61H7HXpXLIzEi16rHKUrHQM&#xA;+ybgOxV2KuxV5n+ankq58x+XY7N3pqMFyLizRHCxv6hCyKxZTvw5FffMDsiWXT8QzV6pE7ef7XIz&#xA;4BmFw6BRtPI3liPzVKWj0304Yke10aOytldVaoE0kjBpHbkjUpQDMs5pnHe/vsp8OAnW3upOnS5/&#xA;xPGlpq8cUMcSveaK0MZLI/NUlSQcZAeSb/aG3bKgPRZHxbCfXV9OSG/J3yenlfRrq3dmN9dztLcx&#xA;8uUcYRisap7+mRy67/LMvJqBklt0cT8scY36vQcixdirsVYvrsd0mlTQSxrNcSSiWFUO533C8qb0&#xA;Bpmm0uLNCEhlrilIy283baWcfEEo8gKKX2VxcDnex+jFpawrdCzUok6wuCfXdOO4oOWz1p2rtmaM&#xA;EhHi/hWeoxyl4Z3yd/6F89xdSyC7DQvpwga5Nm5VppIFr+9jTj07j49x2x8CRjxfwojqMcT4f+U7&#xA;/wBCa+TWRdN9IQ+gzO0hQ0BANKcgNgeNMnpzQpr7SuU+I9zIMyXXOxV2Koe+SZ7SVIVDSOOIUmgo&#xA;dj+GYfaEMksEo4xciK+fP7G3CQJAnkxfzLp7apeaTBcIGjtRL9bTlQ0dV3FKbckxw5JjGBPaYAv3&#xA;u00WQYozlH+Kq+1KNF0/y9qv1p7ecSmKd1dIQ0RiIJQowb4usfgPbLsnHCr6tg7TMto9NjaAg0vR&#xA;NSsNQ/Rc0d1cQPRJAGT0wJWjYPXY/wB0+/hvTcZKRnGuLa27B2mJzAvYc3rGlyRvYw+kvFEUIqjp&#xA;RQAKZbCfELea1ESJm0Vkml2KuxVINVu7pLt6ymKGKjA14qABvy/XXMTLKXFTssEIcF0wvQfziXUv&#xA;zGj8swejc6RMrRpfjkHNwqF/havBk+HgPh671pmxx6eQxcUubr8048dR5PSrvT7W6IMq1Zfst4eG&#xA;Y08YlzbMeeUOTH20+OG7d5XETjqzsQu5oP15h8BunaDOZRAG4QHmaWDy7DPe3RH1gLSKPlUO7D4V&#xA;2/zpluPTylPh/FOu7Q7Xjg0xyc+kR1lLoHi2v+ZNS1mWL6y6iO3qIY41CKCepoO5pmQYRiTw8nP7&#xA;MGfwInP/AHpFy8vL4fezH8vvzWmur1vL2rSxW3oRRx6bOxbnMwFGWSRmILHbhQDw3OTz4JDGJR+L&#xA;iicfFlE9+z1LTJLkyMjsXQCtTuanv8vbMPDIktuojGrHNMsyHEdiqnPCkqEFQWoeJPY5GUQQzhMg&#xA;pD+jkNy9wvFLoIUEsrKoUEjarEbcqbVzFiCdnYeLsLFjyG6+bSHhvVe4QC+CKrFSDt1psTtXemMo&#xA;yieEsYZ4yjcfpTqCFIkACgNQciO5zJjGg4M5klVybB2KuxVTmhSVCCoLUPEnscjKIIZQkQWOHSWM&#xA;T2wuXS1QH/RpHjWIU2ClmCuVHTjzpTbpmMOI+l2IyCwas+V/j7FS40S5iAs7maURMP3lmrIYyH/Z&#xA;5AFwv+TzpQ+GMhKPpLGGaMvVH5p9BAkSABQGoORHjmRCNBwZzJKrk2DsVSC+1I2nq3d5crbW8FTJ&#xA;I7BY1QeNTQU6e+YlyMqHNz+GAixj8u/zUbzT5l1XSWjjW1t1MumTqGWSSJH4NzDE1J5BhQCg7Zs8&#xA;mmMIAnn1dYMwlMgJ15v1ldO1bSkLcYZDIbo/5JAVCf8AVJJzDnCx5u77O0/iY59+1IjTdDVJGOnC&#xA;FZbuTnKKxI0poSx24ljvWuUxjKe3P4tOTLCNmQr3A/akXmB7TQLCeOy4w3d3JUCNUG4NWc8QK+Fc&#xA;MAZHfo5+iwjJK6HCHo1hJHLZQTRqFSWNZFUCg+MBv45lgU83lBEyD0Kvha3Yq7FXzr+fPl/XdK12&#xA;bVI725fRtdK+tEJGEazRIF9J1B4kcUBSo8fDNnoxCY3Hqi4+aco8uReY6Tfz6XqVpqFttPZzJPF/&#xA;rRsGFfuzPMARTicRu311qfnTQ7DSLDUpJ1K6r6Q02ItQzNOAUp1oAGqzdvuGc5muEZSongBJrydp&#xA;CpEC/qSrWtQF7o9jqUV21peGaWCaBDHsUG68ZA/KgANff3zXabVx1GEZAN7ojudzg0hjmljNmIAI&#xA;PvQd/baDN5f06bUVj1e7knnJEzqvBU3fk0QAQABaqRg1naA00I7WZnkO78dGqeh485JFeFG4yI5G&#xA;Xd7+8dzE9a0D8v7byff+cNL5T20ltxsrV35Rx3EhCLUfb5I53Ut45uMWEnIIkOLk7Ql4dgvCJB6h&#xA;Jfcnck9c33CKp0XGbu93u/5DaHrjpceZdTvbiWCaH6jYQzSM4MaOGZxyJoFZeK0/ys0+t4InhiPM&#xA;ux08pSHFJ6/mC5LsVSjzN5n0vy7p/wBcv5AvN1it4agNJIxoFWv3k9hkowJuhyFsZSA5oa6t7nzF&#xA;5fa4sWmt9QtropcRWzBXCAMAK0qwIZTmv7P1Y1OLxIj1A0R+Pxzc6cI4cwhM+iUbB/Hxbtra68ve&#xA;XfrV881xqNzchLaO6bk5VgoIrSq0Cs2Ov1Q02LxJD1E0B3rCEc2bgxn0CNk/j4Ijyz5m03zDp5u7&#xA;JxyikaG5gJBaOVCQVNOxpVT3GZ5iQAT1FuCJA35JvgZOxV2KpX5g8x6XoNolxfzLH60iQW6MaF5H&#xA;IAA9hWrHsN8SDwkgE8IJ28kWAQCebHfM/mCyl0S2kkmns757ySJ/qpoVSNSQGb7RDK6nYZHsSEu0&#xA;cUp4wOOB3B+z8bN2qyw0mURyk+HIWCPx71vlbzBYx6PfzJcXF5fxXECRi6NeQnBoFbZhQI5O2S7a&#xA;xT7PwjJlEeKRoAfj9aNLnx6vLwYr4IiyT+PgyPy/5j03XbaWaykDPbSvb3UYNTHLGaMK7VB6qe4w&#xA;QswjIgjiAO/m12LIHQ0muFXYq+XPzT0HXNB8wXGn3d7c3OlXcr3tl6sjGNjIxLEr9j1FZiGIHv3z&#xA;daUQmOID1cnXZ5zieG9kv/LzXf0F5x0u/LcYBMIrjw9Kb925P+qG5fRl+ox8UCGjFOpgve/zFOkX&#xA;Vxp+nNcKutSCSS2txuzRKtX5U6fZ+Gvv75y2tznBhll4eIR/S9V2XrPDycH879Dd1pH6N07TptL1&#xA;O8+qXlvyqzRsA37SgFDx41ptgjljOEZx5SF/sb4SObJMZABKJrb70u83+XdH0ySzuL6+uTxtkudX&#xA;eYiRo0+EcUooPI/FQZVl1gx6jHgAuU+7pf437gz03aM44ZyqPDAkR8/M/Z73ptjLZy2UElk6SWbx&#xA;qbd4yGQx0+EqR1FM2RFbPOGXEb71fAh2KuxVKPNflqx8yaDd6PeCkdwv7uWlTHIN0kX3Vvv6ZZiy&#xA;GEgQxnHiFPkHWtIvtG1W60u/T07u0kMcq9qjoQe4Ybg+Gb6ExIWHXSFGll1q2pXQtFuLmSVbKMQ2&#xA;gZjSJFNQqeG+PAO7mtn5Pe/Idz5b8ypYXWvQiaGeJwQXdFju0CpKSIyPthARXPN8PD2frZ4cm2KW&#xA;4P3fqPm9ri1+eWlE8Bqe3FsP0+f3pF+ZmoaRomm6jBosZggv5WtbSPkzfDQfWJBzJNCAE+7LuzID&#xA;Xdo+IP7rFuP978z6vcGntbW5RpojIbyzG/Ll8PL73kEep36afLpyTutjNIs0tuD8BkjBVWp40b/O&#xA;mehcIJvq8hZApN/I3lO680+YrfS4qrCf3l5MP91wKRyb5mvFfcjIZ8wxxtnix8cqfV9lZWtjZw2d&#xA;rGIra3RYoYl6KiigGc9KRJsu3AoUFfAl2Kvln81fMl1rXnS/5ylrWxle0s4wfhVYjxYr/rspYnN9&#xA;pcYhAebqc8zKR8noflrzPdal5Jv/AE4zc3Gp2E+nXMAbjW7SMiNixI3ZWr170zg4V2Z2kYyPDhnv&#xA;7geXyNx+16KQOs0djfJj/B/QXa/5nudL8j6eJojaXGk2EVjbwF/UP1yVKOwarfZUcqV2G2OYjtPt&#xA;KMIniww3PcQOfzNR+1cYOj0Zkdsk/wAD9bzr8rfMt3onnOwZJWW1vZktb2Ovwukp4gsP8hm5A53m&#xA;qxiUD5PO4JmMh5vqjNC7Z2KuxV8yfmJqHmDzd511KOyt7i/ttMd4LeC2jeVY4o29NnogNObipY+w&#xA;8M3umjHHjBO1uqzSM50Hqf5eeapNJNhceYIZbSS4iMF6s0TlxLAPhnoFLbo25Hic4fDjlo9dPg/x&#xA;efmK35e+jtXc9QNJk1mkG37zH37c/f380N+af5h2vr3N1p4EkFtGYbO4UqPUuZFA9Wh3YICBmRqN&#xA;IdfqoRMv3cOlHle/xNVXxZw0ctFop5JbZJVt8aA9/Wu4PJfy08z3mg+b7GWOUra3cyW99GT8LRyN&#xA;x5MPFOXIZ2WpxCUD5PJYMhjIPqvNA7d2KsT/ADK8lxea/LktqigajbVm0+Q7UkA3Qn+VxsfoPbMj&#xA;TZvDlfTq058XHHzfLEsUsMrxSoY5Y2KSIwoyspoQQehBzfg26lHr5i1Y67FrU9w9xfxyJKZZGJLc&#xA;KAKf8niKU8Mxs+lhlxSxEemQpthllGQn1BfTvkLzDok+nNDe8XsiF1DTjIOVBIKstOxVq7Z572Vr&#xA;Y6Qz0+o24Ca+HOvvD0+uxTyiObD/ABjhLyf84/NMl0pt+VJtVl+tTL/LbxHjAnyJFfozYezGGWo1&#xA;GTVz90fef1R2+LjdsTGHHDTx6Df8e/7k0/5x283XRu7ryxcSF7Zo2urENvwZWAkRfZg3KnsfHOq1&#xA;2MUJh02nlvwvd81jlOxV2KuxV5Z+dH5YXfmRIdZ0SJZNXt19O4gqFM8I3UgsQOaH7wfYDM7SakQ2&#xA;lyaM2Li3HN4PrvlHzHoKW8msWL2S3JdYBKVDMY+PKigk0HIb0zZQyxkdjbiGJiN2S/lZrDR3c+jt&#xA;MIvrH+kWbsdlmjFGH+zj/VnI+2HZ5yY45oizDY/1T+o/e7zsLViEzCX0y/H49yVfmFrAv9ea3ifn&#xA;a6ev1eNh0Zwayv8A7J6/QBmy9mdB+X0oJ+vJ6j+gfJxO19V42c1yGyF0byL5s1mzS80vTZLq2d2j&#xA;WWMpQMpFQ1WHHr3zdSzwiaJpwBilLcB9C/lb5CHlPQytyFbV7wiS9ddwoH2IlPcL+sn2zT6rUeJL&#xA;bkHY4MXAPNmmYze7FUHrOox6bpF7qMlOFnBJOwPQ+mhan4ZKEeKQHexlKgS+N5pXlmaSRuUjsXdj&#xA;1JO5OdI6ZmP5Zaz9W1WTTZJPTivwPRc9EuIvijP07r92ct7Wdn+NpxkiPVj/ANyef6/m7jsTV+Fl&#xA;4T9Ml35naybjU4tLjkEkdiC07r0e4l+Jzt/KtFH05H2S7P8ABwHLIVLJ/uRy+fP5J7c1fiZeEfTF&#xA;hcbvHKHRuLqQysOoI6HOrdN0fZGiakmp6NY6ilON5bxTgDt6iBqfRXObnHhkR3O5jKwCjciyQWta&#xA;immaPfai/wBizt5ZyPH00LU+mmShHikB3sZSoEvCPyN81T2Ot6npn1Fr2TW0Qy3QYKYBCXZpGqDU&#xA;Eyb7jembbtEDwjZdfowTlFPUW8y+Q08wR6HrV5Gt1JsICshAdgSgLoKITyr1BzQ49P6DkmP3Y59f&#xA;sd3l1soHhgfWfx12+C+18teWLmA2f1e3k0+ZjHIQFcUPwMeZ5Hku/wAVajKsWQiQkDTl6vPPNE8f&#xA;q/H2PD/zb8qaD5S82DSNFe5kjWCO4eW4kRyGkJIVOCJsABuc6vBlMxu8lKFB9H+XNUGraBp2pAgm&#xA;8t4pmp2Z0BYfQ1RmiyQ4ZEdzt4SsApjkGTsVeLfm7+VGp32qnXfL1t9Ya5/3vtEKq/qD/dqA0ry/&#xA;a71377bPR6sAcMnB1GnJNxeRa35f1jQ7tLbVrZrS4liEyROVLcCzKCQpNN1OxzY48kZ7jdw5xMdi&#xA;z/8ALLWPrOlTaXLcrbyWPJ0dyADbS7yKK/yuK/Tnn/td2bLxo5oC+PY/1hy+Y+56fsLWxjAwn/Du&#xA;GC+ZtYOsa3dXw2iduNunTjEg4xin+qN/fO07L0Q0unhi6gb+/r9rz2r1BzZTM9U4/KXU/wBHfmFo&#xA;kxNFln+rN/0cKYR+LjL9RG8ZYYzUw+tc0bnuxV2KuxV2KvBf+clrjlqOhW1f7uGeSm3+7GRf+Zeb&#xA;Ts8bEuJqTuHjGbFxXYq+hP8AnHq45+T72Empiv3I6U4vFER+IOabtEese52WjPpPveo5gOW7FXYq&#xA;w384J5Yfy41l4m4sVhQkfyyXEaMPpViMydGLyj8dGjUn0F5L5D/J+XUDp+tatLE+kzx+v9TUyCV+&#xA;QPBWIC8R0aoPt75PVdocJMY/V3tmn0dgGXJi3njyvceXtentmUCzmd5bF1PIGEuQqk/zKNmGbLSa&#xA;gZYA9evvdfq9OcU6I2PJryT5XufMWuQ2qKDaROkl9IzcQsPMBgD/ADMNlGOr1AxQJ69Peul05yzo&#xA;DYc2V+fPyfksW1DWtJlii0mCIzmzYyGReIHNVJDVHU7t7ZrNL2hxVGX1d7sNRo6BMeT1j8nZZJfy&#xA;30ZpG5MFnQH/ACUuJFUfQoGR1g/en8dGvTH0BmeYzewz84ppIvy31l42KsVhQkfyvcRow+lWIzJ0&#xA;Y/ej8dGnUfQXl/5ValpPl/yNrfmOZA14twYFqficCNDFGPDk8hrTt8sOshLLmjAcmzTTGPEZl5pf&#xA;XtzfXs97dOZLi4dpJXPdmNTm7hARAA5B005GRJPMp/5E87XvlfUxIC0unTEC8tQeo/nQVA5r2+7M&#xA;bWaQZo/0ujkaXUnFL+j1Zr+c1j5dvvLlj5osuL3NxLHBFcxH4ZI2V3o48VKH3HQ5q9BKcZnGejs9&#xA;ZGEoCY6vQfyVnlm/LrTfUbl6bToh78RM1B9GS1o/eFo030BnOYre7FXYq+bPz2n9Xz/Mn++LaCP7&#xA;1L/8b5u9AP3bq9WfW89zNcZ2KqtndS2l5BdxGktvIksZ/wApGDD8RgIsUkGn2vaXMV1aw3UJrFPG&#xA;ssZ8VcBh+BznCKNO0BVcCuxV2KuxV85f85GXHPzrZwj7MOnx1H+U00pP4Uzb6Aeg+9wtT9TyvM5x&#xA;3Yq9w/5xxuOVnrtt/vuS2k/5GLIv/MvNT2kNw7DRci9lzWua7FXYql3mDQ7HXtGu9IvgTbXacHKm&#xA;jKQQysvurKGGTx5DCQkOjGcBIUXz4vmjz1+Xmty6JqDfXbOBeNtDcElGhBIjkhYEsoIXp0HSmZ50&#xA;ePOOIbNA1c8Wx3SHzt50uPNN7BcSWy2qW6FEjDFzVjViWIX9WZek0gwggG7cbV6s5iNqpryV5yuP&#xA;K19Ncx263Uc6BJIixToaqQwB/Vjq9IMwAJql0mqOEk1dsgfzZ57/ADC1mLQtOYWVpcArcQ25IUQk&#xA;gSPM5PJlCncDr0pmINHjwDiO7knVzy7DZ9A+XdCstB0W00iyr9XtE4qWNWZiSzsfdmYnMDJkM5GR&#xA;6t8ICIoJlkGSVeafL9t5h8v3ujXLFI7uPiJB1V1YOje/F1Bp3yeLIYSEgwyQ4hT5V1rT/MegqfLu&#xA;qxNaxxzPdLCRtIxHoiUH9paRkKfnm7wCMjxj3OvzTkI8B96U5lOK7FU30qDzPrlsvlrS0kvIGmW7&#xA;FqtCEdQYvUqfsrSX4u3fMTNGEZcZ58nKwzkRwfF9S+UfLdt5b8vWejwMZBbJ+8lP7cjHk7U7AsTQ&#xA;ZpsuQzkZOwxw4RSc5WzdirsVfLP5tz+v+YutP4SRx+H93Cif8a5v9IKxB1OoPrLEMyWh2KtV/DAm&#xA;n1t+VOp/pH8vdEnJq0cH1ZvH/R2MIr9CDNFqY1kLsMRuIZZlDY7FXYq7FXy7+etx6v5kX6f74it4&#xA;/vhV/wDjfN1oh+7DgZ/qYBmW0uxV6z/zjpclfMOrW1dpbRJKf8Y5Qv8AzMzW9ojYFztGdy98zUue&#xA;7FXYq7FXzV+elz635g3Eda/V7eCPttVPU/43zd6EVjdXqj63n+ZrjOxVn35HXPpfmFaR1p9Yhnj6&#xA;0rSMyf8AGmYeuH7suTpT630vmjdo7FXYq+bPz2uPV8/zJ/vi2gj+9S//ABvm70A/dur1Z9bz3M1x&#xA;nYqzz8kLj0vzEsU/3/FcR/dE0n/GmYeuH7ouTpT6w+mc0btHYq7FXYq+RvPVx9Y86a7LWoN/cBT4&#xA;qsrKvX2GdFgFQj7nTZTcj70jy5rdiq0dT8/4YAyPR9E/845an6/lbUNPY1ezu/UA8EnQUH/BRtmq&#xA;18akD3hy9MdqetZgOQ7FXYq7FXyV+a9x9Y/MTXZK143Hp/8AIpFj7/6ub7TCsYddlPqLE8va3Yq9&#xA;K/5x/n9PzzMn+/7GVAPcSRv/AMaZgdoC8fxcvSH1PovNM7J2KuxV2Kvlf82Lj6x+YetSVrxlSPt/&#xA;uqJI+3+rm/0grEHUag3MsSzJaXYqyv8AKu5+rfmFoklacpzF1p/eo0f/ABtmPqxeMt2nNTD6qzn3&#xA;buxV2Kvlj827j1/zF1p/CSOPw/u4UT/jXN/pBWIOp1B9ZYjmS0OxVlP5XXH1f8wNEkrTlcen3/3a&#xA;rR9v9bMfVC8ZbsBqYfVmc+7d2KuxV2KvjPU7n61qV3c1r680kla1rzct1+nOmiKADpJGyhskxdir&#xA;0T8uPyxsPMWnS6rqV08dsJDFHDAVDEoAWLswag36UzVa7XnFLhiN/N2Wj0Qyxsn5PcvIPk/y55et&#xA;7ptHgaGS4KJcs0kj8/SB41DsQKc26DNeNTPKPUeTkZdPHGfSOYZXi1OxV2KuxV8becrn6z5u1u4r&#xA;US39y4Na7GZqUPhTOhxCoD3OtmfUUnyxg7FWd/kfc+j+ZWmKTRZ1uIia0/3Q7D8VGYusF4y3YD6g&#xA;+o3hVvY5oyHZCRCi0Tr2qPEYKZiQKzAydir5D863H1jzhrk3Z7+5K/6vqsF6e2dHgFQj7g6bKbkf&#xA;ek2WtbsVTfyfc/VvNmi3FaCK+tmbemwlWu/yyrMLgR5FsxmpD3vr7Ocdy7FXYq+RfPFx9Y85a5N2&#xA;a/uOP+qJWA/AZ0WAVCPudNlNyPvSTLmt2Kpr5Sufq3mrRritPRvrZz16LKpPTK8wuBHkzxmpD3vs&#xA;IRyH9k5zdO54g36MnhhpHGGxbv7Y0jjCH1Q/VdMvLotT0IJJa9KcELdT8slGFkBjLJs+Ls6V07sV&#xA;dir1r/nHhxca1q2lyu3oS2on4A/tRyKlR9Eu+aztLEJRBPe52hzyhI0+g4LeGBOES8QTU+58Tmsj&#xA;EDk5U5mRsqmFg7FXYq7FXy/qH5LfmS8lzeSacjci8zKs8LMaksQAGqT8s3Q1mMDm4PgTLG9D8jea&#xA;ta1FtPstOlW6VDIyzqYAFWgPxScRXfpkzqsYF2v5efctl8leaY9abRv0bO98kohZY0Z05EgV9RQU&#xA;47/arTH81jq7X8tPueh+Qvyk8/6J5w0rVLuyRLW2mDTus8LEIwKsaBiTs2Y+fVY5QIBZY8MhIF9B&#xA;5qnMdiq1o0bqN/EY0yEiFJrc/smuR4WYm+VPN/5c+c9GWXVtUseEFxcEBo3SVucnJxVYy3gc6DBm&#xA;jP0xskDudVkxmO5STRPK+va1qEVhYWcjXE/P0/UHpofTXm3xvRdh75bkPACZAgDyYQjxGhS7XfKf&#xA;mDQ76Sy1CykWaIIXMY9VB6gLKOaVWpAPfHFLjFxBI9yZx4TRTfyp+XfnLWIo9V0uy5QwThaySJC3&#xA;OPi+wkIPcb5VnzRxnhnsa7mePFKW8d31RnPO3dirsVfLfnD8ufOWkJc6zqVkEtZrg/HHIkh5SsWH&#xA;wqWamb7FqYS2BdLnHh+qZER5lIdB8ta1ruqRaZp1sz3cwYor/u1oilzVnoo2GWzyxiLLRjzY5y4Y&#xA;yiT5EN+YPK+uaBqb6bqds0d0iq7Kn7xaOKijJUYwzRkLCcmaEJcMpRifMgJz5T/Lfzprtuuq6RZC&#xA;SCCfhyklSE+pHxfo5Vv2hvkMmohHYltw/vBcCJDyL60zROzdirsVSzzRa3l55a1a0sV53lzZzw2y&#xA;kgAySRsqbtt1PfJ4yBIE8rRMWC+ZtT/Jv8wdNsJr6fTecMA5OsMkc0lKgbIhZj17DNwNZj73C/Lz&#xA;7kt8ufl55u8wyXEenae/O2CmUTkQfaJAp6vGvTtkparGOq/l59yH0fyV5p1fUl06y02drhiw5Ohj&#xA;jHAFjykcBF+ztU74nVYx1X8tPuet/lB+W3nTyx5sa/1S0SGzktZIHdZo3NWZHX4VJJ3TMTVaiE4U&#xA;Du2YcUomy9rzWuU7FXYq7FXYq7FUn0teF+6/yhh9xGYmEVJz9QbgC4Jy1ing9fuFcavIt1i+CcZl&#xA;uA7FXYq7FXYqwv8ANr/lFk/5io/+Ivm99nv8Y/zT+h13af8AdfFiH5bKG1rTAenqXv8AyYjzd9uf&#xA;3M/83/dFwOzj+8j8fuRX5mKFu9RA6erp/wDyZucq7C/u4/5/3xZdpG5n/N/SyH8qIefldzWn+kyf&#xA;8RTNR7RD/CP80fpdh2VKsXxZl9XP834ZoeF2XG2Lcdzh4V41yxIO1fnhpiZFh/5t/wDKHSf8Z4v1&#xA;nMnS/W857Uf4of6weeflV/ymtp/qTf8AJpsy9T9BeT9mv8cj7pfcVX82/wDlMZP+MEX6jg0v0Nnt&#xA;R/jZ/qhnH5O/8ok//MVJ/wARTMbV/X8HpfZX/FT/AFz+hnOYr0jsVdirsVU7lOdvIvipp92RmLBZ&#xA;4zUgUu0T7UvyX+OY+n6uVq+QU9KSt6zfygn7zTBgHqZ6k+hOcy3XuxV2KuxV2KuxVAavrulaRb+v&#xA;qNzHbIa8fUdUrTw5EZKMJSNRBkfJEpwiLlIRHmaYX5e86rrnnsWelNy0yG2luL2Yoy8ncgRoOYUg&#xA;b8q/tZlHs44cJyZNpylQF9OrifyoM+YYsW+OMbkaPPpz/BULP8wrbTfNmr6b5gkED210xtJyhCNb&#xA;S7xcmUcVKgj4mpX55LL2ZIxhlwjiBjuOt9aY4O1oiU8Oc8Moy9JrbhPK/wBZro9CsNQsr+2W5s5k&#xA;ngbpJGwYfeKjMIgjYgg+bnAg7ggjvG4RGBXYq7FXYq8Z/Nr8zNIuFbQNOX6zJbzhrm55ARq8YKlF&#xA;7sQTuenzzbdmzngl4g7nG1OIZI8JQX5MaodS80CBwsaWNvcXSEGpZpDFCVNe1DXMrtHtGeTGQQPV&#xA;X2btOn0UYSBBOyp+dGttp/mL6mipJHe29tdOxNCrRNPEqinajEnI9m6+eOAAA2v7aP6E6nRxnKza&#xA;I/Kb8zdItlXQdRX6q9xMWtrrkDGXcBQj9OO42PT5Zj9pTnnl4h7qbdNiGOPCHs+alyXYq7FXjn5p&#xA;fm7oStLoFjZpqjwyD61NKzLArod1TgQzsDsTWnzzPwaWRF3wuu1hx5BwSjxx87r7Eu/J7zNZ6r5w&#xA;EH6LtbN4raWVJoml5AgqlPjdhuHPbHU4jCN8RPyaNFo9PHJxQxRjIdRxfpKt+dHmS00nzXBD+jLa&#xA;9aayjmeaZpQ1fUkSnwOopRBjpsRnGxIj5J12kwSyXPGJyrmeL9BVvyt/N3Q1kXQr6yj0v6zLW2nh&#xA;ZmhaSSihZA5ZkrQfFWnjTHPpZVd8TbojixDghHgiT0v9L2jMB2TsVdirsVYzL+YHlzjOYbqNhbsU&#xA;lZ24bj+VSOTivgN8qllrkHbx7F1G1xPq+P8AYh/JHmW01i41AW6lYrURD1H+EuZOe4FTQDhkcMat&#xA;t7X0EsEYcXOV/Cq/Wl3l/wDMLSZJ5I5SsFwSVMcp4KSp3Kybj6DTIRJge9y9b2JlEQRvHy/UyzRf&#xA;Mekaz9YGnziVrVgswHblXiQRUEGh3BzJjK3SavQ5dPXiCuLkmeFw3Yq7FXYqgrrTFuHLG4mSv7Kt&#xA;8I+jISx31cjHqOEVQSm/8j6VfvE96qXJgqYjNGsnEtStOXStBksZyY7EJGN86Tly48tGeOMq5WLp&#xA;0fkuzjupbqNkS5mAWWYRAOwUUUMwNTQZCUZmIiZHhHINkdTCMjMQHFLmepr4LW8jac8000gieS4T&#xA;07hzCpMiDbixJ3HscI8QAASNRNjyPkxlnxEknHG5Cjy3Hcdtwq2HkzT9PiMNkRbQli3pwoI15Hqa&#xA;DHKJ5Dc5GR80Ys8MceGEIxHcE1tNOW3bkJ5X/wAlmqv3YxhXVhkz8Y5AIvJtDsVQV1pa3DljcTJX&#xA;9kN8I+QyEsd9S5GPUcIqgw1/yS8iMxb6ilTua8+p/wBnlvi5P5y+Jj/mBF6R+VXlzR7prrTIktp3&#xA;QxM6qxJQkMR8TnuoyvJxzFSlbZj1EIG4wo+92r/lV5b1i6S61OJLqdEESuysCEBLAfC47sccfHAV&#xA;GVLk1EJm5Qs+9CL+SPkMGv1BKjpTmP8AjfLPFyfzmrxMf8wM0tNOW2bkJ5X/AMl2qv3ZVGFdVyZ+&#xA;PoAi8m0IO701bhyxnlSv7Kt8P3ZCUL6uRjz8I5Bhj/kj5DZi31FKsakkv1P+zy3xcn85HHj/AJg+&#xA;ZROlflP5Z0i7+t6bCltccSnqBXJ4t1HxOR2yvIZzFSls2Y9RCBuMN/eu1f8AKry3rN0l1qcSXM6I&#xA;IldlcEICWA+Fx3Y44+OAqMqTk1EJm5Qs+9Br+R/kIGpsU9qGQf8AG+WeLl/nNRnj/mD5lmlrpi27&#xA;hhPM9P2Wb4fuyqOOuqcmo4hVBGZNx3YpS6fRVlJP1mbfsW5DKjivqXKhqq/hikzfl1oRmM3pp6hb&#xA;nyMYPxVrWlaYPB83PHbmaqs170TD5OtoWdoZFjaSnMrEBWgoK0bI+B5tUu1JSqxdeahJ5A0mWP0p&#xA;VjaPkX4iID4iSSevucPg+bYO2soNi796vp3kvTdPDC0YwByC/pgKTTpU74fB82rP2rky/VvXenVp&#xA;aC3BAlkkr/vxuVPllkY04GTLx9APcr5JqdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:915d58ef-2310-8149-9666-6b4380f10d15</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:915d58ef-2310-8149-9666-6b4380f10d15</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d1134cd8-5253-ae4a-bfb6-9afea0e1d099</stRef:instanceID>
            <stRef:documentID>xmp.did:d1134cd8-5253-ae4a-bfb6-9afea0e1d099</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1bb41258-9ba8-6f40-bc81-73aa498d47eb</stEvt:instanceID>
                  <stEvt:when>2021-04-30T09:12+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:915d58ef-2310-8149-9666-6b4380f10d15</stEvt:instanceID>
                  <stEvt:when>2021-04-30T12:18:57+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2500.000000</stDim:w>
            <stDim:h>1600.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1600 li
2500 1600 li
2500 0 li
cp
clp
2500 1600 mo
0 1600 li
0 0 li
2500 0 li
2500 1600 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.996078 .898039 .85098 rgb
f
517.211 1076.63 mo
517.211 1076.63 1082.46 1411.48 1430.57 1241.53 cv
1778.69 1071.57 2138.3 1244.94 2188.56 943 cv
2238.81 641.064 1958.05 9.57111 1564.94 179.286 cv
1387.56 255.865 1243 232.095 1101.28 208.324 cv
928.929 179.415 760.776 150.506 542.891 302.111 cv
145.85 578.372 325.446 1043.12 517.211 1076.63 cv
.996078 .847059 .792157 rgb
f
605.528 1424.85 mo
605.528 1435.31 508.169 1443.79 388.071 1443.79 cv
267.974 1443.79 170.615 1435.31 170.615 1424.85 cv
170.615 1414.39 267.974 1405.91 388.071 1405.91 cv
508.169 1405.91 605.528 1414.39 605.528 1424.85 cv
cp
.988235 .662745 .584314 rgb
f
305.771 592.952 mo
252.05 648.417 li
206.842 507.943 li
95.915 569.679 li
202.827 740.583 li
214.515 759.971 236.218 769.545 257.267 764.601 cv
280.31 759.187 li
305.771 592.952 li
cp
.247059 .254902 .403922 rgb
f
119.663 533.03 mo
101.85 549.111 92.5361 561.94 95.915 569.679 cv
99.2939 577.418 116.2 581.975 137.896 574.79 cv
175.699 562.272 216.718 530.559 206.842 507.943 cv
196.967 485.327 150.698 505.013 119.663 533.03 cv
cp
.254902 .211765 .32549 rgb
f
182.243 489.834 mo
179.842 479.229 171.341 485.648 164.513 493.07 cv
160.307 485.671 153.553 479.823 143.354 478.109 cv
117.731 473.802 89.3481 496.891 94.543 524.408 cv
99.7383 551.925 128.529 556.232 128.529 556.232 cv
169.193 528.358 li
169.193 528.358 186.435 508.353 182.243 489.834 cv
cp
.988235 .741176 .623529 rgb
f
123.489 481.822 mo
143.85 510.842 li
144.598 511.634 145.804 511.626 146.543 510.826 cv
147.282 510.025 147.275 508.734 146.527 507.943 cv
126.318 479.091 li
126.282 479.042 li
124.971 479.393 123.676 479.807 122.4 480.277 cv
122.729 480.813 123.089 481.33 123.489 481.822 cv
cp
.968627 .572549 .521569 rgb
f
103.784 495.03 mo
103.492 494.666 103.234 494.279 102.994 493.882 cv
102.11 494.94 101.279 496.039 100.506 497.173 cv
100.651 497.372 100.8 497.569 100.956 497.761 cv
121.317 526.78 li
122.064 527.572 123.27 527.565 124.009 526.765 cv
124.749 525.963 124.742 524.673 123.994 523.881 cv
103.784 495.03 li
cp
f
463.065 592.952 mo
516.785 648.417 li
561.993 507.943 li
672.92 569.679 li
566.009 740.583 li
554.321 759.971 532.617 769.545 511.568 764.601 cv
488.525 759.187 li
463.065 592.952 li
cp
.247059 .254902 .403922 rgb
f
649.173 533.03 mo
666.985 549.111 676.299 561.94 672.92 569.679 cv
669.542 577.418 652.636 581.975 630.939 574.79 cv
593.137 562.272 552.118 530.559 561.993 507.943 cv
571.868 485.327 618.138 505.013 649.173 533.03 cv
cp
.254902 .211765 .32549 rgb
f
586.593 489.834 mo
588.994 479.229 597.495 485.648 604.322 493.07 cv
608.529 485.671 615.282 479.823 625.481 478.109 cv
651.104 473.802 679.487 496.891 674.292 524.408 cv
669.097 551.925 640.306 556.232 640.306 556.232 cv
599.642 528.358 li
599.642 528.358 582.4 508.353 586.593 489.834 cv
cp
.988235 .741176 .623529 rgb
f
645.347 481.822 mo
624.985 510.842 li
624.237 511.634 623.032 511.626 622.292 510.826 cv
621.554 510.025 621.56 508.734 622.308 507.943 cv
642.518 479.091 li
642.554 479.042 li
643.864 479.393 645.159 479.807 646.435 480.277 cv
646.106 480.813 645.746 481.33 645.347 481.822 cv
cp
.968627 .572549 .521569 rgb
f
665.051 495.03 mo
665.343 494.666 665.601 494.279 665.841 493.882 cv
666.725 494.94 667.556 496.039 668.329 497.173 cv
668.184 497.372 668.036 497.569 667.88 497.761 cv
647.519 526.78 li
646.771 527.572 645.565 527.565 644.826 526.765 cv
644.087 525.963 644.094 524.673 644.841 523.881 cv
665.051 495.03 li
cp
f
405.449 1210.01 mo
405.449 1363.68 li
439.823 1363.68 li
450.063 1299.18 457.836 1249.02 463.729 1210.01 cv
405.449 1210.01 li
cp
.988235 .741176 .623529 rgb
f
437.66 1242.81 mo
445.083 1241.96 452.309 1240.69 459.306 1239.06 cv
460.886 1228.75 462.359 1219.08 463.729 1210.01 cv
405.449 1210.01 li
405.449 1243.75 li
415.873 1244.34 426.661 1244.07 437.66 1242.81 cv
cp
.254902 .211765 .32549 rgb
f
363.386 1210.01 mo
363.386 1363.68 li
329.012 1363.68 li
318.773 1299.18 311 1249.02 305.107 1210.01 cv
363.386 1210.01 li
cp
.988235 .741176 .623529 rgb
f
331.175 1242.81 mo
323.753 1241.96 316.526 1240.69 309.529 1239.06 cv
307.949 1228.75 306.476 1219.08 305.107 1210.01 cv
363.386 1210.01 li
363.386 1243.75 li
352.962 1244.34 342.175 1244.07 331.175 1242.81 cv
cp
.254902 .211765 .32549 rgb
f
451.214 586.218 mo
410.965 573.948 li
384.427 573.948 li
357.889 573.948 li
317.64 586.218 li
301.694 591.079 290.215 606.578 288.965 624.934 cv
235.838 1226.1 li
384.427 1226.1 li
533.016 1226.1 li
479.889 624.934 li
478.638 606.578 467.159 591.079 451.214 586.218 cv
cp
.247059 .254902 .403922 rgb
f
394.279 778.067 mo
471.093 600.559 li
471.084 600.547 li
466.063 593.755 459.199 588.652 451.214 586.218 cv
410.965 573.948 li
384.427 573.948 li
357.889 573.948 li
317.64 586.218 li
309.801 588.608 303.046 593.572 298.051 600.179 cv
298.05 600.179 li
375.028 778.067 li
378.762 786.696 390.544 786.696 394.279 778.067 cv
cp
.980392 .713726 .215686 rgb
f
392.843 747.341 mo
455.696 587.917 li
454.246 587.257 452.751 586.687 451.214 586.218 cv
446.267 584.71 li
391.784 722.904 li
389.01 729.941 380.255 729.941 377.48 722.904 cv
322.954 584.598 li
317.64 586.218 li
316.231 586.647 314.858 587.164 313.523 587.754 cv
376.44 747.341 li
379.622 755.412 389.661 755.412 392.843 747.341 cv
cp
.980392 .458824 .0862745 rgb
f
397.505 678.145 mo
442.135 583.45 li
410.965 573.948 li
384.427 573.948 li
357.889 573.948 li
327.116 583.329 li
371.802 678.145 li
377.038 689.255 392.269 689.255 397.505 678.145 cv
cp
1 1 1 rgb
f
356.82 516.338 mo
356.82 584.617 li
356.82 599.858 369.176 638.36 384.417 638.36 cv
399.659 638.36 412.015 599.858 412.015 584.617 cv
412.015 516.338 li
356.82 516.338 li
cp
.968627 .572549 .521569 rgb
f
356.82 516.338 mo
356.82 569.455 li
412.015 569.455 li
412.015 516.338 li
356.82 516.338 li
cp
.254902 .211765 .32549 rgb
f
255.818 411.186 mo
250.554 411.186 li
245.29 411.186 li
234.133 437.708 li
233.049 440.286 234.339 443.208 237.046 444.284 cv
239.455 445.243 242.857 446.237 247.382 446.776 cv
249.484 447.026 251.624 447.026 253.726 446.776 cv
258.251 446.237 261.654 445.243 264.062 444.284 cv
266.769 443.208 268.059 440.286 266.975 437.708 cv
255.818 411.186 li
cp
.980392 .698039 .176471 rgb
f
381.675 364.815 mo
208.1 307.176 li
202.851 305.433 202.851 298.789 208.1 297.046 cv
381.675 239.407 li
387.392 237.509 393.68 237.509 399.396 239.407 cv
572.973 297.046 li
578.222 298.789 578.222 305.433 572.973 307.176 cv
399.397 364.815 li
393.68 366.713 387.392 366.713 381.675 364.815 cv
cp
.254902 .211765 .32549 rgb
f
390.536 297.511 mo
336.973 297.511 293.552 310.517 293.552 326.561 cv
293.552 374.049 li
293.552 377.418 296.975 379.871 300.376 378.894 cv
314.622 374.8 349.62 371.906 390.536 371.906 cv
431.453 371.906 466.451 374.8 480.697 378.894 cv
484.098 379.871 487.521 377.418 487.521 374.049 cv
487.521 326.561 li
487.521 310.517 444.1 297.511 390.536 297.511 cv
cp
.247059 .254902 .403922 rgb
f
250.903 297.375 mo
250.206 297.375 li
247.576 297.375 245.445 295.354 245.445 292.86 cv
245.445 285.59 li
245.445 283.096 247.576 281.074 250.206 281.074 cv
250.903 281.074 li
253.532 281.074 255.665 283.096 255.665 285.59 cv
255.665 292.86 li
255.665 295.354 253.532 297.375 250.903 297.375 cv
cp
.254902 .211765 .32549 rgb
f
250.554 291.868 mo
250.554 291.868 li
253.163 291.868 255.278 293.874 255.278 296.349 cv
255.278 406.706 li
255.278 409.18 253.163 411.186 250.554 411.186 cv
247.945 411.186 245.83 409.18 245.83 406.706 cv
245.83 296.349 li
245.83 293.874 247.945 291.868 250.554 291.868 cv
cp
.980392 .698039 .176471 rgb
f
260.347 412.709 mo
260.347 417.816 255.962 421.957 250.554 421.957 cv
245.146 421.957 240.761 417.816 240.761 412.709 cv
240.761 407.602 245.146 403.462 250.554 403.462 cv
255.962 403.462 260.347 407.602 260.347 412.709 cv
cp
.980392 .745098 .313726 rgb
f
281.729 757.021 mo
276.515 756.599 li
283.043 664.417 li
288.257 664.841 li
281.729 757.021 li
cp
.254902 .211765 .32549 rgb
f
485.053 765.888 mo
478.042 666.901 li
483.641 666.446 li
490.651 765.434 li
485.053 765.888 li
cp
f
507.599 1039.38 mo
499.493 910.819 li
505.095 910.415 li
513.202 1038.98 li
507.599 1039.38 li
cp
f
437.931 1347.84 mo
450.912 1369.98 li
450.912 1369.98 495.505 1388.61 497.168 1405.91 cv
497.168 1405.91 425.98 1391.75 416.667 1382.69 cv
407.352 1373.64 405.449 1347.84 405.449 1347.84 cv
437.931 1347.84 li
cp
.988235 .741176 .623529 rgb
f
482.453 1402.31 mo
427.089 1382.73 li
421.728 1368.16 li
418.953 1360.61 415.043 1347.84 407.007 1347.84 cv
404.457 1347.84 li
405.449 1389.02 li
405.449 1393.9 409.412 1397.87 414.301 1397.87 cv
429.835 1397.87 li
436.352 1397.87 442.75 1399.6 448.374 1402.89 cv
465.444 1414.2 li
469.192 1416.39 473.455 1417.55 477.796 1417.55 cv
494.588 1417.55 li
502.503 1417.55 503.456 1406.09 495.659 1404.73 cv
491.589 1404.02 487.155 1403.97 482.453 1402.31 cv
cp
.12549 .407843 .662745 rgb
f
429.724 1417.55 mo
417.914 1417.55 li
415.204 1417.55 413.007 1415.72 413.007 1413.47 cv
413.007 1390.81 li
413.007 1388.56 415.204 1386.73 417.914 1386.73 cv
429.724 1386.73 li
432.433 1386.73 434.63 1388.56 434.63 1390.81 cv
434.63 1413.47 li
434.63 1415.72 432.433 1417.55 429.724 1417.55 cv
cp
f
330.904 1347.84 mo
317.923 1369.98 li
317.923 1369.98 273.33 1388.61 271.667 1405.91 cv
271.667 1405.91 342.854 1391.75 352.169 1382.69 cv
361.483 1373.64 363.386 1347.84 363.386 1347.84 cv
330.904 1347.84 li
cp
.988235 .741176 .623529 rgb
f
286.382 1402.31 mo
341.746 1382.73 li
347.108 1368.16 li
349.882 1360.61 353.792 1347.84 361.828 1347.84 cv
364.378 1347.84 li
363.386 1389.02 li
363.386 1393.9 359.423 1397.87 354.534 1397.87 cv
339 1397.87 li
332.484 1397.87 326.085 1399.6 320.461 1402.89 cv
303.391 1414.2 li
299.644 1416.39 295.38 1417.55 291.04 1417.55 cv
274.248 1417.55 li
266.332 1417.55 265.38 1406.09 273.177 1404.73 cv
277.246 1404.02 281.681 1403.97 286.382 1402.31 cv
cp
.12549 .407843 .662745 rgb
f
339.112 1417.55 mo
350.921 1417.55 li
353.631 1417.55 355.828 1415.72 355.828 1413.47 cv
355.828 1390.81 li
355.828 1388.56 353.631 1386.73 350.921 1386.73 cv
339.112 1386.73 li
336.402 1386.73 334.205 1388.56 334.205 1390.81 cv
334.205 1413.47 li
334.205 1415.72 336.402 1417.55 339.112 1417.55 cv
cp
f
555.45 511.446 mo
559.225 507.222 561.522 501.651 561.522 495.541 cv
561.522 483.755 552.984 473.971 541.757 472.018 cv
539.879 458.454 528.245 448.009 514.165 448.009 cv
509.561 448.009 505.222 449.132 501.396 451.109 cv
498.272 449.147 494.58 448.009 490.618 448.009 cv
484.731 448.009 479.433 450.517 475.725 454.52 cv
453.281 458.052 436.114 477.475 436.114 500.911 cv
436.114 505.03 436.648 509.024 437.645 512.831 cv
430.021 517.578 424.943 526.031 424.943 535.673 cv
424.943 550.525 436.983 562.566 451.836 562.566 cv
456.951 562.566 461.732 561.137 465.803 558.658 cv
468.045 562.762 472.399 565.547 477.405 565.547 cv
478.791 565.547 480.126 565.332 481.381 564.936 cv
484.538 572.743 492.185 578.253 501.123 578.253 cv
511.559 578.253 520.236 570.741 522.056 560.831 cv
525.249 561.95 528.679 562.566 532.254 562.566 cv
549.28 562.566 563.082 548.764 563.082 531.738 cv
563.082 523.965 560.198 516.869 555.45 511.446 cv
cp
.564706 .278431 .305882 rgb
f
492.502 492.365 mo
497.788 478.253 500.817 464.157 501.758 450.935 cv
501.638 450.995 501.515 451.047 501.396 451.109 cv
498.272 449.147 494.579 448.009 490.618 448.009 cv
484.731 448.009 479.433 450.517 475.725 454.52 cv
453.281 458.052 436.114 477.475 436.114 500.911 cv
436.114 505.03 436.648 509.024 437.645 512.831 cv
430.021 517.578 424.943 526.031 424.943 535.673 cv
424.943 545.683 430.416 554.409 438.529 559.039 cv
459.858 548.668 480.522 524.353 492.502 492.365 cv
cp
.254902 .639216 .537255 rgb
f
295.654 377.186 mo
298.462 452.942 li
300.129 491.464 318.786 527.725 350.175 553.45 cv
350.175 553.45 li
370.801 570.353 402.026 570.353 422.651 553.45 cv
422.651 553.45 li
454.041 527.725 472.697 491.464 474.365 452.942 cv
477.173 377.186 li
295.654 377.186 li
cp
.988235 .741176 .623529 rgb
f
415.235 525.629 mo
362.332 522.772 li
362.332 522.772 360.146 545.436 388.331 547.728 cv
416.681 550.032 415.235 525.629 415.235 525.629 cv
cp
1 1 1 rgb
f
381.612 531.679 mo
389.404 534.577 394.147 541.434 393.28 547.859 cv
391.74 547.91 390.093 547.871 388.331 547.728 cv
373.568 546.527 367.145 539.739 364.368 533.545 cv
368.644 530.239 375.269 529.32 381.612 531.679 cv
cp
.968627 .572549 .521569 rgb
f
458.222 457.621 mo
458.222 457.621 471.291 432.138 491.006 433.118 cv
510.721 434.099 519.09 460.532 504.496 480.764 cv
489.902 500.997 459.126 488.51 459.126 488.51 cv
458.222 457.621 li
cp
.988235 .741176 .623529 rgb
f
469.41 463.37 mo
469.41 463.37 475.402 451.686 484.442 452.136 cv
493.481 452.585 497.319 464.705 490.627 473.981 cv
483.936 483.258 469.825 477.533 469.825 477.533 cv
469.41 463.37 li
cp
.968627 .572549 .521569 rgb
f
314.605 457.621 mo
314.605 457.621 301.536 432.138 281.821 433.118 cv
262.106 434.099 253.737 460.532 268.331 480.764 cv
282.925 500.997 313.701 488.51 313.701 488.51 cv
314.605 457.621 li
cp
.988235 .741176 .623529 rgb
f
303.417 463.37 mo
303.417 463.37 297.424 451.686 288.385 452.136 cv
279.346 452.585 275.508 464.705 282.2 473.981 cv
288.891 483.258 303.002 477.533 303.002 477.533 cv
303.417 463.37 li
cp
.968627 .572549 .521569 rgb
f
322.033 426.875 mo
319.725 425.078 li
318.965 424.486 318.672 423.751 318.93 423.097 cv
320.026 420.313 324.11 412.997 337.182 411.083 cv
350.199 409.177 359.973 411.941 363.341 413.114 cv
364.146 413.395 364.787 413.831 365.159 414.343 cv
366.15 415.706 li
367.181 417.122 365.787 418.544 363.387 418.5 cv
355.075 418.346 338.228 419.15 327.577 427.229 cv
326.258 428.229 323.537 428.046 322.033 426.875 cv
cp
.564706 .278431 .305882 rgb
f
450.794 426.875 mo
453.102 425.078 li
453.862 424.486 454.155 423.751 453.897 423.097 cv
452.801 420.313 448.717 412.997 435.646 411.083 cv
422.628 409.177 412.854 411.941 409.485 413.114 cv
408.681 413.395 408.04 413.831 407.667 414.343 cv
406.676 415.706 li
405.646 417.122 407.04 418.544 409.439 418.5 cv
417.751 418.346 434.6 419.15 445.25 427.229 cv
446.569 428.229 449.29 428.046 450.794 426.875 cv
cp
f
360.435 456.882 mo
359.82 466.196 353.889 473.403 347.188 472.979 cv
340.487 472.555 335.553 464.661 336.167 455.348 cv
336.782 446.034 342.712 438.828 349.414 439.251 cv
356.115 439.675 361.049 447.568 360.435 456.882 cv
cp
.254902 .211765 .32549 rgb
f
337.685 452.309 mo
335.639 440.188 li
335.404 438.797 336.954 437.784 338.177 438.528 cv
343.242 445.292 li
337.685 452.309 li
cp
f
360.957 448.391 mo
360.741 451.661 357.858 454.141 354.519 453.929 cv
351.178 453.718 348.646 450.896 348.861 447.626 cv
349.077 444.356 351.959 441.876 355.3 442.088 cv
358.64 442.299 361.173 445.121 360.957 448.391 cv
cp
1 1 1 rgb
f
436.176 456.882 mo
435.561 466.196 429.631 473.403 422.93 472.979 cv
416.229 472.555 411.294 464.661 411.909 455.348 cv
412.523 446.034 418.454 438.828 425.155 439.251 cv
431.856 439.675 436.79 447.568 436.176 456.882 cv
cp
.254902 .211765 .32549 rgb
f
435.142 452.309 mo
437.188 440.188 li
437.422 438.797 435.874 437.784 434.65 438.528 cv
429.585 445.292 li
435.142 452.309 li
cp
f
436.698 448.391 mo
436.482 451.661 433.6 454.141 430.26 453.929 cv
426.919 453.718 424.387 450.896 424.603 447.626 cv
424.818 444.356 427.701 441.876 431.041 442.088 cv
434.381 442.299 436.914 445.121 436.698 448.391 cv
cp
1 1 1 rgb
f
446.307 482.204 mo
446.307 488.03 437.098 492.752 425.739 492.752 cv
414.379 492.752 405.17 488.03 405.17 482.204 cv
405.17 476.379 414.379 471.656 425.739 471.656 cv
437.098 471.656 446.307 476.379 446.307 482.204 cv
cp
.968627 .572549 .521569 rgb
f
326.521 482.204 mo
326.521 488.03 335.729 492.752 347.088 492.752 cv
358.448 492.752 367.656 488.03 367.656 482.204 cv
367.656 476.379 358.448 471.656 347.088 471.656 cv
335.729 471.656 326.521 476.379 326.521 482.204 cv
cp
f
500.374 385.96 mo
500.374 379.562 497.373 373.934 492.827 370.645 cv
493.593 368.186 494.013 365.535 494.013 362.77 cv
494.013 349.961 485.053 339.579 474 339.579 cv
469.449 339.579 465.255 341.342 461.893 344.308 cv
458.875 337.469 454.687 333.229 450.056 333.229 cv
447.817 333.229 445.683 334.226 443.733 336.022 cv
440.979 327.899 435.677 322.397 429.585 322.397 cv
425.967 322.397 422.627 324.338 419.934 327.615 cv
418.679 320.872 410.773 315.674 401.202 315.674 cv
395.213 315.674 389.878 317.71 386.414 320.885 cv
382.949 317.71 377.614 315.674 371.625 315.674 cv
362.054 315.674 354.148 320.872 352.893 327.615 cv
350.2 324.338 346.86 322.397 343.242 322.397 cv
337.15 322.397 331.848 327.899 329.094 336.022 cv
327.144 334.226 325.01 333.229 322.771 333.229 cv
318.141 333.229 313.953 337.469 310.934 344.308 cv
307.572 341.342 303.377 339.579 298.826 339.579 cv
287.774 339.579 278.814 349.961 278.814 362.77 cv
278.814 365.535 279.234 368.186 280 370.645 cv
275.454 373.934 272.453 379.562 272.453 385.96 cv
272.453 391.182 274.459 395.884 277.666 399.229 cv
275.954 402.928 274.941 407.481 274.941 412.408 cv
274.941 422.957 279.571 431.798 285.804 434.185 cv
287.933 442.387 292.276 448.008 297.292 448.008 cv
304.408 448.008 310.178 436.696 310.178 422.741 cv
310.178 421.263 310.109 419.816 309.985 418.408 cv
315.506 417.373 319.899 413.176 321.234 407.767 cv
321.741 407.871 322.253 407.932 322.771 407.932 cv
326.417 407.932 329.787 405.297 332.53 400.842 cv
332.904 400.864 333.28 400.878 333.66 400.878 cv
343.736 400.878 351.98 393.055 352.663 383.152 cv
356.64 389.054 362.401 392.766 368.813 392.766 cv
373.84 392.766 378.465 390.478 382.146 386.648 cv
385.173 392.84 389.299 396.659 393.85 396.659 cv
396.671 396.659 399.33 395.185 401.665 392.594 cv
402.437 392.705 403.22 392.766 404.015 392.766 cv
410.426 392.766 416.187 389.054 420.164 383.152 cv
420.847 393.055 429.091 400.878 439.167 400.878 cv
439.547 400.878 439.923 400.864 440.297 400.842 cv
443.04 405.297 446.41 407.932 450.056 407.932 cv
450.574 407.932 451.086 407.871 451.593 407.767 cv
452.928 413.176 457.321 417.373 462.842 418.408 cv
462.718 419.816 462.649 421.263 462.649 422.741 cv
462.649 436.696 468.418 448.008 475.535 448.008 cv
480.551 448.008 484.894 442.387 487.023 434.185 cv
493.256 431.798 497.885 422.957 497.885 412.408 cv
497.885 407.481 496.873 402.928 495.162 399.229 cv
498.368 395.884 500.374 391.182 500.374 385.96 cv
cp
.564706 .278431 .305882 rgb
f
385.071 633.943 mo
360.477 647.035 li
356.795 648.995 352.241 646.482 352.241 642.492 cv
352.241 622.065 li
352.241 616.982 358.449 614.139 362.678 617.285 cv
385.071 633.943 li
cp
.92549 .215686 .337255 rgb
f
385.071 633.943 mo
409.666 647.035 li
413.348 648.995 417.902 646.482 417.902 642.492 cv
417.902 622.065 li
417.902 616.982 411.694 614.139 407.465 617.285 cv
385.071 633.943 li
cp
f
389.107 641.775 mo
394.942 635.63 li
396.544 633.943 396.567 631.498 394.999 629.788 cv
389.164 623.426 li
387.064 621.138 383.096 621.138 380.997 623.426 cv
375.162 629.788 li
373.593 631.498 373.617 633.943 375.218 635.63 cv
381.053 641.775 li
383.15 643.983 387.01 643.983 389.107 641.775 cv
cp
f
1229.83 1424.85 mo
1229.83 1435.31 1132.47 1443.79 1012.37 1443.79 cv
892.274 1443.79 794.915 1435.31 794.915 1424.85 cv
794.915 1414.39 892.274 1405.91 1012.37 1405.91 cv
1132.47 1405.91 1229.83 1414.39 1229.83 1424.85 cv
cp
.988235 .662745 .584314 rgb
f
913.061 1360.96 mo
991.667 1360.96 li
991.667 1203.52 li
913.061 1203.52 li
913.061 1360.96 li
cp
.368627 .470588 .898039 rgb
f
969.327 1360.96 mo
973.809 1360.96 li
973.809 1203.52 li
969.327 1203.52 li
969.327 1360.96 li
cp
1 1 1 rgb
f
913.061 1241.53 mo
991.667 1241.53 li
991.667 1203.52 li
913.061 1203.52 li
913.061 1241.53 li
cp
.254902 .211765 .32549 rgb
f
985.713 1360.96 mo
985.713 1419.76 li
862.303 1419.76 li
864.298 1404.8 872.309 1391.53 884.225 1383.44 cv
917.341 1360.96 li
985.713 1360.96 li
cp
.360784 .301961 .419608 rgb
f
985.713 1419.76 mo
862.303 1419.76 li
862.95 1414.91 864.231 1410.24 866.07 1405.87 cv
985.713 1405.87 li
985.713 1419.76 li
cp
.254902 .211765 .32549 rgb
f
1118.97 1360.96 mo
1040.36 1360.96 li
1040.36 1203.52 li
1118.97 1203.52 li
1118.97 1360.96 li
cp
.368627 .470588 .898039 rgb
f
1062.68 1360.96 mo
1058.2 1360.96 li
1058.2 1203.52 li
1062.68 1203.52 li
1062.68 1360.96 li
cp
1 1 1 rgb
f
1118.97 1241.53 mo
1040.36 1241.53 li
1040.36 1203.52 li
1118.97 1203.52 li
1118.97 1241.53 li
cp
.254902 .211765 .32549 rgb
f
1046.31 1360.96 mo
1046.31 1419.76 li
1169.72 1419.76 li
1167.73 1404.8 1159.72 1391.53 1147.8 1383.44 cv
1114.69 1360.96 li
1046.31 1360.96 li
cp
.360784 .301961 .419608 rgb
f
1046.31 1419.76 mo
1169.72 1419.76 li
1169.08 1414.91 1167.8 1410.24 1165.96 1405.87 cv
1046.31 1405.87 li
1046.31 1419.76 li
cp
.254902 .211765 .32549 rgb
f
1085.46 586.218 mo
1043.61 573.948 li
1016.01 573.948 li
988.418 573.948 li
946.565 586.218 li
929.985 591.079 918.048 606.578 916.749 624.934 cv
861.505 1226.1 li
1016.01 1226.1 li
1170.52 1226.1 li
1115.28 624.934 li
1113.98 606.578 1102.04 591.079 1085.46 586.218 cv
cp
.247059 .254902 .403922 rgb
f
1026.26 778.067 mo
1106.13 600.559 li
1106.12 600.547 li
1100.9 593.755 1093.76 588.652 1085.46 586.218 cv
1043.61 573.948 li
1016.01 573.948 li
988.418 573.948 li
946.566 586.218 li
938.415 588.608 931.391 593.572 926.196 600.179 cv
926.196 600.179 li
1006.24 778.067 li
1010.12 786.696 1022.38 786.696 1026.26 778.067 cv
cp
.980392 .713726 .215686 rgb
f
1024.77 747.341 mo
1090.12 587.917 li
1088.61 587.257 1087.06 586.687 1085.46 586.218 cv
1080.32 584.71 li
1023.66 722.904 li
1020.78 729.941 1011.68 729.941 1008.79 722.904 cv
952.092 584.598 li
946.566 586.218 li
945.101 586.647 943.673 587.164 942.285 587.754 cv
1007.71 747.341 li
1011.02 755.412 1021.46 755.412 1024.77 747.341 cv
cp
.980392 .458824 .0862745 rgb
f
1029.61 678.145 mo
1076.02 583.45 li
1043.61 573.948 li
1016.01 573.948 li
988.418 573.948 li
956.419 583.329 li
1002.89 678.145 li
1008.33 689.255 1024.17 689.255 1029.61 678.145 cv
cp
1 1 1 rgb
f
1010.93 625.229 mo
1003.56 634.052 li
1001.54 636.473 1001.52 639.984 1003.49 642.439 cv
1010.85 651.573 li
1013.5 654.858 1018.51 654.858 1021.15 651.573 cv
1028.51 642.439 li
1030.49 639.984 1030.46 636.473 1028.44 634.052 cv
1021.08 625.229 li
1018.44 622.059 1013.57 622.059 1010.93 625.229 cv
cp
.247059 .254902 .403922 rgb
f
1021.15 651.573 mo
1016 651.573 li
1010.85 651.573 li
1001.15 674.61 li
1002.89 678.145 li
1008.33 689.255 1024.17 689.255 1029.61 678.145 cv
1031.08 675.149 li
1021.15 651.573 li
cp
f
932.655 593.583 mo
891.596 635.976 li
883.324 644.517 877.471 655.385 874.71 667.329 cv
841.402 811.453 li
903.538 811.453 li
932.655 593.583 li
cp
f
1099.37 593.583 mo
1140.43 635.976 li
1148.7 644.517 1154.56 655.385 1157.32 667.329 cv
1190.63 811.453 li
1128.49 811.453 li
1099.37 593.583 li
cp
f
1122.48 763.629 mo
1115.95 671.448 li
1121.17 671.024 li
1127.69 763.206 li
1122.48 763.629 li
cp
.254902 .211765 .32549 rgb
f
1190.63 811.453 mo
1190.63 870.432 li
1153.09 918.713 li
1122.15 778.396 li
1122.15 778.396 1133.92 765.581 1190.63 811.453 cv
cp
.247059 .254902 .403922 rgb
f
1169.02 866.729 mo
1166.48 891.879 1158.09 920.752 1146.64 922.976 cv
1135.19 925.199 1117.85 901.323 1107.23 878.729 cv
1088.72 839.364 1088.68 784.896 1122.15 778.396 cv
1155.62 771.896 1173.45 822.909 1169.02 866.729 cv
cp
.254902 .211765 .32549 rgb
f
1171.71 800.412 mo
1146.14 786.662 li
1139.29 782.983 1131.22 782.446 1124 785.19 cv
1115.21 788.534 li
1113.46 783.257 li
1122.25 779.913 li
1130.81 776.66 1140.37 777.295 1148.48 781.659 cv
1174.05 795.408 li
1171.71 800.412 li
cp
f
909.547 763.629 mo
904.333 763.206 li
910.862 671.024 li
916.076 671.448 li
909.547 763.629 li
cp
f
841.402 811.453 mo
841.402 870.432 li
878.935 918.713 li
909.877 778.396 li
909.877 778.396 898.11 765.581 841.402 811.453 cv
cp
.247059 .254902 .403922 rgb
f
863.004 866.729 mo
865.543 891.879 873.939 920.752 885.391 922.976 cv
896.842 925.199 914.172 901.323 924.797 878.729 cv
943.309 839.364 943.343 784.896 909.877 778.396 cv
876.412 771.896 858.582 822.909 863.004 866.729 cv
cp
.254902 .211765 .32549 rgb
f
860.318 800.412 mo
857.972 795.408 li
883.544 781.659 li
891.658 777.295 901.218 776.66 909.772 779.913 cv
918.567 783.257 li
916.817 788.534 li
908.022 785.19 li
900.805 782.445 892.738 782.983 885.891 786.662 cv
860.318 800.412 li
cp
f
917.754 822.505 mo
920.425 808.472 li
922.055 799.904 930.534 795.01 938.114 798.262 cv
946.18 801.723 950.156 811.477 947.043 820.163 cv
945.636 824.089 li
944.708 826.678 945.668 829.604 947.905 831.003 cv
963.323 840.646 li
968.79 844.063 971.913 850.563 971.335 857.313 cv
969.622 877.295 li
968.634 888.825 958.792 897.093 948.099 895.374 cv
929.78 892.431 li
918.235 890.575 907.669 884.425 899.939 875.058 cv
899.938 875.058 li
895.021 855.146 li
899.642 831.276 li
917.754 822.505 li
cp
.988235 .741176 .623529 rgb
f
899.938 875.058 mo
871.281 867.472 li
877.42 828.389 li
899.642 831.276 li
899.938 875.058 li
cp
f
946.247 849.71 mo
956.025 856.815 li
959.926 859.174 964.856 858.714 968.317 855.662 cv
970.269 853.941 li
970.565 853.681 970.911 853.531 971.266 853.475 cv
971.418 854.731 971.446 856.018 971.335 857.313 cv
971.208 858.791 li
970.918 859.046 li
968.781 860.932 966.236 862.097 963.595 862.516 cv
960.322 863.034 956.9 862.406 953.924 860.578 cv
943.949 853.337 li
943.014 852.657 942.77 851.294 943.405 850.293 cv
944.04 849.291 945.313 849.03 946.247 849.71 cv
cp
.968627 .572549 .521569 rgb
f
943.974 870.983 mo
944.609 869.981 945.881 869.72 946.817 870.4 cv
956.594 877.506 li
960.495 879.865 965.425 879.405 968.886 876.354 cv
969.77 875.574 li
969.622 877.294 li
969.493 878.797 969.211 880.242 968.8 881.618 cv
967.336 882.418 965.769 882.952 964.164 883.206 cv
960.891 883.726 957.47 883.098 954.493 881.269 cv
944.518 874.027 li
943.583 873.348 943.339 871.984 943.974 870.983 cv
cp
f
1114.27 822.505 mo
1111.6 808.472 li
1109.97 799.904 1101.49 795.01 1093.91 798.262 cv
1085.85 801.723 1081.87 811.477 1084.98 820.163 cv
1086.39 824.089 li
1087.32 826.678 1086.36 829.604 1084.12 831.003 cv
1068.7 840.646 li
1063.24 844.063 1060.11 850.563 1060.69 857.313 cv
1062.4 877.295 li
1063.39 888.825 1073.23 897.093 1083.93 895.374 cv
1102.25 892.431 li
1113.79 890.575 1124.36 884.425 1132.09 875.058 cv
1132.09 875.058 li
1137.45 852.381 li
1132.38 831.276 li
1114.27 822.505 li
cp
.988235 .741176 .623529 rgb
f
1132.09 875.058 mo
1160.75 867.472 li
1154.61 828.389 li
1132.38 831.276 li
1132.09 875.058 li
cp
f
1085.78 849.71 mo
1076 856.815 li
1072.1 859.174 1067.17 858.714 1063.71 855.662 cv
1061.76 853.941 li
1061.46 853.681 1061.12 853.531 1060.76 853.475 cv
1060.61 854.731 1060.58 856.018 1060.69 857.313 cv
1060.82 858.791 li
1061.11 859.046 li
1063.25 860.932 1065.79 862.097 1068.43 862.516 cv
1071.71 863.034 1075.13 862.406 1078.1 860.578 cv
1088.08 853.337 li
1089.01 852.657 1089.26 851.294 1088.62 850.293 cv
1087.99 849.291 1086.71 849.03 1085.78 849.71 cv
cp
.968627 .572549 .521569 rgb
f
1088.05 870.983 mo
1087.42 869.981 1086.15 869.72 1085.21 870.4 cv
1075.43 877.506 li
1071.53 879.865 1066.6 879.405 1063.14 876.354 cv
1062.26 875.574 li
1062.4 877.294 li
1062.53 878.797 1062.82 880.242 1063.23 881.618 cv
1064.69 882.418 1066.26 882.952 1067.86 883.206 cv
1071.14 883.726 1074.56 883.098 1077.53 881.269 cv
1087.51 874.027 li
1088.44 873.348 1088.69 871.984 1088.05 870.983 cv
cp
f
1016.69 612.214 mo
1015.32 612.214 li
999.847 612.214 987.307 599.674 987.307 584.205 cv
987.307 516.338 li
1044.7 516.338 li
1044.7 584.205 li
1044.7 599.674 1032.16 612.214 1016.69 612.214 cv
cp
f
987.307 516.338 mo
987.307 569.455 li
1044.7 569.455 li
1044.7 516.338 li
987.307 516.338 li
cp
.254902 .211765 .32549 rgb
f
881.531 406.107 mo
876.267 406.107 li
871.002 406.107 li
859.846 432.629 li
858.762 435.207 860.053 438.129 862.759 439.206 cv
865.167 440.164 868.57 441.158 873.095 441.697 cv
875.197 441.948 877.337 441.948 879.439 441.697 cv
883.964 441.158 887.367 440.164 889.775 439.206 cv
892.481 438.129 893.772 435.207 892.688 432.629 cv
881.531 406.107 li
cp
.980392 .698039 .176471 rgb
f
1007.39 359.736 mo
833.813 302.097 li
828.563 300.354 828.563 293.71 833.813 291.967 cv
1007.39 234.329 li
1013.1 232.43 1019.39 232.43 1025.11 234.329 cv
1198.69 291.967 li
1203.94 293.71 1203.94 300.354 1198.69 302.097 cv
1025.11 359.736 li
1019.39 361.634 1013.1 361.634 1007.39 359.736 cv
cp
.254902 .211765 .32549 rgb
f
1016.25 292.432 mo
962.686 292.432 919.265 305.438 919.265 321.482 cv
919.265 368.97 li
919.265 372.34 922.688 374.792 926.089 373.815 cv
940.334 369.721 975.333 366.828 1016.25 366.828 cv
1057.17 366.828 1092.16 369.721 1106.41 373.815 cv
1109.81 374.792 1113.23 372.34 1113.23 368.97 cv
1113.23 321.482 li
1113.23 305.438 1069.81 292.432 1016.25 292.432 cv
cp
.247059 .254902 .403922 rgb
f
876.616 292.297 mo
875.918 292.297 li
873.289 292.297 871.158 290.275 871.158 287.781 cv
871.158 280.511 li
871.158 278.017 873.289 275.995 875.918 275.995 cv
876.616 275.995 li
879.245 275.995 881.377 278.017 881.377 280.511 cv
881.377 287.781 li
881.377 290.275 879.245 292.297 876.616 292.297 cv
cp
.254902 .211765 .32549 rgb
f
876.267 286.789 mo
876.267 286.789 li
878.876 286.789 880.991 288.795 880.991 291.27 cv
880.991 401.627 li
880.991 404.101 878.876 406.107 876.267 406.107 cv
873.658 406.107 871.543 404.101 871.543 401.627 cv
871.543 291.27 li
871.543 288.795 873.658 286.789 876.267 286.789 cv
cp
.980392 .698039 .176471 rgb
f
886.06 407.631 mo
886.06 412.738 881.675 416.878 876.267 416.878 cv
870.858 416.878 866.474 412.738 866.474 407.631 cv
866.474 402.523 870.858 398.383 876.267 398.383 cv
881.675 398.383 886.06 402.523 886.06 407.631 cv
cp
.980392 .745098 .313726 rgb
f
933.865 454.55 mo
933.865 454.55 924.182 433.776 907.877 433.776 cv
891.573 433.776 883.533 454.458 894.7 471.118 cv
905.868 487.778 931.79 479.069 931.79 479.069 cv
933.865 454.55 li
cp
.988235 .741176 .623529 rgb
f
924.389 458.678 mo
924.389 458.678 919.949 449.153 912.474 449.153 cv
904.998 449.153 901.312 458.636 906.432 466.274 cv
911.552 473.914 923.438 469.92 923.438 469.92 cv
924.389 458.678 li
cp
.968627 .572549 .521569 rgb
f
1098.14 454.55 mo
1098.14 454.55 1107.83 433.776 1124.13 433.776 cv
1140.43 433.776 1148.48 454.458 1137.31 471.118 cv
1126.14 487.778 1100.22 479.069 1100.22 479.069 cv
1098.14 454.55 li
cp
.988235 .741176 .623529 rgb
f
1105.52 458.678 mo
1105.52 458.678 1109.96 449.153 1117.43 449.153 cv
1124.91 449.153 1128.59 458.636 1123.47 466.274 cv
1118.35 473.914 1106.47 469.92 1106.47 469.92 cv
1105.52 458.678 li
cp
.968627 .572549 .521569 rgb
f
1033.95 561.502 mo
998.063 561.502 li
956.557 561.502 924.237 523.192 928.729 479.317 cv
939.078 378.241 li
1092.93 378.241 li
1103.28 479.317 li
1107.77 523.192 1075.45 561.502 1033.95 561.502 cv
cp
.988235 .741176 .623529 rgb
f
1039.14 527.856 mo
991.014 529.559 li
991.014 529.559 992.301 552.396 1017.93 549.813 cv
1036.31 547.961 1039.14 527.856 1039.14 527.856 cv
cp
1 1 1 rgb
f
1039.14 527.856 mo
991.014 529.559 li
991.014 529.559 992.301 552.396 1017.93 549.813 cv
1036.31 547.961 1039.14 527.856 1039.14 527.856 cv
cp
f
1020.06 549.496 mo
1019.59 543.928 1014.56 538.513 1007.47 536.55 cv
1002.18 535.087 997.031 535.895 993.528 538.311 cv
996.57 544.44 1003.26 551.292 1017.93 549.813 cv
1018.67 549.739 1019.37 549.626 1020.06 549.496 cv
cp
.968627 .572549 .521569 rgb
f
1026.09 502.627 mo
1026.09 508.171 1021.7 512.666 1016.29 512.666 cv
1010.88 512.666 1006.5 508.171 1006.5 502.627 cv
1006.5 497.083 1010.88 492.589 1016.29 492.589 cv
1021.7 492.589 1026.09 497.083 1026.09 502.627 cv
cp
f
1020.82 509.661 mo
1015.41 509.661 1011.03 505.167 1011.03 499.623 cv
1011.03 497.092 1011.95 494.786 1013.46 493.02 cv
1009.43 494.266 1006.5 498.094 1006.5 502.627 cv
1006.5 508.171 1010.88 512.666 1016.29 512.666 cv
1019.23 512.666 1021.86 511.332 1023.66 509.23 cv
1022.76 509.508 1021.81 509.661 1020.82 509.661 cv
cp
.968627 .505882 .521569 rgb
f
989.413 464.677 mo
989.413 472.919 983.962 479.602 977.239 479.602 cv
970.516 479.602 965.066 472.919 965.066 464.677 cv
965.066 456.435 970.516 449.752 977.239 449.752 cv
983.962 449.752 989.413 456.435 989.413 464.677 cv
cp
.254902 .211765 .32549 rgb
f
989.375 457.164 mo
989.375 460.058 986.658 462.404 983.307 462.404 cv
979.956 462.404 977.239 460.058 977.239 457.164 cv
977.239 454.271 979.956 451.924 983.307 451.924 cv
986.658 451.924 989.375 454.271 989.375 457.164 cv
cp
1 1 1 rgb
f
1066.94 464.677 mo
1066.94 472.919 1061.49 479.602 1054.77 479.602 cv
1048.05 479.602 1042.6 472.919 1042.6 464.677 cv
1042.6 456.435 1048.05 449.752 1054.77 449.752 cv
1061.49 449.752 1066.94 456.435 1066.94 464.677 cv
cp
.254902 .211765 .32549 rgb
f
1066.9 457.164 mo
1066.9 460.058 1064.19 462.404 1060.84 462.404 cv
1057.49 462.404 1054.77 460.058 1054.77 457.164 cv
1054.77 454.271 1057.49 451.924 1060.84 451.924 cv
1064.19 451.924 1066.9 454.271 1066.9 457.164 cv
cp
1 1 1 rgb
f
958.153 430.888 mo
952.253 427.672 959.642 416.347 969.618 413.444 cv
980.463 410.893 989.101 411.707 991.398 416.319 cv
992.167 417.725 991.112 419.298 989.307 419.413 cv
983.053 419.807 970.372 421.769 962.323 430.886 cv
961.327 432.015 959.28 432.006 958.153 430.888 cv
cp
.203922 .168627 .258824 rgb
f
1073.85 430.888 mo
1079.76 427.672 1072.37 416.347 1062.39 413.444 cv
1051.54 410.893 1042.91 411.707 1040.61 416.319 cv
1039.84 417.725 1040.9 419.298 1042.7 419.413 cv
1048.96 419.807 1061.64 421.769 1069.68 430.886 cv
1070.68 432.015 1072.73 432.006 1073.85 430.888 cv
cp
f
991.731 484.378 mo
991.731 489.174 982.822 493.062 971.832 493.062 cv
960.842 493.062 951.933 489.174 951.933 484.378 cv
951.933 479.583 960.842 475.695 971.832 475.695 cv
982.822 475.695 991.731 479.583 991.731 484.378 cv
cp
.968627 .572549 .521569 rgb
f
1040.28 484.378 mo
1040.28 489.174 1049.19 493.062 1060.18 493.062 cv
1071.17 493.062 1080.08 489.174 1080.08 484.378 cv
1080.08 479.583 1071.17 475.695 1060.18 475.695 cv
1049.19 475.695 1040.28 479.583 1040.28 484.378 cv
cp
f
906.926 375.578 mo
898.013 382.782 905.138 387.139 912.796 389.541 cv
908.618 390.479 904.752 394.254 904.058 404.627 cv
902.933 421.419 911.982 421.031 917.569 419.254 cv
917.1 422.863 916.506 431.183 919.751 437.624 cv
924.015 446.087 931.756 449.752 931.756 449.752 cv
939.077 378.241 li
939.077 378.241 922.418 363.057 906.926 375.578 cv
cp
.203922 .168627 .258824 rgb
f
1125.08 375.578 mo
1133.99 382.782 1126.87 387.139 1119.21 389.541 cv
1123.39 390.479 1127.26 394.254 1127.95 404.627 cv
1129.07 421.419 1120.03 421.031 1114.44 419.254 cv
1114.91 422.863 1115.5 431.183 1112.26 437.624 cv
1107.99 446.087 1100.25 449.752 1100.25 449.752 cv
1092.93 378.241 li
1092.93 378.241 1109.59 363.057 1125.08 375.578 cv
cp
f
1097.83 359.047 mo
1102.35 354.375 1103.11 348.606 1093.12 342.344 cv
1083.08 336.049 1073.76 339.137 1066.19 345.087 cv
1061.44 342.274 1054.9 339.158 1046.11 335.708 cv
1015.56 323.722 1004.72 328.714 1002.05 337.894 cv
970.385 327.015 957.558 333.362 952.456 341.428 cv
932.8 334.458 911.627 339.521 911.693 356.164 cv
911.75 370.479 920.972 375.606 928.698 377.395 cv
928.524 378.13 928.391 378.895 928.312 379.695 cv
925.78 405.14 944.792 404.28 965.825 396.935 cv
965.897 399.519 969.826 401.307 980.322 401.422 cv
1008.93 401.736 1026.99 387.183 1035.16 378.575 cv
1046.92 378.575 li
1036.22 385.259 1025.33 393.453 1037.78 392.615 cv
1050.49 391.76 1066.44 384.262 1076.91 378.575 cv
1108.43 378.575 li
1109.75 377.324 1110.88 375.768 1111.7 373.813 cv
1115.49 364.79 1105.45 360.769 1097.83 359.047 cv
cp
f
949.507 370.628 mo
949.507 370.628 942.597 379.882 947.639 383.804 cv
952.682 387.726 971.977 375.685 971.977 375.685 cv
971.977 375.685 961.459 391.312 985.924 391.274 cv
1015.63 391.228 1033.73 365.035 1033.73 365.035 cv
1033.73 365.035 989.046 393.075 979.201 384.924 cv
969.356 376.774 979.201 368.63 979.201 368.63 cv
979.201 368.63 942.364 389.715 949.507 370.628 cv
cp
.258824 .215686 .329412 rgb
f
1780.97 1424.85 mo
1780.97 1435.31 1683.61 1443.79 1563.51 1443.79 cv
1443.42 1443.79 1346.06 1435.31 1346.06 1424.85 cv
1346.06 1414.39 1443.42 1405.91 1563.51 1405.91 cv
1683.61 1405.91 1780.97 1414.39 1780.97 1424.85 cv
cp
.988235 .662745 .584314 rgb
f
1648.37 595.425 mo
1688.5 636.855 li
1697.38 646.025 1703.66 657.694 1706.63 670.519 cv
1739.62 813.295 li
1677.49 813.295 li
1648.37 595.425 li
cp
.247059 .254902 .403922 rgb
f
1478.64 595.425 mo
1438.51 636.855 li
1429.63 646.025 1423.35 657.694 1420.38 670.519 cv
1387.39 813.295 li
1449.52 813.295 li
1478.64 595.425 li
cp
f
1466.82 1333.27 mo
1533.21 1333.27 li
1533.21 1360.96 li
1466.82 1360.96 li
1466.82 1333.27 li
cp
.988235 .741176 .623529 rgb
f
1460.56 1343.53 mo
1539.17 1343.53 li
1539.17 1203.52 li
1460.56 1203.52 li
1460.56 1343.53 li
cp
.254902 .639216 .537255 rgb
f
1460.56 1241.53 mo
1539.17 1241.53 li
1539.17 1203.52 li
1460.56 1203.52 li
1460.56 1241.53 li
cp
.254902 .211765 .32549 rgb
f
1533.21 1360.96 mo
1533.21 1419.76 li
1409.8 1419.76 li
1411.8 1404.8 1419.81 1391.53 1431.73 1383.44 cv
1464.84 1360.96 li
1533.21 1360.96 li
cp
.25098 .301961 .419608 rgb
f
1533.21 1419.76 mo
1409.8 1419.76 li
1410.45 1414.91 1411.73 1410.24 1413.57 1405.87 cv
1533.21 1405.87 li
1533.21 1419.76 li
cp
.254902 .211765 .32549 rgb
f
1660.19 1333.27 mo
1593.8 1333.27 li
1593.8 1360.96 li
1660.19 1360.96 li
1660.19 1333.27 li
cp
.988235 .741176 .623529 rgb
f
1666.47 1343.53 mo
1587.86 1343.53 li
1587.86 1203.52 li
1666.47 1203.52 li
1666.47 1343.53 li
cp
.254902 .639216 .537255 rgb
f
1666.47 1241.53 mo
1587.86 1241.53 li
1587.86 1203.52 li
1666.47 1203.52 li
1666.47 1241.53 li
cp
.254902 .211765 .32549 rgb
f
1593.81 1360.96 mo
1593.81 1419.76 li
1717.22 1419.76 li
1715.23 1404.8 1707.22 1391.53 1695.3 1383.44 cv
1662.19 1360.96 li
1593.81 1360.96 li
cp
.25098 .301961 .419608 rgb
f
1593.81 1419.76 mo
1717.22 1419.76 li
1716.58 1414.91 1715.3 1410.24 1713.46 1405.87 cv
1593.81 1405.87 li
1593.81 1419.76 li
cp
.254902 .211765 .32549 rgb
f
1632.96 586.218 mo
1591.11 573.948 li
1563.51 573.948 li
1535.92 573.948 li
1494.07 586.218 li
1477.49 591.079 1465.55 606.578 1464.25 624.934 cv
1409.01 1226.1 li
1563.51 1226.1 li
1718.02 1226.1 li
1662.78 624.934 li
1661.48 606.578 1649.54 591.079 1632.96 586.218 cv
cp
.247059 .254902 .403922 rgb
f
1573.76 778.067 mo
1653.63 600.559 li
1653.63 600.547 li
1648.4 593.755 1641.27 588.652 1632.96 586.218 cv
1591.11 573.948 li
1563.51 573.948 li
1535.92 573.948 li
1494.07 586.218 li
1485.92 588.608 1478.89 593.572 1473.7 600.179 cv
1473.7 600.179 li
1553.74 778.067 li
1557.62 786.696 1569.88 786.696 1573.76 778.067 cv
cp
.980392 .713726 .215686 rgb
f
1572.27 747.341 mo
1637.62 587.917 li
1636.12 587.257 1634.56 586.687 1632.96 586.218 cv
1627.82 584.71 li
1571.17 722.904 li
1568.28 729.941 1559.18 729.941 1556.29 722.904 cv
1499.59 584.598 li
1494.07 586.218 li
1492.6 586.647 1491.17 587.164 1489.79 587.754 cv
1555.21 747.341 li
1558.52 755.412 1568.96 755.412 1572.27 747.341 cv
cp
.980392 .458824 .0862745 rgb
f
1577.11 678.145 mo
1623.52 583.45 li
1591.11 573.948 li
1563.51 573.948 li
1535.92 573.948 li
1503.92 583.329 li
1550.39 678.145 li
1555.83 689.255 1571.67 689.255 1577.11 678.145 cv
cp
1 1 1 rgb
f
1564.19 612.214 mo
1562.82 612.214 li
1547.35 612.214 1534.81 599.674 1534.81 584.205 cv
1534.81 516.338 li
1592.2 516.338 li
1592.2 584.205 li
1592.2 599.674 1579.66 612.214 1564.19 612.214 cv
cp
.968627 .572549 .521569 rgb
f
1534.81 516.338 mo
1534.81 569.455 li
1592.2 569.455 li
1592.2 516.338 li
1534.81 516.338 li
cp
.254902 .211765 .32549 rgb
f
1429.03 406.107 mo
1423.77 406.107 li
1418.5 406.107 li
1407.35 432.629 li
1406.26 435.207 1407.55 438.129 1410.26 439.206 cv
1412.67 440.164 1416.07 441.158 1420.6 441.697 cv
1422.7 441.948 1424.84 441.948 1426.94 441.697 cv
1431.46 441.158 1434.87 440.164 1437.28 439.206 cv
1439.98 438.129 1441.27 435.207 1440.19 432.629 cv
1429.03 406.107 li
cp
.980392 .698039 .176471 rgb
f
1554.89 359.736 mo
1381.31 302.097 li
1376.06 300.354 1376.06 293.71 1381.31 291.967 cv
1554.89 234.329 li
1560.61 232.43 1566.89 232.43 1572.61 234.329 cv
1746.19 291.967 li
1751.44 293.71 1751.44 300.354 1746.19 302.097 cv
1572.61 359.736 li
1566.89 361.634 1560.61 361.634 1554.89 359.736 cv
cp
.254902 .211765 .32549 rgb
f
1563.75 292.432 mo
1510.19 292.432 1466.77 305.438 1466.77 321.482 cv
1466.77 368.97 li
1466.77 372.34 1470.19 374.792 1473.59 373.815 cv
1487.84 369.721 1522.83 366.828 1563.75 366.828 cv
1604.67 366.828 1639.67 369.721 1653.91 373.815 cv
1657.31 374.792 1660.74 372.34 1660.74 368.97 cv
1660.74 321.482 li
1660.74 305.438 1617.31 292.432 1563.75 292.432 cv
cp
.247059 .254902 .403922 rgb
f
1424.12 292.297 mo
1423.42 292.297 li
1420.79 292.297 1418.66 290.275 1418.66 287.781 cv
1418.66 280.511 li
1418.66 278.017 1420.79 275.995 1423.42 275.995 cv
1424.12 275.995 li
1426.75 275.995 1428.88 278.017 1428.88 280.511 cv
1428.88 287.781 li
1428.88 290.275 1426.75 292.297 1424.12 292.297 cv
cp
.254902 .211765 .32549 rgb
f
1423.77 286.789 mo
1423.77 286.789 li
1426.38 286.789 1428.49 288.795 1428.49 291.27 cv
1428.49 401.627 li
1428.49 404.101 1426.38 406.107 1423.77 406.107 cv
1421.16 406.107 1419.04 404.101 1419.04 401.627 cv
1419.04 291.27 li
1419.04 288.795 1421.16 286.789 1423.77 286.789 cv
cp
.980392 .698039 .176471 rgb
f
1433.56 407.631 mo
1433.56 412.738 1429.18 416.878 1423.77 416.878 cv
1418.36 416.878 1413.97 412.738 1413.97 407.631 cv
1413.97 402.523 1418.36 398.383 1423.77 398.383 cv
1429.18 398.383 1433.56 402.523 1433.56 407.631 cv
cp
.980392 .745098 .313726 rgb
f
1563.51 614.349 mo
1536.76 629.432 li
1532.76 631.69 1527.8 628.796 1527.8 624.198 cv
1527.8 600.664 li
1527.8 594.808 1534.56 591.532 1539.16 595.156 cv
1563.51 614.349 li
cp
.368627 .470588 .898039 rgb
f
1563.51 614.349 mo
1590.27 629.432 li
1594.27 631.69 1599.23 628.796 1599.23 624.198 cv
1599.23 600.664 li
1599.23 594.808 1592.47 591.532 1587.87 595.156 cv
1563.51 614.349 li
cp
f
1567.9 623.372 mo
1574.25 616.292 li
1575.99 614.349 1576.02 611.531 1574.31 609.561 cv
1567.97 602.231 li
1565.68 599.595 1561.37 599.595 1559.08 602.231 cv
1552.74 609.561 li
1551.03 611.531 1551.05 614.349 1552.8 616.292 cv
1559.14 623.372 li
1561.42 625.916 1565.62 625.916 1567.9 623.372 cv
cp
f
1387.39 813.295 mo
1387.39 872.273 li
1418.78 920.556 li
1444.66 780.239 li
1444.66 780.239 1434.82 767.423 1387.39 813.295 cv
cp
.247059 .254902 .403922 rgb
f
1405.46 868.571 mo
1407.58 893.722 1414.6 922.594 1424.18 924.818 cv
1433.76 927.042 1448.26 903.166 1457.14 880.572 cv
1472.63 841.207 1472.66 786.738 1444.66 780.239 cv
1416.67 773.739 1401.76 824.752 1405.46 868.571 cv
cp
.254902 .211765 .32549 rgb
f
1403.57 802.153 mo
1400.88 797.352 li
1422.27 783.602 li
1429.25 779.114 1437.49 778.464 1444.87 781.817 cv
1452.22 785.161 li
1450.18 790.315 li
1442.82 786.972 li
1436.92 784.287 1430.58 784.796 1424.96 788.403 cv
1403.57 802.153 li
cp
f
1680.46 738.526 mo
1674.05 785.259 li
1451.53 741.782 li
1449.43 735.521 li
1444.6 721.102 1447.9 705.372 1457.94 695.048 cv
1680.46 738.526 li
cp
1 1 1 rgb
f
1688.74 766.619 mo
1686.55 779.295 1680.34 786.735 1674.05 785.259 cv
1667.76 783.784 1663.77 773.952 1665.96 761.276 cv
1668.15 748.6 1674.17 737.05 1680.46 738.526 cv
1686.75 740.001 1690.93 753.943 1688.74 766.619 cv
cp
.254902 .211765 .32549 rgb
f
1588.16 720.493 mo
1581.75 767.227 li
1572.51 765.421 li
1578.92 718.688 li
1588.16 720.493 li
cp
.945098 .380392 .45098 rgb
f
1606.76 695.522 mo
1600.71 701.067 1587.51 710.838 1584.29 708.037 cv
1580.95 705.117 1586.03 685.2 1592.08 679.655 cv
1598.13 674.109 1605.7 673.837 1610.37 677.547 cv
1618.66 684.139 1612.81 689.977 1606.76 695.522 cv
cp
1571.47 711.33 mo
1570.4 715.231 1553.43 713.208 1545.03 711.374 cv
1536.63 709.539 1528.22 707.363 1531.37 697.834 cv
1533.14 692.469 1539.73 689.104 1548.13 690.939 cv
1556.54 692.774 1572.59 707.263 1571.47 711.33 cv
cp
1620.87 677.035 mo
1619 673.403 li
1616.29 668.127 1610.32 665.307 1604.83 666.716 cv
1588.31 668.787 1576.61 682.764 1577.29 699.606 cv
1577.68 709.047 li
1572.44 700.852 li
1563.1 686.232 1544.93 679.925 1529.69 686.011 cv
1529.69 686.011 li
1524.2 687.42 1520.79 692.651 1521.6 698.414 cv
1522.16 702.381 li
1522.91 707.695 1527.02 712.13 1532.27 713.306 cv
1577.78 723.478 li
1579.46 723.853 1580.93 723.332 1581.92 722.348 cv
1583.35 722.71 1584.9 722.455 1586.11 721.338 cv
1618.72 691.106 li
1622.49 687.613 1623.36 681.9 1620.87 677.035 cv
cp
.92549 .215686 .337255 rgb
f
1436.22 813.295 mo
1477.77 746.765 li
1507.43 765.26 li
1440.37 884.773 li
1436.22 813.295 li
cp
.988235 .741176 .623529 rgb
f
1540.31 712.652 mo
1532.56 704.355 1514.98 696.873 1499.1 691.687 cv
1493.54 689.873 1487.69 691.02 1483.16 694.449 cv
1480.55 693.115 1477.7 692.828 1475.06 693.898 cv
1469.14 696.302 1466.6 704.606 1469.38 712.447 cv
1470.13 714.591 1471.22 716.465 1472.51 718.027 cv
1471.39 733.747 1477.77 746.765 1477.77 746.765 cv
1488.55 760.729 li
1507.55 765.26 li
1534.78 757.954 1551.4 724.525 1540.31 712.652 cv
cp
f
1504.83 693.636 mo
1503.65 694.794 1502.62 696.157 1501.82 697.704 cv
1496.75 709.543 li
1496.27 710.654 1496.73 711.967 1497.77 712.476 cv
1498.8 712.985 1500.03 712.497 1500.51 711.387 cv
1505.47 699.776 li
1506.46 697.908 1507.88 696.405 1509.55 695.368 cv
1507.98 694.771 1506.4 694.194 1504.83 693.636 cv
cp
.968627 .572549 .521569 rgb
f
1525.09 702.163 mo
1523.24 703.547 1521.67 705.363 1520.54 707.546 cv
1515.47 719.385 li
1515 720.496 1515.45 721.809 1516.49 722.318 cv
1517.53 722.827 1518.75 722.339 1519.23 721.229 cv
1524.2 709.618 li
1525.41 707.308 1527.3 705.56 1529.5 704.558 cv
1528.09 703.744 1526.62 702.945 1525.09 702.163 cv
cp
f
1739.64 813.295 mo
1739.64 872.273 li
1708.25 920.556 li
1682.36 780.239 li
1682.36 780.239 1692.21 767.423 1739.64 813.295 cv
cp
.247059 .254902 .403922 rgb
f
1721.57 868.571 mo
1719.45 893.722 1712.42 922.594 1702.85 924.818 cv
1693.27 927.042 1678.77 903.166 1669.88 880.572 cv
1654.4 841.207 1654.37 786.738 1682.36 780.239 cv
1710.36 773.739 1725.27 824.752 1721.57 868.571 cv
cp
.254902 .211765 .32549 rgb
f
1723.46 802.153 mo
1726.15 797.352 li
1704.75 783.602 li
1697.77 779.114 1689.54 778.464 1682.16 781.817 cv
1674.81 785.161 li
1676.85 790.315 li
1684.21 786.972 li
1690.11 784.287 1696.45 784.796 1702.06 788.403 cv
1723.46 802.153 li
cp
f
1690.81 813.295 mo
1627.48 764.09 li
1597.82 782.584 li
1686.66 884.773 li
1690.81 813.295 li
cp
.988235 .741176 .623529 rgb
f
1564.94 729.977 mo
1572.68 721.68 1590.26 714.198 1606.14 709.012 cv
1611.7 707.197 1617.56 708.344 1622.08 711.773 cv
1624.69 710.44 1627.55 710.152 1630.19 711.223 cv
1636.1 713.626 1638.65 721.931 1635.87 729.772 cv
1635.11 731.916 1634.03 733.79 1632.74 735.352 cv
1633.86 751.071 1627.48 764.09 1627.48 764.09 cv
1616.69 778.054 li
1597.7 782.584 li
1570.47 775.278 1553.85 741.85 1564.94 729.977 cv
cp
f
1600.42 710.96 mo
1601.6 712.119 1602.62 713.481 1603.42 715.029 cv
1608.5 726.868 li
1608.97 727.979 1608.52 729.292 1607.48 729.801 cv
1606.44 730.31 1605.22 729.822 1604.74 728.711 cv
1599.77 717.101 li
1598.79 715.232 1597.37 713.729 1595.7 712.693 cv
1597.26 712.096 1598.84 711.519 1600.42 710.96 cv
cp
.968627 .572549 .521569 rgb
f
1580.16 719.488 mo
1582 720.872 1583.58 722.688 1584.7 724.871 cv
1589.78 736.709 li
1590.25 737.82 1589.79 739.134 1588.76 739.643 cv
1587.72 740.151 1586.5 739.664 1586.02 738.553 cv
1581.05 726.942 li
1579.84 724.633 1577.95 722.884 1575.75 721.883 cv
1577.16 721.068 1578.63 720.27 1580.16 719.488 cv
cp
f
1481.37 454.55 mo
1481.37 454.55 1471.68 433.776 1455.38 433.776 cv
1439.07 433.776 1431.03 454.458 1442.2 471.118 cv
1453.37 487.778 1479.29 479.069 1479.29 479.069 cv
1481.37 454.55 li
cp
.988235 .741176 .623529 rgb
f
1471.89 458.678 mo
1471.89 458.678 1467.45 449.153 1459.97 449.153 cv
1452.5 449.153 1448.81 458.636 1453.93 466.274 cv
1459.05 473.914 1470.94 469.92 1470.94 469.92 cv
1471.89 458.678 li
cp
.968627 .572549 .521569 rgb
f
1645.64 454.55 mo
1645.64 454.55 1655.33 433.776 1671.63 433.776 cv
1687.94 433.776 1695.98 454.458 1684.81 471.118 cv
1673.64 487.778 1647.72 479.069 1647.72 479.069 cv
1645.64 454.55 li
cp
.988235 .741176 .623529 rgb
f
1653.02 458.678 mo
1653.02 458.678 1657.46 449.153 1664.93 449.153 cv
1672.41 449.153 1676.09 458.636 1670.97 466.274 cv
1665.85 473.914 1653.97 469.92 1653.97 469.92 cv
1653.02 458.678 li
cp
.968627 .572549 .521569 rgb
f
1581.45 561.502 mo
1545.56 561.502 li
1504.06 561.502 1471.74 523.192 1476.23 479.318 cv
1486.58 378.241 li
1640.43 378.241 li
1650.78 479.318 li
1655.27 523.192 1622.95 561.502 1581.45 561.502 cv
.988235 .741176 .623529 rgb
f
1586.64 527.856 mo
1538.51 529.559 li
1538.51 529.559 1539.8 552.396 1565.43 549.813 cv
1583.81 547.961 1586.64 527.856 1586.64 527.856 cv
cp
1 1 1 rgb
f
1586.64 527.856 mo
1538.51 529.559 li
1538.51 529.559 1539.8 552.396 1565.43 549.813 cv
1583.81 547.961 1586.64 527.856 1586.64 527.856 cv
cp
f
1567.56 549.496 mo
1567.09 543.928 1562.06 538.513 1554.97 536.55 cv
1549.68 535.087 1544.53 535.895 1541.03 538.311 cv
1544.07 544.44 1550.76 551.292 1565.43 549.813 cv
1566.17 549.739 1566.87 549.626 1567.56 549.496 cv
cp
.968627 .572549 .521569 rgb
f
1573.59 502.627 mo
1573.59 508.171 1569.2 512.666 1563.79 512.666 cv
1558.38 512.666 1554 508.171 1554 502.627 cv
1554 497.083 1558.38 492.589 1563.79 492.589 cv
1569.2 492.589 1573.59 497.083 1573.59 502.627 cv
cp
f
1568.32 509.661 mo
1562.91 509.661 1558.53 505.167 1558.53 499.623 cv
1558.53 497.092 1559.45 494.786 1560.96 493.02 cv
1556.93 494.266 1554 498.094 1554 502.627 cv
1554 508.171 1558.38 512.666 1563.79 512.666 cv
1566.73 512.666 1569.36 511.332 1571.16 509.23 cv
1570.26 509.508 1569.31 509.661 1568.32 509.661 cv
cp
.968627 .505882 .521569 rgb
f
1533.45 471.953 mo
1534.59 469.452 1535.25 466.575 1535.25 463.506 cv
1535.25 453.938 1528.92 446.18 1521.12 446.18 cv
1513.31 446.18 1506.99 453.938 1506.99 463.506 cv
1506.99 466.575 1507.64 469.452 1508.78 471.953 cv
1533.45 471.953 li
.254902 .211765 .32549 rgb
f
1533.53 454.785 mo
1533.53 457.345 1531.13 459.421 1528.16 459.421 cv
1525.2 459.421 1522.79 457.345 1522.79 454.785 cv
1522.79 452.225 1525.2 450.149 1528.16 450.149 cv
1531.13 450.149 1533.53 452.225 1533.53 454.785 cv
1 1 1 rgb
f
1617.35 471.953 mo
1618.5 469.452 1619.15 466.575 1619.15 463.506 cv
1619.15 453.938 1612.83 446.18 1605.02 446.18 cv
1597.22 446.18 1590.89 453.938 1590.89 463.506 cv
1590.89 466.575 1591.55 469.452 1592.69 471.953 cv
1617.35 471.953 li
.254902 .211765 .32549 rgb
f
1617.43 454.785 mo
1617.43 457.345 1615.03 459.421 1612.07 459.421 cv
1609.1 459.421 1606.7 457.345 1606.7 454.785 cv
1606.7 452.225 1609.1 450.149 1612.07 450.149 cv
1615.03 450.149 1617.43 452.225 1617.43 454.785 cv
1 1 1 rgb
f
1505.65 430.888 mo
1499.75 427.672 1507.14 416.347 1517.12 413.444 cv
1527.96 410.893 1536.6 411.707 1538.9 416.319 cv
1539.67 417.725 1538.61 419.298 1536.81 419.413 cv
1530.55 419.807 1517.87 421.769 1509.82 430.886 cv
1508.83 432.015 1506.78 432.006 1505.65 430.888 cv
cp
.85098 .368627 .27451 rgb
f
1621.36 430.888 mo
1627.26 427.672 1619.87 416.347 1609.89 413.444 cv
1599.05 410.893 1590.41 411.707 1588.11 416.319 cv
1587.34 417.725 1588.4 419.298 1590.2 419.413 cv
1596.46 419.807 1609.14 421.769 1617.19 430.886 cv
1618.18 432.015 1620.23 432.006 1621.36 430.888 cv
cp
f
1539.23 478.277 mo
1539.23 483.073 1530.32 486.96 1519.33 486.96 cv
1508.34 486.96 1499.43 483.073 1499.43 478.277 cv
1499.43 473.482 1508.34 469.594 1519.33 469.594 cv
1530.32 469.594 1539.23 473.482 1539.23 478.277 cv
.968627 .572549 .521569 rgb
f
1587.78 478.277 mo
1587.78 483.073 1596.69 486.96 1607.68 486.96 cv
1618.67 486.96 1627.58 483.073 1627.58 478.277 cv
1627.58 473.482 1618.67 469.594 1607.68 469.594 cv
1596.69 469.594 1587.78 473.482 1587.78 478.277 cv
f
1647.84 450.6 mo
1640.43 378.241 li
1666.46 392.768 li
1661.66 436.463 li
1647.84 450.6 li
cp
.901961 .501961 .423529 rgb
f
1479.66 451.412 mo
1487.15 378.241 li
1461.13 392.768 li
1465.92 436.463 li
1479.66 451.412 li
cp
f
1456.81 384.037 mo
1459.04 380.072 1463.21 377.32 1467.94 375.401 cv
1467.2 374.86 1466.92 374.009 1467.34 372.737 cv
1468.2 370.11 1470.84 368.498 1474.1 367.52 cv
1470.8 366.786 1469.02 364.974 1471.23 361.16 cv
1473.75 356.811 1478.93 357.121 1484.3 359.1 cv
1499.41 338.579 1569.23 332.619 1567.6 340.756 cv
1567.22 342.65 1565.71 344.558 1563.61 346.377 cv
1604.1 340.367 1649.76 346.979 1644.93 355.043 cv
1643.04 358.213 1638.25 360.329 1632.37 361.734 cv
1668.84 367.197 1673.7 390.165 1671.81 392.768 cv
1669.85 395.476 1665.17 392.768 1665.17 392.768 cv
1665.17 392.768 1671.81 400.425 1628.39 394.262 cv
1609.1 391.524 1600.46 387.736 1596.81 384.371 cv
1595.88 384.491 1594.92 384.613 1593.93 384.737 cv
1529.22 392.861 1491.96 378.241 1491.96 378.241 cv
1491.96 378.241 1521.66 399.024 1501.49 398.383 cv
1487.24 397.93 1481.32 390.859 1478.27 385.451 cv
1461.13 392.768 li
1461.13 392.768 1449.38 397.204 1456.81 384.037 cv
cp
.85098 .368627 .27451 rgb
f
1507.53 370.17 mo
1507.53 370.17 1545.63 378.575 1574.95 377.267 cv
1604.27 375.96 1583.35 364.941 1583.35 364.941 cv
1583.35 364.941 1607.07 383.057 1507.53 370.17 cv
cp
1 .435294 .321569 rgb
f
1522.79 490.391 mo
1505.9 490.391 1492.21 478.485 1492.21 463.809 cv
1492.21 449.124 1505.9 437.218 1522.79 437.218 cv
1539.68 437.218 1553.38 449.124 1553.38 463.809 cv
1553.38 478.485 1539.68 490.391 1522.79 490.391 cv
1522.79 431.728 mo
1502.42 431.728 1485.9 446.091 1485.9 463.809 cv
1485.9 481.519 1502.42 495.881 1522.79 495.881 cv
1543.17 495.881 1559.69 481.519 1559.69 463.809 cv
1559.69 446.091 1543.17 431.728 1522.79 431.728 cv
.658824 .286275 .211765 rgb
f
1522.79 490.391 mo
1505.9 490.391 1492.21 478.485 1492.21 463.809 cv
1492.21 449.124 1505.9 437.218 1522.79 437.218 cv
1539.68 437.218 1553.38 449.124 1553.38 463.809 cv
1553.38 478.485 1539.68 490.391 1522.79 490.391 cv
1509.18 485.747 mo
1507.9 487.025 li
1510.26 488.171 1512.82 489.053 1515.51 489.625 cv
1518.19 486.946 li
1518.57 486.956 1518.95 486.96 1519.33 486.96 cv
1530.32 486.96 1539.23 483.073 1539.23 478.277 cv
1539.23 475.817 1536.89 473.596 1533.12 472.016 cv
1533.18 471.953 li
1533.45 471.953 li
1533.52 471.794 1533.59 471.634 1533.66 471.473 cv
1551.19 453.943 li
1550.17 451.717 1548.81 449.638 1547.17 447.757 cv
1534.96 459.972 li
1534.67 458.268 1534.17 456.655 1533.51 455.174 cv
1533.52 455.046 1533.53 454.916 1533.53 454.785 cv
1533.53 452.979 1532.33 451.415 1530.59 450.649 cv
1529.47 449.404 1528.18 448.377 1526.77 447.622 cv
1534.98 439.417 li
1532.4 438.442 1529.63 437.771 1526.74 437.446 cv
1517.4 446.785 li
1513.51 448.08 1510.29 451.361 1508.5 455.684 cv
1493.31 470.874 li
1494.08 473.3 1495.23 475.589 1496.71 477.685 cv
1507.29 467.101 li
1507.53 468.476 1507.9 469.79 1508.39 471.024 cv
1502.99 472.577 1499.43 475.246 1499.43 478.277 cv
1499.43 481.455 1503.34 484.234 1509.18 485.747 cv
.992157 .831372 .756863 rgb
f
1533.45 471.953 mo
1533.18 471.953 li
1533.66 471.473 li
1533.59 471.634 1533.52 471.794 1533.45 471.953 cv
1508.39 471.024 mo
1507.9 469.79 1507.53 468.476 1507.29 467.101 cv
1526.77 447.622 li
1528.18 448.377 1529.47 449.404 1530.59 450.649 cv
1529.86 450.329 1529.04 450.149 1528.16 450.149 cv
1525.2 450.149 1522.79 452.225 1522.79 454.785 cv
1522.79 457.345 1525.2 459.421 1528.16 459.421 cv
1530.97 459.421 1533.28 457.553 1533.51 455.174 cv
1534.17 456.655 1534.67 458.268 1534.96 459.972 cv
1524.98 469.948 li
1523.19 469.718 1521.29 469.594 1519.33 469.594 cv
1515.29 469.594 1511.53 470.12 1508.39 471.024 cv
1508.5 455.684 mo
1510.29 451.361 1513.51 448.08 1517.4 446.785 cv
1508.5 455.684 li
.513725 .486274 .560784 rgb
f
1528.16 459.421 mo
1525.2 459.421 1522.79 457.345 1522.79 454.785 cv
1522.79 452.225 1525.2 450.149 1528.16 450.149 cv
1529.04 450.149 1529.86 450.329 1530.59 450.649 cv
1532.33 451.415 1533.53 452.979 1533.53 454.785 cv
1533.53 454.916 1533.52 455.046 1533.51 455.174 cv
1533.28 457.553 1530.97 459.421 1528.16 459.421 cv
1 1 1 rgb
f
1519.33 486.96 mo
1518.95 486.96 1518.57 486.956 1518.19 486.946 cv
1533.12 472.016 li
1536.89 473.596 1539.23 475.817 1539.23 478.277 cv
1539.23 483.073 1530.32 486.96 1519.33 486.96 cv
1509.18 485.747 mo
1503.34 484.234 1499.43 481.455 1499.43 478.277 cv
1499.43 475.246 1502.99 472.577 1508.39 471.024 cv
1511.53 470.12 1515.29 469.594 1519.33 469.594 cv
1521.29 469.594 1523.19 469.718 1524.98 469.948 cv
1509.18 485.747 li
.980392 .721569 .690196 rgb
f
1496.71 477.685 mo
1495.23 475.589 1494.08 473.3 1493.31 470.874 cv
1508.5 455.684 li
1507.53 458.034 1506.99 460.691 1506.99 463.506 cv
1506.99 464.74 1507.09 465.942 1507.29 467.101 cv
1496.71 477.685 li
1526.77 447.622 mo
1525.04 446.695 1523.13 446.18 1521.12 446.18 cv
1519.83 446.18 1518.59 446.391 1517.4 446.785 cv
1526.74 437.446 li
1529.63 437.771 1532.4 438.442 1534.98 439.417 cv
1526.77 447.622 li
.996078 .898039 .854902 rgb
f
1507.29 467.101 mo
1507.09 465.942 1506.99 464.74 1506.99 463.506 cv
1506.99 460.691 1507.53 458.034 1508.5 455.684 cv
1517.4 446.785 li
1518.59 446.391 1519.83 446.18 1521.12 446.18 cv
1523.13 446.18 1525.04 446.695 1526.77 447.622 cv
1507.29 467.101 li
.709804 .690196 .737255 rgb
f
1515.51 489.625 mo
1512.82 489.053 1510.26 488.171 1507.9 487.025 cv
1509.18 485.747 li
1511.85 486.438 1514.91 486.865 1518.19 486.946 cv
1515.51 489.625 li
1533.12 472.016 mo
1533.07 471.994 1533.02 471.973 1532.97 471.953 cv
1533.18 471.953 li
1533.12 472.016 li
1533.66 471.473 mo
1534.67 469.087 1535.25 466.381 1535.25 463.506 cv
1535.25 462.295 1535.15 461.113 1534.96 459.972 cv
1547.17 447.757 li
1548.81 449.638 1550.17 451.717 1551.19 453.943 cv
1533.66 471.473 li
.996078 .898039 .854902 rgb
f
1533.18 471.953 mo
1532.97 471.953 li
1530.73 471.034 1528 470.338 1524.98 469.948 cv
1534.96 459.972 li
1535.15 461.113 1535.25 462.295 1535.25 463.506 cv
1535.25 466.381 1534.67 469.087 1533.66 471.473 cv
1533.18 471.953 li
.709804 .690196 .737255 rgb
f
1518.19 486.946 mo
1514.91 486.865 1511.85 486.438 1509.18 485.747 cv
1524.98 469.948 li
1528 470.338 1530.73 471.034 1532.97 471.953 cv
1533.02 471.973 1533.07 471.994 1533.12 472.016 cv
1518.19 486.946 li
.988235 .831372 .815686 rgb
f
1604.22 490.391 mo
1587.33 490.391 1573.63 478.485 1573.63 463.809 cv
1573.63 449.124 1587.33 437.218 1604.22 437.218 cv
1621.11 437.218 1634.8 449.124 1634.8 463.809 cv
1634.8 478.485 1621.11 490.391 1604.22 490.391 cv
1604.22 431.728 mo
1583.84 431.728 1567.32 446.091 1567.32 463.809 cv
1567.32 481.519 1583.84 495.881 1604.22 495.881 cv
1624.59 495.881 1641.11 481.519 1641.11 463.809 cv
1641.11 446.091 1624.59 431.728 1604.22 431.728 cv
.658824 .286275 .211765 rgb
f
1604.22 490.391 mo
1587.33 490.391 1573.63 478.485 1573.63 463.809 cv
1573.63 449.124 1587.33 437.218 1604.22 437.218 cv
1621.11 437.218 1634.8 449.124 1634.8 463.809 cv
1634.8 478.485 1621.11 490.391 1604.22 490.391 cv
1592.47 483.879 mo
1589.32 487.025 li
1591.69 488.171 1594.24 489.053 1596.93 489.625 cv
1600.23 486.331 li
1602.53 486.737 1605.04 486.96 1607.68 486.96 cv
1618.67 486.96 1627.58 483.073 1627.58 478.277 cv
1627.58 475.101 1623.67 472.322 1617.83 470.808 cv
1618.19 469.867 1618.48 468.881 1618.7 467.857 cv
1632.61 453.943 li
1631.59 451.717 1630.24 449.638 1628.59 447.757 cv
1618.41 457.942 li
1618.14 456.979 1617.81 456.054 1617.41 455.176 cv
1617.43 455.047 1617.43 454.917 1617.43 454.785 cv
1617.43 452.979 1616.24 451.415 1614.49 450.649 cv
1612.93 448.912 1611.04 447.6 1608.96 446.861 cv
1616.4 439.417 li
1613.82 438.442 1611.05 437.771 1608.16 437.446 cv
1574.74 470.874 li
1575.5 473.3 1576.65 475.589 1578.13 477.685 cv
1590.93 464.883 li
1591.1 467.436 1591.72 469.83 1592.69 471.953 cv
1594.04 471.953 li
1590.18 473.536 1587.78 475.784 1587.78 478.277 cv
1587.78 480.412 1589.54 482.367 1592.47 483.879 cv
.992157 .831372 .756863 rgb
f
1594.04 471.953 mo
1592.69 471.953 li
1591.72 469.83 1591.1 467.436 1590.93 464.883 cv
1608.96 446.861 li
1611.04 447.6 1612.93 448.912 1614.49 450.649 cv
1613.76 450.329 1612.94 450.149 1612.07 450.149 cv
1609.1 450.149 1606.7 452.225 1606.7 454.785 cv
1606.7 457.345 1609.1 459.421 1612.07 459.421 cv
1614.88 459.421 1617.18 457.553 1617.41 455.176 cv
1617.81 456.054 1618.14 456.979 1618.41 457.942 cv
1606.75 469.603 li
1601.84 469.702 1597.39 470.577 1594.04 471.953 cv
1617.83 470.808 mo
1617.28 470.666 1616.72 470.535 1616.14 470.416 cv
1618.7 467.857 li
1618.48 468.881 1618.19 469.867 1617.83 470.808 cv
.513725 .486274 .560784 rgb
f
1612.07 459.421 mo
1609.1 459.421 1606.7 457.345 1606.7 454.785 cv
1606.7 452.225 1609.1 450.149 1612.07 450.149 cv
1612.94 450.149 1613.76 450.329 1614.49 450.649 cv
1616.24 451.415 1617.43 452.979 1617.43 454.785 cv
1617.43 454.917 1617.43 455.047 1617.41 455.176 cv
1617.18 457.553 1614.88 459.421 1612.07 459.421 cv
1 1 1 rgb
f
1607.68 486.96 mo
1605.04 486.96 1602.53 486.737 1600.23 486.331 cv
1616.14 470.416 li
1616.72 470.535 1617.28 470.666 1617.83 470.808 cv
1623.67 472.322 1627.58 475.101 1627.58 478.277 cv
1627.58 483.073 1618.67 486.96 1607.68 486.96 cv
1592.47 483.879 mo
1589.54 482.367 1587.78 480.412 1587.78 478.277 cv
1587.78 475.784 1590.18 473.536 1594.04 471.953 cv
1597.39 470.577 1601.84 469.702 1606.75 469.603 cv
1592.47 483.879 li
.980392 .721569 .690196 rgb
f
1578.13 477.685 mo
1576.65 475.589 1575.5 473.3 1574.74 470.874 cv
1608.16 437.446 li
1611.05 437.771 1613.82 438.442 1616.4 439.417 cv
1608.96 446.861 li
1607.71 446.418 1606.39 446.18 1605.02 446.18 cv
1597.22 446.18 1590.89 453.938 1590.89 463.506 cv
1590.89 463.97 1590.9 464.429 1590.93 464.883 cv
1578.13 477.685 li
.996078 .898039 .854902 rgb
f
1590.93 464.883 mo
1590.9 464.429 1590.89 463.97 1590.89 463.506 cv
1590.89 453.938 1597.22 446.18 1605.02 446.18 cv
1606.39 446.18 1607.71 446.418 1608.96 446.861 cv
1590.93 464.883 li
.709804 .690196 .737255 rgb
f
1596.93 489.625 mo
1594.24 489.053 1591.69 488.171 1589.32 487.025 cv
1592.47 483.879 li
1594.54 484.949 1597.2 485.798 1600.23 486.331 cv
1596.93 489.625 li
1618.7 467.857 mo
1618.99 466.468 1619.15 465.01 1619.15 463.506 cv
1619.15 461.56 1618.89 459.688 1618.41 457.942 cv
1628.59 447.757 li
1630.24 449.638 1631.59 451.717 1632.61 453.943 cv
1618.7 467.857 li
.996078 .898039 .854902 rgb
f
1616.14 470.416 mo
1613.57 469.889 1610.7 469.594 1607.68 469.594 cv
1607.36 469.594 1607.05 469.597 1606.75 469.603 cv
1618.41 457.942 li
1618.89 459.688 1619.15 461.56 1619.15 463.506 cv
1619.15 465.01 1618.99 466.468 1618.7 467.857 cv
1616.14 470.416 li
.709804 .690196 .737255 rgb
f
1600.23 486.331 mo
1597.2 485.798 1594.54 484.949 1592.47 483.879 cv
1606.75 469.603 li
1607.05 469.597 1607.36 469.594 1607.68 469.594 cv
1610.7 469.594 1613.57 469.889 1616.14 470.416 cv
1600.23 486.331 li
.988235 .831372 .815686 rgb
f
1570.46 468.691 mo
1556.46 468.691 li
1556.46 461.774 li
1570.46 461.774 li
1570.46 468.691 li
cp
.658824 .286275 .211765 rgb
f
1493.31 450.709 mo
1466.54 433.776 li
1464.44 435.993 li
1488.53 460.058 li
1493.31 450.709 li
cp
f
1633.7 450.709 mo
1660.47 433.776 li
1662.57 435.993 li
1638.48 460.058 li
1633.7 450.709 li
cp
f
2386.96 1424.85 mo
2386.96 1435.31 2289.6 1443.79 2169.5 1443.79 cv
2049.4 1443.79 1952.04 1435.31 1952.04 1424.85 cv
1952.04 1414.39 2049.4 1405.91 2169.5 1405.91 cv
2289.6 1405.91 2386.96 1414.39 2386.96 1424.85 cv
cp
.988235 .662745 .584314 rgb
f
2252.02 597.48 mo
2285.89 632.451 li
2301.41 648.477 2312.1 669.109 2316.58 691.694 cv
2384.16 1032.16 li
2296.97 1056.13 li
2252.02 597.48 li
cp
.247059 .254902 .403922 rgb
f
2090.84 592.952 mo
2037.12 648.417 li
1991.92 507.943 li
1880.99 569.679 li
1987.9 740.583 li
1999.59 759.971 2021.29 769.545 2042.34 764.601 cv
2065.38 759.187 li
2090.84 592.952 li
cp
f
1904.73 533.03 mo
1886.92 549.111 1877.61 561.94 1880.99 569.679 cv
1884.37 577.418 1901.27 581.975 1922.97 574.79 cv
1960.77 562.272 2001.79 530.559 1991.92 507.943 cv
1982.04 485.327 1935.77 505.013 1904.73 533.03 cv
cp
.254902 .211765 .32549 rgb
f
1967.31 489.834 mo
1964.91 479.229 1956.41 485.648 1949.58 493.07 cv
1945.38 485.671 1938.63 479.823 1928.43 478.109 cv
1902.8 473.802 1874.42 496.891 1879.62 524.408 cv
1884.81 551.925 1913.6 556.232 1913.6 556.232 cv
1954.27 528.358 li
1954.27 528.358 1971.51 508.353 1967.31 489.834 cv
cp
.988235 .741176 .623529 rgb
f
1908.56 481.822 mo
1928.92 510.842 li
1929.67 511.634 1930.88 511.626 1931.62 510.826 cv
1932.35 510.025 1932.35 508.734 1931.6 507.943 cv
1911.39 479.091 li
1911.35 479.042 li
1910.04 479.393 1908.75 479.807 1907.47 480.277 cv
1907.8 480.813 1908.16 481.33 1908.56 481.822 cv
cp
.968627 .572549 .521569 rgb
f
1888.86 495.03 mo
1888.56 494.666 1888.31 494.279 1888.07 493.882 cv
1887.18 494.94 1886.35 496.039 1885.58 497.173 cv
1885.72 497.372 1885.87 497.569 1886.03 497.761 cv
1906.39 526.78 li
1907.14 527.572 1908.34 527.565 1909.08 526.765 cv
1909.82 525.963 1909.81 524.673 1909.07 523.881 cv
1888.86 495.03 li
cp
f
2190.52 1210.01 mo
2190.52 1363.68 li
2224.9 1363.68 li
2235.13 1299.18 2242.91 1249.02 2248.8 1210.01 cv
2190.52 1210.01 li
cp
.988235 .741176 .623529 rgb
f
2222.73 1242.81 mo
2230.15 1241.96 2237.38 1240.69 2244.38 1239.06 cv
2245.96 1228.75 2247.43 1219.08 2248.8 1210.01 cv
2190.52 1210.01 li
2190.52 1243.75 li
2200.94 1244.34 2211.73 1244.07 2222.73 1242.81 cv
cp
.254902 .211765 .32549 rgb
f
2294.31 1387.37 mo
2224.63 1363.55 li
2190.52 1363.68 li
2191.01 1408.66 li
2192.47 1415.19 2197.64 1419.76 2203.58 1419.76 cv
2204.58 1419.76 2205.39 1418.84 2205.39 1417.71 cv
2205.39 1410.12 li
2237.52 1410.12 li
2237.52 1413.42 li
2237.52 1416.92 2240.03 1419.76 2243.11 1419.76 cv
2288.39 1419.75 li
2304.55 1419.75 2309.15 1394.66 2294.31 1387.37 cv
cp
.92549 .215686 .337255 rgb
f
2280.58 1386.67 mo
2283.15 1383.55 li
2224.63 1363.55 li
2207.89 1357.81 li
2190.52 1363.68 li
2253.29 1396.65 li
2263.29 1398.88 2273.61 1395.11 2280.58 1386.67 cv
cp
.988235 .741176 .623529 rgb
f
2148.46 1210.01 mo
2148.46 1363.68 li
2114.08 1363.68 li
2103.84 1299.18 2096.07 1249.02 2090.18 1210.01 cv
2148.46 1210.01 li
cp
f
2116.25 1242.81 mo
2108.83 1241.96 2101.6 1240.69 2094.6 1239.06 cv
2093.02 1228.75 2091.55 1219.08 2090.18 1210.01 cv
2148.46 1210.01 li
2148.46 1243.75 li
2138.04 1244.34 2127.25 1244.07 2116.25 1242.81 cv
cp
.254902 .211765 .32549 rgb
f
2044.67 1387.37 mo
2114.35 1363.55 li
2148.46 1363.68 li
2147.96 1408.66 li
2146.51 1415.19 2141.33 1419.76 2135.4 1419.76 cv
2134.4 1419.76 2133.59 1418.84 2133.59 1417.71 cv
2133.59 1410.12 li
2101.46 1410.12 li
2101.46 1413.42 li
2101.46 1416.92 2098.95 1419.76 2095.87 1419.76 cv
2050.59 1419.75 li
2034.42 1419.75 2029.83 1394.66 2044.67 1387.37 cv
cp
.92549 .215686 .337255 rgb
f
2058.41 1386.67 mo
2055.83 1383.55 li
2114.35 1363.55 li
2131.09 1357.81 li
2148.46 1363.68 li
2085.69 1396.65 li
2075.69 1398.88 2065.37 1395.11 2058.41 1386.67 cv
cp
.988235 .741176 .623529 rgb
f
2270.81 531.541 mo
2260.5 469.594 li
2078.5 469.594 li
2068.19 531.541 li
2064.61 553.07 2073.63 574.752 2091.43 587.388 cv
2108.29 599.361 2133.61 611.293 2169.5 614.349 cv
2205.39 611.293 2230.71 599.361 2247.57 587.388 cv
2265.37 574.752 2274.39 553.07 2270.81 531.541 cv
cp
.811765 .329412 .427451 rgb
f
2236.29 586.218 mo
2196.04 573.948 li
2169.5 573.948 li
2142.96 573.948 li
2102.71 586.218 li
2086.77 591.079 2075.29 606.578 2074.04 624.934 cv
2020.91 1226.1 li
2169.5 1226.1 li
2318.09 1226.1 li
2264.96 624.934 li
2263.71 606.578 2252.23 591.079 2236.29 586.218 cv
cp
.247059 .254902 .403922 rgb
f
2179.35 778.067 mo
2256.17 600.559 li
2256.16 600.547 li
2251.13 593.755 2244.27 588.652 2236.29 586.218 cv
2196.04 573.948 li
2169.5 573.948 li
2142.96 573.948 li
2102.71 586.218 li
2094.87 588.608 2088.12 593.572 2083.12 600.179 cv
2083.12 600.179 li
2160.1 778.067 li
2163.83 786.696 2175.62 786.696 2179.35 778.067 cv
cp
.980392 .713726 .215686 rgb
f
2177.92 747.341 mo
2240.77 587.917 li
2239.32 587.257 2237.82 586.687 2236.29 586.218 cv
2231.34 584.71 li
2176.86 722.904 li
2174.08 729.941 2165.33 729.941 2162.55 722.904 cv
2108.03 584.598 li
2102.71 586.218 li
2101.3 586.647 2099.93 587.164 2098.6 587.754 cv
2161.51 747.341 li
2164.69 755.412 2174.73 755.412 2177.92 747.341 cv
cp
.980392 .458824 .0862745 rgb
f
2182.58 678.145 mo
2227.21 583.45 li
2196.04 573.948 li
2169.5 573.948 li
2142.96 573.948 li
2112.19 583.329 li
2156.87 678.145 li
2162.11 689.255 2177.34 689.255 2182.58 678.145 cv
cp
1 1 1 rgb
f
2141.89 516.338 mo
2141.89 584.617 li
2141.89 599.858 2154.25 638.36 2169.49 638.36 cv
2184.73 638.36 2197.09 599.858 2197.09 584.617 cv
2197.09 516.338 li
2141.89 516.338 li
cp
.968627 .572549 .521569 rgb
f
2141.89 516.338 mo
2141.89 569.455 li
2197.09 569.455 li
2197.09 516.338 li
2141.89 516.338 li
cp
.254902 .211765 .32549 rgb
f
2032.8 411.186 mo
2027.54 411.186 li
2022.27 411.186 li
2011.12 437.708 li
2010.03 440.286 2011.32 443.208 2014.03 444.284 cv
2016.44 445.243 2019.84 446.237 2024.37 446.776 cv
2026.47 447.026 2028.61 447.026 2030.71 446.776 cv
2035.23 446.237 2038.64 445.243 2041.04 444.284 cv
2043.75 443.208 2045.04 440.286 2043.96 437.708 cv
2032.8 411.186 li
cp
.980392 .698039 .176471 rgb
f
2158.66 364.815 mo
1985.08 307.176 li
1979.83 305.433 1979.83 298.789 1985.08 297.046 cv
2158.66 239.407 li
2164.38 237.509 2170.66 237.509 2176.38 239.407 cv
2349.96 297.046 li
2355.21 298.789 2355.21 305.433 2349.96 307.176 cv
2176.38 364.815 li
2170.66 366.713 2164.37 366.713 2158.66 364.815 cv
cp
.254902 .211765 .32549 rgb
f
2167.52 297.511 mo
2113.96 297.511 2070.54 310.517 2070.54 326.561 cv
2070.54 374.049 li
2070.54 377.418 2073.96 379.871 2077.36 378.894 cv
2091.6 374.8 2126.6 371.906 2167.52 371.906 cv
2208.44 371.906 2243.43 374.8 2257.68 378.894 cv
2261.08 379.871 2264.5 377.418 2264.5 374.049 cv
2264.5 326.561 li
2264.5 310.517 2221.08 297.511 2167.52 297.511 cv
cp
.247059 .254902 .403922 rgb
f
2027.89 297.375 mo
2027.19 297.375 li
2024.56 297.375 2022.43 295.354 2022.43 292.86 cv
2022.43 285.59 li
2022.43 283.096 2024.56 281.074 2027.19 281.074 cv
2027.89 281.074 li
2030.51 281.074 2032.65 283.096 2032.65 285.59 cv
2032.65 292.86 li
2032.65 295.354 2030.51 297.375 2027.89 297.375 cv
cp
.254902 .211765 .32549 rgb
f
2027.54 291.868 mo
2027.54 291.868 li
2030.15 291.868 2032.26 293.874 2032.26 296.349 cv
2032.26 406.706 li
2032.26 409.18 2030.15 411.186 2027.54 411.186 cv
2024.93 411.186 2022.81 409.18 2022.81 406.706 cv
2022.81 296.349 li
2022.81 293.874 2024.93 291.868 2027.54 291.868 cv
cp
.980392 .698039 .176471 rgb
f
2037.33 412.709 mo
2037.33 417.816 2032.95 421.957 2027.54 421.957 cv
2022.13 421.957 2017.74 417.816 2017.74 412.709 cv
2017.74 407.602 2022.13 403.462 2027.54 403.462 cv
2032.95 403.462 2037.33 407.602 2037.33 412.709 cv
cp
.980392 .745098 .313726 rgb
f
2090.5 454.55 mo
2090.5 454.55 2081.19 433.776 2065.51 433.776 cv
2049.83 433.776 2042.09 454.458 2052.83 471.118 cv
2063.57 487.778 2088.5 479.069 2088.5 479.069 cv
2090.5 454.55 li
cp
.988235 .741176 .623529 rgb
f
2081.38 458.678 mo
2081.38 458.678 2077.12 449.153 2069.93 449.153 cv
2062.74 449.153 2059.19 458.636 2064.12 466.274 cv
2069.04 473.914 2080.47 469.92 2080.47 469.92 cv
2081.38 458.678 li
cp
.968627 .572549 .521569 rgb
f
2248.48 454.55 mo
2248.48 454.55 2257.79 433.776 2273.47 433.776 cv
2289.15 433.776 2296.88 454.458 2286.15 471.118 cv
2275.41 487.778 2250.48 479.069 2250.48 479.069 cv
2248.48 454.55 li
cp
.988235 .741176 .623529 rgb
f
2255.57 458.678 mo
2255.57 458.678 2259.84 449.153 2267.03 449.153 cv
2274.22 449.153 2277.77 458.636 2272.84 466.274 cv
2267.92 473.914 2256.49 469.92 2256.49 469.92 cv
2255.57 458.678 li
cp
.968627 .572549 .521569 rgb
f
2080.7 378.241 mo
2088.03 478.525 li
2089.66 500.701 2098.41 522.039 2113.3 540.114 cv
2139.76 572.223 2194.7 572.352 2221.35 540.367 cv
2225.03 535.957 li
2240.04 517.939 2248.93 496.628 2250.68 474.445 cv
2258.28 378.241 li
2080.7 378.241 li
cp
.988235 .741176 .623529 rgb
f
2191.74 527.856 mo
2145.46 529.559 li
2145.46 529.559 2146.69 552.396 2171.35 549.813 cv
2189.02 547.961 2191.74 527.856 2191.74 527.856 cv
cp
1 1 1 rgb
f
2191.74 527.856 mo
2145.46 529.559 li
2145.46 529.559 2146.69 552.396 2171.35 549.813 cv
2189.02 547.961 2191.74 527.856 2191.74 527.856 cv
cp
f
2173.39 549.496 mo
2172.94 543.928 2168.1 538.513 2161.28 536.55 cv
2156.2 535.087 2151.24 535.895 2147.88 538.311 cv
2150.8 544.44 2157.23 551.292 2171.35 549.813 cv
2172.05 549.739 2172.73 549.626 2173.39 549.496 cv
cp
.968627 .572549 .521569 rgb
f
2179.19 502.627 mo
2179.19 508.171 2174.97 512.666 2169.77 512.666 cv
2164.56 512.666 2160.35 508.171 2160.35 502.627 cv
2160.35 497.083 2164.56 492.589 2169.77 492.589 cv
2174.97 492.589 2179.19 497.083 2179.19 502.627 cv
cp
f
2174.12 509.661 mo
2168.92 509.661 2164.7 505.167 2164.7 499.623 cv
2164.7 497.092 2165.59 494.786 2167.04 493.02 cv
2163.17 494.266 2160.35 498.094 2160.35 502.627 cv
2160.35 508.171 2164.56 512.666 2169.77 512.666 cv
2172.59 512.666 2175.12 511.332 2176.85 509.23 cv
2175.99 509.508 2175.07 509.661 2174.12 509.661 cv
cp
.968627 .505882 .521569 rgb
f
2143.2 474.958 mo
2144.3 472.348 2144.93 469.343 2144.93 466.139 cv
2144.93 456.147 2138.85 448.048 2131.34 448.048 cv
2123.83 448.048 2117.75 456.147 2117.75 466.139 cv
2117.75 469.343 2118.38 472.348 2119.48 474.958 cv
2143.2 474.958 li
cp
.254902 .211765 .32549 rgb
f
2120.79 464.016 mo
2115.8 452.349 li
2115.29 451.161 2116.46 449.947 2117.67 450.417 cv
2125.96 453.65 li
2120.79 464.016 li
cp
f
2143.28 457.032 mo
2143.28 459.706 2140.97 461.873 2138.12 461.873 cv
2135.26 461.873 2132.95 459.706 2132.95 457.032 cv
2132.95 454.359 2135.26 452.192 2138.12 452.192 cv
2140.97 452.192 2143.28 454.359 2143.28 457.032 cv
cp
1 1 1 rgb
f
2218.66 474.958 mo
2219.76 472.348 2220.39 469.343 2220.39 466.139 cv
2220.39 456.147 2214.31 448.048 2206.8 448.048 cv
2199.29 448.048 2193.21 456.147 2193.21 466.139 cv
2193.21 469.343 2193.84 472.348 2194.94 474.958 cv
2218.66 474.958 li
cp
.254902 .211765 .32549 rgb
f
2218.74 464.016 mo
2223.74 452.349 li
2224.25 451.161 2223.07 449.947 2221.87 450.417 cv
2213.57 453.65 li
2218.74 464.016 li
cp
f
2218.74 457.032 mo
2218.74 459.706 2216.43 461.873 2213.57 461.873 cv
2210.72 461.873 2208.41 459.706 2208.41 457.032 cv
2208.41 454.359 2210.72 452.192 2213.57 452.192 cv
2216.43 452.192 2218.74 454.359 2218.74 457.032 cv
cp
1 1 1 rgb
f
2113.86 434.374 mo
2108.18 431.158 2115.29 419.833 2124.88 416.931 cv
2135.31 414.379 2143.62 415.193 2145.83 419.806 cv
2146.57 421.211 2145.55 422.785 2143.82 422.898 cv
2137.8 423.293 2125.61 425.254 2117.87 434.372 cv
2116.91 435.501 2114.94 435.492 2113.86 434.374 cv
cp
.811765 .329412 .427451 rgb
f
2225.12 434.374 mo
2230.8 431.158 2223.69 419.833 2214.1 416.931 cv
2203.67 414.379 2195.36 415.193 2193.15 419.806 cv
2192.41 421.211 2193.43 422.785 2195.16 422.898 cv
2201.18 423.293 2213.37 425.254 2221.11 434.372 cv
2222.07 435.501 2224.04 435.492 2225.12 434.374 cv
cp
f
2148.76 490.277 mo
2148.76 495.284 2140.19 499.344 2129.63 499.344 cv
2119.06 499.344 2110.49 495.284 2110.49 490.277 cv
2110.49 485.27 2119.06 481.21 2129.63 481.21 cv
2140.19 481.21 2148.76 485.27 2148.76 490.277 cv
cp
.968627 .572549 .521569 rgb
f
2190.22 490.277 mo
2190.22 495.284 2198.79 499.344 2209.35 499.344 cv
2219.92 499.344 2228.49 495.284 2228.49 490.277 cv
2228.49 485.27 2219.92 481.21 2209.35 481.21 cv
2198.79 481.21 2190.22 485.27 2190.22 490.277 cv
cp
f
2250.59 450.6 mo
2243.47 378.241 li
2268.5 392.768 li
2266.42 435.216 li
2250.59 450.6 li
cp
.811765 .329412 .427451 rgb
f
2088.86 451.412 mo
2096.06 378.241 li
2071.03 392.768 li
2072.56 435.216 li
2088.86 451.412 li
cp
f
2169.77 338.311 mo
2051.49 337.266 2072.16 403.462 2072.16 403.462 cv
2084.29 406.772 2096.82 409.154 2109.41 410.809 cv
2119.59 386.699 li
2125.49 412.543 li
2129.58 412.891 2133.66 413.171 2137.71 413.389 cv
2146.15 385.578 li
2153.42 413.945 li
2158.95 414.041 2164.41 414.041 2169.77 413.95 cv
2200.92 414.482 2235.55 412.15 2267.37 403.462 cv
2267.37 403.462 2288.04 337.266 2169.77 338.311 cv
cp
f
2158.87 372.274 mo
2158.87 372.274 2161.73 404.628 2166.34 405.508 cv
2170.96 406.388 2178 390.995 2179.32 392.754 cv
2180.64 394.513 2178.88 405.361 2187.89 405.544 cv
2196.91 405.728 2250.56 400.89 2250.56 400.89 cv
2250.56 400.89 2192.62 402.429 2188.22 400.78 cv
2183.83 399.131 2182.51 389.565 2179.54 389.565 cv
2176.57 389.565 2169.86 401.44 2167 397.372 cv
2164.15 393.304 2160.85 379.393 2158.87 372.274 cv
cp
.890196 .498039 .576471 rgb
f
2066.8 757.021 mo
2061.59 756.599 li
2068.12 664.417 li
2073.33 664.841 li
2066.8 757.021 li
cp
.254902 .211765 .32549 rgb
f
2276.43 776.566 mo
2269.42 677.58 li
2275.02 677.125 li
2282.03 776.112 li
2276.43 776.566 li
cp
f
2292.67 1039.38 mo
2284.56 910.819 li
2290.17 910.415 li
2298.27 1038.98 li
2292.67 1039.38 li
cp
f
2365.51 1037.28 mo
2307.61 1053.21 li
2307.21 1054.77 2306.1 1058.85 2305.77 1060.43 cv
2305.3 1060.34 2304.82 1060.29 2304.33 1060.29 cv
2297.68 1060.29 2292.29 1068.84 2292.29 1079.38 cv
2292.29 1089.93 2297.68 1098.48 2304.33 1098.48 cv
2304.87 1098.48 2305.4 1098.41 2305.92 1098.31 cv
2309.14 1110.43 2315.95 1119 2326.47 1119.51 cv
2347.53 1120.54 2374.33 1100.55 2376.24 1091.84 cv
2378.16 1083.12 2365.51 1037.28 2365.51 1037.28 cv
cp
.988235 .741176 .623529 rgb
f
2362.16 1078.49 mo
2361.84 1077.16 2360.57 1076.37 2359.33 1076.71 cv
2358.09 1077.06 2357.35 1078.42 2357.68 1079.75 cv
2363.14 1100.24 li
2363.49 1102.38 2363.33 1104.53 2362.74 1106.52 cv
2364.63 1105.17 2366.38 1103.8 2367.96 1102.44 cv
2367.96 1101.38 2367.87 1100.32 2367.69 1099.26 cv
2362.16 1078.49 li
cp
.968627 .572549 .521569 rgb
f
2343.48 1116.63 mo
2344.36 1113.78 2344.6 1110.69 2344.08 1107.63 cv
2338.55 1086.86 li
2338.23 1085.53 2336.96 1084.74 2335.72 1085.08 cv
2334.48 1085.43 2333.74 1086.79 2334.07 1088.12 cv
2339.53 1108.61 li
2340.1 1112.07 2339.33 1115.56 2337.55 1118.36 cv
2339.53 1117.9 2341.51 1117.31 2343.48 1116.63 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.1.0
%%For: (salma) ()
%%Title: (Vecteezy_Graduation-Characters_SA0421.eps)
%%CreationDate: 4/30/2021 12:19 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CTeT.FX?`eJH!Ib@R*OTS3$+[PTTsO0BmIaNs3Xs3#E&B1n0dkmNrn/luA7sT=rh0qc"<"*k,r7aT1`ZOfWuseEad@A*p](
%jA0*0q#:5Yn)"*<`J=KZQOh-S02b#pLYV6Wj/5-;P<\jRmsb6/]78t5V[m^[s8)-[O2(Pb_je-mIJ<NqWt4*:pWJ?4hn=L=n/&9X
%CVP/nn:/1NlDkHqq!d:Df5LZ)g-#DAp;O(V?bLm\iS1PCIsgJ+%LUAqD#DoB=Y%)ar_<4`im5=sd;Rljr+M."fB.L2rMM<O\&>'#
%k@ahjf5H09m^nP;^Adoq_u'K)F.E+)cakb-S%%:feh?B!^O/TGo/$:*_pdATHi<nE+*Gnbo.9e%a.GTS'*%R@?[`+!GAPgs7Ys?b
%s6(lU/Vp$+,lI*nm>(_Y^[jg<W4L<YIeAA@A=_).LYD+Hfc-_/g]3M0nKIE+s6B"'hgG+nj'-\-Z<hk.*e#gSr,k)Ye#aF2lKm>u
%o2sOLY1/56[%mLIBE,^EDsuQ^j"DMR_qWdM^AZWpnbKX9J+N+.[dN.*^sMRXr;-;ohL>@Rn)&Q#0:"%kl@ZkHnE&E.m+KYl]_^nN
%HhHr]r6s!eX4Q8.p?b?hL`aA-*aN.a]C5;4^]4/V?iTOG#$g\fr8fkUhuD5^s27G+7B0i\bHm05HT/S#Za?b2BA]GjLPE9<O3NX0
%F6UfV!Nq/m`EgJ#kb__?Gl5a'hu39)qd7X':/:dZj,6/#p>)(u:`]@?l4:VWZ[)BHMZ<R;gNWGfna65K2CX.Gp_T8_Im!Udhr*?E
%hgbIsiG3PWG;stY_u79nKWdT;epi#fn99&4n%\DEU#:k/pq[l]H]JR7oI'Z9^RJU.lDsC@Q[el!L[W"RZhJtDiMSp9g%-j]r9`6o
%5C`G,m=Tl`^u,.hiFeCgrq>A:Ie`UYm-r?8I/Ec1d*H%5qr[)AbXI$Q%rX\Hq>3r@ldC:-L&]WV2]k83CI@[9LVNcAs(VeK$C6a.
%^\[Zs)gc'VhWOg($X0`])t.]^Go2&2R.dtsfYa<tOS%Z3s7Z/e&)UVEXRgnb'n>o,lh@Tth&e4pl+bni?<aV)Qc+`!5Q8og\u(JT
%DsXh".ec^6B2?&8l:9[qouFhVXl/UD0>H7CfAZPdGT4bRbS;4,J+_@(hgYJ!S%jIIk2F:ghgbCp%tF92_cQa#TDAH"e+Iq_'jCU8
%&cB8Es7X?3n%S[FhrZEaQ&XaHDn^PpS)8Ygna2D'<D<C1huDebI@hUqKqIl!$ePN\2S[kms1`oih<K'*Z=!TlFI1mtiKsAq4mp)=
%pMoa'&+:.%r:8$T[NPP_'E>goc>W^P[B8)2rpF_)R>HgIr-.VdS)Wr,S+#6_I!a/`%pseg"nU\3J,fA7\"#Huk&8O<[P)H(]C&n<
%pr.`48*^[=hI"V(dr/TCq9HFm?U"DSYM[*ErO$JQ^NG[<#'Q3VMJ^P^%kkZpkth<M:OhrMrq%T&7=%X'kuBofc6]sTo?8^LcS+if
%I[OQ.>Y8^APZ_%4?679gH!+J(<3tg/XdV`P^]!dP#;:4q,ObZucXMBm)W?1#/Dnb+D(_0$q=O7JjboJO?`oaej`oHc[[6YuH'r$:
%QcIRUVjC2?:G8<25HUjZ1nOPBH`Bm'.6jZ,j71[[bJtu:b-(>Ng<[!qcC`+KC-RD:fmXQ`N`X9E=8^Hq:OIaa?H6$3qX>k>]_IfM
%m!+gdlN_R6B?/D@ma?]IZ>t]bP?V>BInbj,f1&[e3FD^`/RNm\qk^&0fc-2ZWRBJ1X!T_Cf2gM8rI4-QY8:!taGeO>@n0f&m!u./
%Njn',E%"4>9HQL=Z&\"fj7.6(4C4kKE[n&cQ?jH`VIcM9j7B+,P2tZ0jfq>>A$uW^.(+&`I&-I!<aTgQ51sU43*qM4C`RZL<M.kZ
%os$\\)d)c54'Jp_>OuGR95CZ=d:QVM7=2B`)dr&EHe"0p&(Yg2S+PE=a+'l1^A@I#U-J?!%'jl32"Ilk(j345Tj=.F4iak#kMsO+
%*&_KNbOK<g1JN4aBb*>lCst!omDOk]epKYgf[$>k4O'30aNHcu9%JVQ<E<8r'$D>9Fh=lK^=IUJ5;1UJZAGi&lE"(5mGgB+cgu5T
%*7*sBp:NU3cgASmiq)=dm,ucFSt<]ErlR;%Yb1P3^F1g`]WX);9Dpa<#^0(8XBn9/*UL?#]A\0N2tm5t8h[Hd=C4K]<j":,PMVYW
%PNp?/HaAro:X'r?5)imf.V)VfT"Xjbft6P,h8AU>9/#`t7PEMOM4V047pfVM47D#I]=62Fk]-7j9CI#q]6_2;cZf#np&=-#rp9Ng
%kLJnGmq8i!c_J7W\#oB0qqHGpZ[EQOp&$VZ<'H^Yce1[tO3imM+mUZOd^^Tm]l`sFAfoRH]Si2US`6Kl53jHZX5a)"c9fdn(SC)m
%kUH/Spc\K=3]I)LrlY!7i_7<reSL4OHXs=NrK_>LGP9l(BC3m7ra`a#\U3YC5N%%HHLF)onl,<^I1A2r%]m><i=#IOIdZg]`f+3n
%kr*G)q2MWmUZ\0/pCVM>i>b!=T(_C<Yu>SAoi8?6.#AP1Z%5c'nUOd.la$1IH9SUKdFX:>r6emZIG3>7c`QZ_DoqjU=W]6]Rj[N]
%A-95B#;9:7T5:&l[Q_-lre0UtZ?>]e+C:I6nFZ#9eVdMT?S-"+SN904mVl!4puf#LVc-suktaLHYrk36^9GS$ft\I`9UdV>jY>M&
%4^PdInaaZJMoQVeCr'F9\:tISAs9+E>+Ju%mlu;5/,5=1j=b=L?abInH]Mc3@'N:mSfd9`m0-:o0>+Of@G/dXC_^YBq+U7]06,Y>
%HtcsLdD!kHqa1"8p8,?KYA.DrgUB7<KmIHSi6c/SF.3on^2:>4>jXUcRmi+WW0]EK*j#[=><bgING`gA>2NlV+aZ[W]O'<.IC,Sm
%DZ)M25'Q>;C42Of5TMcS?WoZY>(8cG?D#gGh55Y/Z&ifr*2]mPZk;kBCWgc<0D:>_Ek77'>0=VQe\Ce-^\-,!WNU3:cS-S]_KtEX
%Z]nnuY_TKK'bWWSZ%(j5s3Fe4s2#/j&A!QA5.,PtpWJ&g8^fk=d^5Y<%QBRU)t'\K]ti4@D%dk#[r(^3B?]^^Rb?G?iFZb/n/4T?
%)_Fk?@$,It2>1d>s7cLcqu<:WlKMcXVlQfbL:nkaQM3U^=2-lC+(1g-?-ReekeHjK^FVFLB]VJKkE/R5Jku*1:UaZTcaXDK5NOZq
%kt`p,K;WZ,fUKP3gH=X<iLM=Q$ZFT\k>M'kNU5\.Z0kuD/c8l7=;\FdMkQL_Xe%`FM"lC&rbH.Es6NGET?\]$8M=qP^h?t2CPL*)
%Ai$B]%0):2W^fubQ`7+Ck$"U*M<_9jf?X,sm0D%>=&`STl35qqMX2oFL\AFSrJou[NUmKuhtc![I9+mQXf7rDe]U#QKai\_)]#Vn
%TU<k0_Zj]X9E?)I05Ti8fuSFR\,ZK0okf+Q\ZULNi\>(`(^nAf8!b$+Y+!f:bWe'\f!Cc\"1n?$rq.*)-eA7N@/g)-s0X(pIWiZT
%:Yf/c-)LR(r<N<.>Ge$]s7H7G55CWGZf9$.\88"Rr+r.U7O#l`jnQbb>r9AO>B'I0/4qbVmDI])YWZUga7L7\<j9mqRd7?iDY/iO
%0\1*ONNoSDCd\,c[<XO&m=jq+bI27mZ.YD#m9qn!m=$^6h\W`9Xm9g%gs!%hNr/1"2hT)k"^"F['322*Wa/H6Sl>GgFB_$7K+\AG
%XAK_5FDX;eK1^k?-uMl+?;Wk<K(eh>2srNIUJg!J[aV>Y+$?m=0Lb=!lfO7HUD8)%;oUjf^)<Pcpt<dO6_VZ?Q1f:5gY]?r^NQuf
%c]7_l06Z4O8D!7tl"9jU:<)2G+nh\d@=J^;c0o?TrFf-nJ$?!1\"M-lJLP33=A#e/;JE7P+$%cJfI?)FgA9#X4u6^K+IDu#Qlj(U
%oT-d6!FlhW]ZalP>UONI*pPEm.lDj2T(R\(UG^NiNr"hNE($\h"eP%`^\LCtrOi[BRIrMRe+*HUs8K2KrC=KR_d>P(kPoQbI/-^L
%qDD$(>K):<^4u7bpNu],Rs70MT3nelH0P8?Lk^BKn"5+,n`ejKTVu1Hqn%Vjo%FWSrl'X'?NCGqhr+rsHG=^pqTV7W-RD=MMdI,i
%oC(&cJ&*6(c2X^1Fd4>fp0[++1h7Ob#6m`e/ME-a_lQrmcd,;(R2P%a8s/q=f5+LAZbpVLLJaZqZc`695h^O6)"tGlisu\HK^2;3
%X.9=+.0[7E]OAE5D%d`qdQ@bBH\YsW5-&BL'A+,,LO5Ee=mtD0Oj/2uAujR/R-C"=EOA$;=0_'B]6Z,R]CB]JgMphNG18PNFsaWC
%Sgdsti(VMega:+N)bD_6N_AX&g?bK>[[)%.e0bB2j@V,L=;$jG^7DCm\pCK%=rYe(dUp-c,E2*E[)MfKAc'QthlZQa$PV6IMdN.1
%bLZKn`\Xr;MN5<^RV`7@puH\/X14TR`=kmMOu2li8SY`tVIZi&dtTBBPb/24EMT]-RdJ^k1gR`eke3:S=f9rJ/ph-!eG1/$>$#k?
%ALRet[81&@9s=7b1;J?oI=mP$*^%^@@Cns\^q.)k4Cs"#CcdQ@h1en;YBWaIm9n;o[F,uE1gq9/DhN\h:"Q&6-0sMK0jaJj&@99#
%nrI;op``spCRAXko6DLN'!K3;-!m\-8o)&@XguXDC4.F#[X%77o.sUQ#K=,VX2"0>Gs(Sn2I6)4cnMS83:%,Ff#(LoB-1q$4_qT0
%IZb$?(Qu`R30LE4.7TBC#^\K&E1,0-4e)DAkXq>LGhS#CNITT)A9[@:&C2iraJJLHVF+,'l'$mc^)tqEUE"_lj(YC1='`Q!X$C-8
%T9<5UMMC_*4trJQn[a@djZ!Uf#!?ZJYn;`dBS4(Gg>aJ,'\85*2)qd?I:c+HJ7)j)B=gE$(je1"CA15PPdB/@a0K9:JmeapfuM$?
%7fgW&$"b:Td]V6+9fhVCnERt>hSP^<H$n9&f5ZfE>IMrp>I$q+#JTB,DI)sXp9\Esi9_kAYP'%47<DtH0'66Ph6;R#EUp2=RTWE%
%1H97'kZS>iom9S_fYV&p%M8sV>h0$93RH'[W,W4QH7I=Fl(^OZhZCj,0e?W9,G,$bB&%8W)ECg`e]sH61_P2[BhPQkA[T6>\(Xol
%*G"07YoNP^fi!X2@nWO6:Q;K$Q<gB6"i5LcMu@/D,H&$jV"PNHjd^srTSI?5Y\0sM@%"rQhquA*.F1FsnR`#JTsNFZ[EBUM0)R'm
%JG[F'RU\")0(.!\$s;VB[G*`^XL]P4)XaeqFMBOe6>_8-&nO_g^lEQq/(m[/]Bt6Q"e=<DI[kd4[=t=<1i-hPi',:2_M',B2EOCi
%`=BUUe#&(farD*hX9,nLh(P+3Pq!NP4A/":f`]7g[^SCL`hbh&`NbtI]bIN1c,GVh+83[X3S8Sl->894+'=]m(VHe_2j_Jl;S/7^
%d/;f]k1q1?YU8,9:;t<X#WS?Tr>7H4+e:,t=0T<1)('uZ#og<"=MPmC24(qPrS>N"X4p9F<Nu")H;*GDAM!:P(N$)$MLp;Keia[.
%1@Kque(MEO?j4!nATYCuJA[[5hlDMC*nqsEF4l;8CZA+9;H[k$0&)HVr@qef0/.*;h\O\UE1EVXTc44P8eW2s;/lf+Z)pd&l!jdQ
%)?ncVE:l,d":6m7e//!skO":@$^'g7V@"&EIQ![Cp6+I_@k[bs?DF!uk:^Hi<l;kOkgi^M2jtX#%3$I44A8mV"ZnX)2d7$89+7m(
%P@nlr)noYV5_EUR^QWF/Zuq$qp%TEa40E(^e>C`IZrQMm:g.jp^Nk5!`)_$B;r<+D#?%]@'H@F[U$GVgE/GsDfA=dg]nsF9qJOuk
%a5D[<n!p3Z\FM)bRkOrOn&B)8EV]ENdqYDAl%l2j4qrAD'O)J'&b_BaLV_?3HBbZJV*]$Vs2]GY'OTUj*.]FGjlF2qI6"_Jhq9LH
%XV^gip:VFQPR.[DA&_GCksr8o?FQAS))'UL!u8I8PO1dRdtU?P;oeE-%rRYU,'TeK&'`HgmFToZ&&mDV-8.6O3c("aDdpV#X)1;g
%S+LAjP>'>C4p6SgeE6(**u40Z,s9qa_kmm=A#S4`[`"P`X")ktQV,e7l*"`\ANM]6PQO&O_6UK:_>a-s-YjI5"G\IN/ioMi:mEa%
%+YX!/K"3R64#H'@4a$F7N^/K"[s@2@PI1]`d&9:c(L'=@*2gM71ra?+d^!Ad<G[WK&04m%35M:%g2hIsQ,c_mq6c\r:M-!I<4+Fj
%F-MSf`>WNmB=0/k(Upk@Ggei/m>7QKVSW(9F/3?jOYV>rJ/UMDqhc'p#RB53Nbpr,=Ud1'"GrW5+d6Ot47':mHYTB?8:\,#[))s2
%([\HeR%U'M_&f%DJK';k]BY8E1[ASg-FDaPc\*1Hb$O4H-m6cjHRP1-CZ\DQ&(l[r"^860&H^e5ju7M#I@;St(#'RlV("QrA#3IR
%8b`=d%?^t^,0h%,'A3+roDLCPn$'WDO'f=>"6mn8'NX[;#cP-s^nI1#p=i(o6%tK2gFZ)MPH'NakdHB>lX1OLKuT8U>.D%_4jEhp
%O.0&0o5`s.C7AXCg3'W#A"D&g1mPBhbhFmGnBf^&TrAl<[$XQLP5UGir*2*Rb1f5)$(@c80F0$!W!nHspggjh&7'0T:UmOPaqWoq
%6%J:RN^LY<?dfcj/pA/R0MTs8*<r;KEG@V6^d^iO47JP22^@_\S>\,aZ&Y-feM\HFJ9LU#TB'TZGQU],[L$,H'alI<)`6SJd`!`\
%6Yo=K1+QTi,?BS18dU_FPB-\XE=(DCQJ[t_J=bE9n57O]4u0%;D3L8>i+T;Z!-Ni[Hk*:qr-Z+^)>_3()gH22,s):A0EnjW00C&U
%Pb\SS3`$<0Q)PESgE,;('jX:rM=AV03q4&8c:M@[lfADqAjp.ke-*&p7LoT,3W!ueGM*`Bpi<UW5sUbM"B8`:/$)+I_e\^a#?G5'
%1O9R`DBm:,AQ=$LfSsJ+K)>5\1hGB%N@R5bZOA6+c$_8`/h23C)iU[@J6nQG0LD[1EZWocW:4V&ka8fff\_'1?cB77i2''tj]FZ_
%n'(4Y_C2LQ3Mtr?H6&JeCf/`O*1KC1@`P8'o:d*:l3o96=D'F)AlQJu`c,:4ZlJKH%!ml79OC7?d8CWudFs^te$I[S=;`'#KkmAZ
%%lhj7-);Co-!V/:Vsrf2G9+F1T%75VCla<B3M9&L48%qcFZKt=6m4fs$lN]iRC5UZ:M=&lC&FDb]/$h8NhJY4CjA,+F)\Y1-;-8P
%\QC,E&?aQ-C7\QdjPF0"/+$J/S+NGk_Q31J;=Vm"(@C.!*l/UR:P)/H]?rD;Ib$]k<LXAl2f`>jgB"2(jG(BrXF7*nT;m1Fm?)jo
%<&EsUQIIs;63TrOcDB<hKPRqrCq?%8$'n\B/@W)2Pq`9H*9MaRmXi810WCL!pESaEnK1*QZ%$^5_"WH!PQscLZ,$\PU<8W=nbNf0
%(mqe03Hh7MVj_WSE$s>fK_M-tdlpceTpRR!iBtK%a=T("9HV/XrS/FcWWb?AM/KLr`&f^*EfoN9gWEA,L+aSVf@!Bu_Ea%.CY02L
%,cBo?jLmgaG<YjG]r>q6'Z9rG$)\VH'r-9lfLadRqrO]^>HgV,e]2r5qtRf1f<R=ad&8W!kM"7O0"Qo,#W@O@F"q[=7\`8hiWmHN
%9JRQ-gYK^MJa\j]1p_%9>h/?]oUFq#]7R0VViN]&SQK-I%QXC16F7I:ZectWL3(0Rc.kNt+SsP.m^.Zb$S!FmfA]5l&lO>%.S3\@
%DFk9LiWd;hf:n+,n3O8riL]Oi:gsMg*k/`&?a@NeL]@lc>i8`1QmUJPn?jX.lg8Q<]Y\8J+!fWPn1(<4_#r:-27(dIEd8<.2m&2R
%pWh5+<?/RTgQ7*7$ND72i,2]\+Yd8;4>FbL7?:j-4ZiC_PAjiE^Qc=_<f7.J'csjSO>AR<hi'6<GQE#\%A+P^\h.Fc5o9HJkbSB=
%+NDi%^&[(!*'61]+)5pIe.DuI.>Og_)tcgDHZJFZA">2W@5fo@ioQ%5pNh(3.H0*Ve??QX+XR:=+QFYj@JUd1=6,%LJetj.IWf[M
%NYN+4!"5]Q6+Rf`Tq%e7?&"u3%UJr9oW+P>4&ac\c0uDoY.P-#AFebpUN9/@(Z'gPEXb"LD;F,2NN:FJN+E+WK*`1M+NkQ0+*NF0
%Z)^HuaO'+N69LVtR*[Zdffr:QoQE61X2E--kCdhLMg<-'Eo=PLg&b<@RC@)oi!P)nE@4)#`hr?JUQ#>bA51FTcgGrsIL_%Z?qTuV
%d)JaUH7]iXlV9aWbcBD0gL[mAn:DW3b9MU@RqQWlK<Gpe)GF?PRHnfVDa#uukFk<cho5"EI.mC&D_g]RM?O=,5fiL5JMRQKX+:7L
%F#T;^=nF/eZB9WG+C^'[L,7')K](kf[`)jIMM3H-c$ZUdGe!!E(G+4oDH;l_msSgN&\!CF'S^&Y1,n8\/PZ+Be%Kp\"<uV';J>Y^
%oP?YMiZWr$pjFc]<`D=,D8#KsH8J@#D[!&l0RYYDh&(#S/-5BA@h_89inu;n#r:j'XD"Y*.onHN6`R_@_BsqdbErV"2Pm&i5')sV
%c;ld)<`SpWQ\"j<!ig7Q)r+@(L%9E^[1-4W2]6?2*g.!q7Lfb_*l\sLdRO#Sb]'m!AA`_97E70B6?^e!9rZgE@2*K+]'QnY41fK8
%BFWo;iXmMiA.2Ap":jcEL\f[4dh*a.mNT1;9T$Z+,D)`?--7jmq0pF1q^+dY'OM,JHS._lD@(sE(0X/B,'jLMO"U.$q#8a"mZ#2N
%JHK*lC]b`ajlfjr/UIt?"J-'d'E0_'Ar$;RPXMH/f0.P)B!g70oE4\o$tE\)itoR<l264q]IR50Hp!j>R-`?<$<tn8,f9MiVAto)
%q)&[r+)^P?@3'X'ND+bA\8)cCs4lot,4"e(g%9h?"+tDE'V)1Ta18ek7LaIY7L4"'eAALX<gd8mL<6cD&M!D!^*";?/-Hpn;T@cG
%8cBP8S,L,2\6'#=ctcb+2P+J'5V^&.Z#P136d`gRLKS];c<d"[G)*])n+Ae7Mh<f]bC7kj6!U@84)S0V8)8',5Xg5\q)3l\3*onq
%lJXJ'I^*n>N^a6N4kP`*(Z^+H<GE?qJ;Cd%TC4jBlOMe:$Vm!(fN)2?)k>%oONoOsV^\[:Vi@\edLVdgLpPM!f+8)B?;X8<+G#be
%%tQ,J1j%)QN$0U%'p>?"T8g?j[)8Gf-D3HGcXKQYWs5_Q!Z)&m&Z0M((lC!aZ)^n#_<Je)YbZ)Pn7,OSMA2F;BjjH)f6A>74GH/3
%5=W_W?pJH%->bXG[2E?Wkf`L+s+Eg5bB[-SLY2HXJZUN&n1:d7b=dXS+01=5`\H.lLe]'4cY6S7).J:2h]&l`0mg'XLtN5dMlCW"
%f@>i_.?+&`?DHa]+RE&E<Y05#6ZDn+Vem=ccCLfJL+bbiPQ-m2ScN1(g]8H0OV7b7WF\4m_oe_SO#a%GUk-QBh#fn`lrr8pd$F&4
%Qupbi1'-4Y[K+^=T8(*."C']6PbI"$k0-qbl#F%%HHZPb$^r*J#7sKi.K_tBNgRg^%pP6(hK^MG"8*"bq_?*#`MbIjXQt%bgeP)J
%\60sf@!`Buap)6MQmh#bb@V#aR36^fg`c,&"RFKpq`6k*oNVBQ!&+DuC-%#T#a`6C$Th=K"UCQF</?Q1I+##k'0e'q*%((`quPK'
%Xc*903gndEJd+WL"j_h!Xert]mG-\gfa're[<)S`W?U#0%VT%'2.<l\V4(<KAu:7&k^rl(CZW@5f*aJ(H[\0i+<nNj<jpsAVW1nk
%NkjftZA[Hn9uYU!GkI&AY!?5`i%%*YV79;WgPY^Z"<n'O(?e>oW!\lqHEK;Ni=p!V4LXXn5,'#qb6&X;Jp0b5!T/ZN>\$J[8+mZW
%5Hl.q-,tC1BIrKr%\E#FpsCf?A3-4BN7EL%;@!ib);A[0iGqa>bpR8amP;)M6JId/Tt\,Y$>i/D7i0!2*+hRt1_3_j+c#!VKMK+<
%)FhO'EPirN(%biWaG\]9?tG\'.5keSfg;`2!TkBU"t1nTU22+$h(Hl:%9JKn';c_aR9$W*aG=c?cW1T3Ds_qa3>d?J>T4?Ql7@*!
%E)0@:MkDtGeKi,]+iX-\JLi[f[>:0$AVi56elUhZK`.2oIWuct82scYX3-H_7-knal0St[WUTFS_i,G!WHT=+5>Z_K[ncQ[rAFVf
%_/B@:m+mlUC@c7t8@_!I57`k1+Dur?]Pt>>V;C.RF9Y&h7!oUC_q/,8W+U<:'g75,VoefE^E9i;&8Yj=lT6ejE5f(dH$N+!p*tee
%je`n:)sCKpapN!dD611I5)4#LDeQi[@SOuSY/8upo=T=T[VkhMQ/At*]TZ@@*u!(8_lEl2!!0tH&^dLa?6"oWYi4l#O!OpuYS4hT
%%+Q?&/a/%&#m'f<F+Ut@'FR#;LSV-ngds1\jPX4fcGf?(`P03!q"TF.OD"44O=&a-Vm@7,9A(=L&CA(@!#ds'=@qH3KUMccS.U?a
%,eki,F7<_+,$tqnM3aN'ag?$qE4=N8kn\uL$%OF!b!Wo@UWGG"jN?_,"m1c$FE*!U<Z@>23.j(S%TsoBf[Pg0Bi&`7$_+JWN\=`R
%GQOFgLI0R)1BQPUfpUW4M_E.O#C#2b4QK62Vd+m!j,<IC?uTP$V#Yg&_J<nmT+IsM`kc*7-^:"KA6S'VL*<'gI-.:)e98=j^4Vuu
%fGSY0(p^[[8-uD9&\1jnN]]jLrM0!-J-j<=?5XhgN"A`X&e5_goQIiIE`NEUSq[)d*cnlGTN(Ur5P8o;R"<65V6:oLb`s^T?RFui
%MHC1SiVNM_gVKs?3OX]/S[p)e6P&o2@W!7SJemuoFTV,h]-T2X\`F:P%'ffXX[YU6Nrb?p+Z"m>jPm3M"SC8DYesmZ:le#_Qp1!G
%-_YAe[akc_CaR%<!#Q]EE-aHn]Wac]@T:h2TtLF\GD,o,N+3D>&3Hs,\fITn8V"-W_uh_UGe8dsXD3NYNt\2Xm:Ja65Y?1.62;IO
%I52uO!Ru#(5.;`jL-SkC#h_\G)mgT0&*VPo%I%g<:3_9%W@/;d**O#,$Z+IhZf@3VncQ^W!L74V%XW5D2$?PR6#lsk_)_k<gd@$N
%`]PE@5:mJ7#diuq*S2lLq#kPX/HKI%E[&V#!/r0C5%A8ADSD,oL,m*I[HdT'YbghU+tUi,B5b*%JSf;Z/;A6X"t^'PpH8laB51@A
%k'<MC%=7%hZ$:G;!,tU6@A>t/(kQ=;rIO5q_:g$46YLX:Bm'(.dHI!=0si66L[1BMaQW'0`:?Tg$W+Ej-PK\m05)*5`##\U2$U)h
%_fnW"rNQW:n3B5D3!A!VHiP+#dh>'ZWXa7>j#ZhaF#VJ%TRuTCQ6AlYdhj0_\,mXP@8mngKht!?hj;P^e[,CX;A>.!qul^<]O9N+
%0YlDR`6+btCA<IKrK*;Un]ofD;U>U"TAN$nJlZl8kQo[h"2Gc[UbW\ia)J]MLChnFKTnQ_$0[\n^k'+gJuT2sT>nTG=$@,^?JtnK
%=:qT#Ie4'C6_7S-]D"H`Udd/3]JqIJCkJFBgodj`l?A&35g%7dDJdW]!C'Bo:QO>p;U'[a$\4/!FoBW.rr$b!If&R3D]aH%il1LJ
%Dnc8Jf,m2>ErFH,1Pb?qSKJ7aH!82=+VmNJ@d.&`Q74,5^`8B0U3h&NMs,g=JcfJ`1R*!r#>qjm*1l`=pt?U;,b>!e2ELSX=2n'F
%=Y=nAdejK0WuPDIR.Iu0ToU$lQeCItYcb(2a(Qf`'1l-0:geN&>]3Q-mM.cEPp?WS8DXPTEXWXGi?<VD3"?4W98!cSUue:e'k60M
%-t0^5Lbt3hlkE"#?>XaZa]h^(%aRqI#4YM6JG^77H)rZ',N^&#+;4("j?Og*j-o]gr=m?+fqpR$1jR[amLTHrars=4[=me;*E;Xd
%Nj8@:'^h`H8TXTSJ6,W&Gg*kRh[[Z!IDG(j[S/r]/JTLXgK;%kl=)8*i?a7,A-0TjjHmbAD/=cjq\7riaR7dM)![T8GXs^34`LI`
%?E3FKi\3?#msMKfZ"#VGZ4FnkOV5LBA*lgEU2d)Xga4^=*W.IIq<"d>O9r]Y7P)H_2?_VT;g>dHYr+\=6*lBMEQ0Ue0O%Y!qJgYW
%(WT/B_\^MU_)Rt)Y%7=&&G8SZIbSUBbH^Rl?^>Zt7eHaV3aN'GIJ7U6RiVLES(fQH?lOVN6@jjaNNWJ_,IB.S\LIP/GNYfF:`f-Q
%LOZHjQU9W(QD%^d4q/G`p.&%.'M=,.JrtWnL99fQp:oi/nE2$^32fauBZb2$'m[?W<juG=H,Ad(aU+5mPAGJG*9K-fSN/M<G<7:1
%E//LaKE)5G*88NeNnIH=`kr9m;?NF\>>B'/2U49%^fO6\$hZg#RD't6IKX9;]Chm0*Q.Y+#2fO)E.0#,!W#.9k'8P-].3##"NgbG
%>&5U;64Pm4`;`et)T1JV>)B./$J:-H17+O]pOp"k>jH3[12EblLZ'2-p<TCo+.MspXkk#-clImd(#$DI8NG'!OpfulB$gV!7C@!)
%<gpmC_a2,:@**0XFtT=[j"iJ<@@&?b!:q>Q-%[5>m`6r@hS=C^7u;Ab@R!+`A1eg[%BMQH#kprEpg9/0Vcf#K+&!^hctgZ=*crkM
%NpG,RFr7C%F#Y,c,?^33BG,FA\U%\u6b>g82eJGI`(0S(TX19n(ObJ-dG*0VE#,P0L-Yu[*N?-14IB>I&bl5eYQ3^k&Y8)hfF!TM
%N+8m*bautieX9j;Bh9aUcT!D7\IV^)EYK'":h=,&=/4l.N)GU!`!%#$0c`Lb2'D1PZiPTdSK99$:gqZtmK\%XPuRWQ"gKteE86Q6
%#_tJ"ldoSgDbZk_^mli'N[,Wmh;W^hLl0MW8V1l<R8"6.A4G8ZioG1t5sctCioJk@it[u-$Um`c`2UR>$/`(6Xpu`oW1O.4a)hh.
%Ca#OH4jAnP5.j*=r/E9W!JYXe#Ve'Qe#q5^`KR5,R,%1QLc)W(Ji+5rNf`&Xa-HiQ_(AtgP_o8c#r]]:6Ot`JN7FIjJFjEUQEIc7
%">J8P5]qYtCZXQ,&:'H#O96N^M&grD'ke[142)L"GJjagak5\T;pr5b:A:3mrI3JZ+GrSR@(f0?8?@).lZ@.@`*EefUaX!4iX[m<
%5J/_dX8sYDH(\-YHRT7X"-o7@#f*8#F`P/(YK%@_4YX=<)#7ftD4hEG]6K-9@<t\8HD!DDgeSg5m=k>[+ZKk"E>[Yg0a.k1Cc;qo
%Pd;CD@qRk^X5`[_0N*"mNP$9Q(pjDXouW<UnhCL4#D3Ig4up:s;"OJL:^eG.%sUu"-3/%`N_V)G?II)c34SHK#JEXOW.Z+gE4.:9
%P0rP]X(j#HZj;@3)$ELD?kb.BqMo'sdBN5dlg<UJDqmNEjT43.I**n^"_M_7,m&!YblD,a6Mmh)%jH--R6?6K5u:Br2<=sISg4?h
%#\J,;,*\KN5_iaEdpk=XQR-l,)O!"aODkF=C#$-Dc![hPS>gkcE?@_FOS&fs5A:5Cg'JT9cjU;SoE>e9B4Gm?q].GPO"SLgFXIu-
%YNhPK#B(TP9#"cQ0>pGd7)sO=$75-k;]tq>`H4C(.DidjgbDaVdFjYb&&?H0O=02W_ke-O2<6.ujQ\39"aEYX$q@h8e+dio31Dfl
%MY2h?0`\Mk`r,()A$:n8o>pJ=,u<(.RqNV%bLShA<?j_@<s<!/iU)2)PY_5h#><?D:Yn3e'8DaVHJg(VL.@Q_843JT_YKK(!@]c`
%E`NAZ"cY,T8*f2%1c?%>EF3%;EXbgZ5(71:b;1lBB<(`1r>;(Q(Z'8T)0HgChW^)1a;pR?aVU//+b&c4O:l(u,X>cPB.--dQgp7#
%Lc@PX5kpVG[*"pA?c)1lS0"F>)/e;T8^?8BAOW2Yb!hAhr(mSgW@I3#WiIj##\`.VKrJD>%OHf9f'kG+#k#=pe!EVLn#eG^2sY\m
%!ZHT9N\rHVYb@BEq:OMe<?NF2!m/[U2AZm^SPF:j;e7rnYIP!<4Q=FEH-?k)hrp-ocLX:JQ[pD3*6u4Z8cO<(,1>++Dq/KGQi5O5
%HZEj;Au/4q\fj>'W-K$BDC0.@7e0D(F$il"Nec7>S!.W4X.a'hjsXp*+qa\aBZTK:'ud.N]^)lO/ZWo0GS[_>H>g'Y(AIO2EV8oJ
%Vur4f&&jg:3",fh-?_\*i!onEYm+pm=]/%RlelWM\)UrKL/<qL@[Emm=f6kVa:cl#S)e'&8.mRUS=)^gTX/oM*quk&4O9^;LSWrc
%MS#O)4)VKh5=bg`#,LJhITks3_sui36R3!b*09ah$Df)a,@K7GcVs=2f5QWFr.#G'JHZse2X_9H]q&8GJ=X,ML.WLLk(r4VKcV06
%7t()%)$Cr:8Lhu&7n3[P'!(2Ln7eQD<uhqi:cnj,'qD)i#cgAIBQKP=Fu#qrjK]'-D=rmI1JC0)b1>YEc!7".#iC:0r9O%YTSjp?
%*eAon^8Bu'%L#5aL"@SGq%@n_`mOiWe<u':iFo.U%[$^5;\<A"0(h0gqgkqZWd<3QM4sD7>LtQ!qD(W7nBiSB'3AD3Xtk;IDkQj@
%o'#**Y[]/s>7F'":X5eZeYqCmSU/FG0&Gj*?;&'T$5aE,1u-?3Cd;#:<G2XfEi+FYlVj)IO'i]1O\R[LiCe>@4WA,Q<3u@P"S^S_
%_$tQIKXQ`Z_7+q^DZU^udGJmt6G)[9e)%ZKHBMZO>\Lo4K-5;W%(_UAobITuo\.8H_UW?H,4J=i4W$NtQ@Q/u.PB_GLtNpN?t3[`
%m-J2Nj%CUZRB`4SaJ4>3(@]KYGi\>G0k[&cL4:!#dNUM=B*8i/>52;8+oIOoGhd7W('ZXDIu&p`pl?j_P8m6-'mJKuM3s5`dadNY
%;1Oo9f@^-37.=Tq%(A+CEkpo.&9F<._]C`hRPCf;m'G%[@4IuX0r@;ll`HRJfARqq:Y.)FM$EQ/-fU_@JIo>_2`:'tC$UikH3M*5
%$]YV9CeJF8XU:(i%)<_eDpt+EB"j"UnS@\$3H#-+5ePAnJeJJH]Q&-Y[YW.@3p8&58i3-:Zq&nijAY"(L9NFp!m/Ka2eW9.4-9(9
%5Xp!T\U&!qK'nI8>f"Lf*/4`&7+u7sa]e=ISkpD!0cAA?>cj;c]AWi"a0ZCPd*LCV4B5d6'Ffjl]H`H)5dEKU%bE^4Wa&suS;GNX
%:q>!EJ\R3Aipu>,B?\@1@Uog^JB4Bra>!mPJ]p7ZhT7CJ3utMRa/%7(qS(:!=I.mHa(mt+NH'82q/45K%4O2UVUFFCE$6Q?AnB*f
%J_kSB0EW(IC!*T[dN>^rPB2?5=&'9]5PPUI5o[`tN`I!0OMD='X?`XJpC#h^O+sg44(KgK:QQ><gq&l`kRNbu`o2<X-AM:>;^Sej
%0:*Q6<dW^o!#Ok@Y)t"9/3Sgb>UDeqYF++;U,7)>7sn4qR7c;O]Ls*S+n:7q\.Q#B7+?tW(k%IoU$5=fE$cA5_G3<C3'Cr3O4[KW
%P4=oP>4i%Q50q_n=Wgi.%]:D2\hlNXP38?kTHUeU\qASA8//BXQ,dmU-;B.EdsFHt\?lHi+6'Jd"3*/BbZK9m"OOXh*H'es?H@CU
%a@m?()"=/XH%@&_npC&e_j1p:AlVfsPXJaik[Ua^Cs)b33+['#-l:!>C3U)P4FfNIBoG*[".iu`<qiFs5iO;<CP'3`0RHM08:h1V
%)1_B-_b[81^h&<t2(O)j"(4Z[,[QS36ukhs,oggSOf>$6%gkU;h@_Gr,@/#J13^Y>0RP3+hd%)Fhmteo/mWH./b0Kt>E1Q:<,HsZ
%K.CP#.0$!Dp.o#]1CV9Qp>$O7nbV)=0-3?*o=HY>r#HZ7]k$NFqkoq]qX$4[?[mJ#-&U-#HM@+%Z_'J[c2W?ErfHjK?c[Hh.;:UY
%]rRJ]r@qo&K$2F?o2n"oE#li/"f;IM@pQX+$T+I.2t_/`IV!.UL/&-3b*D`=G53\1o,bfV[6&<\A(Y1JiE]TI!CA-lTp$PX(f)*@
%a#KrrETK;p,H1ffS)ML7#`a]0cKc.X@pggL2AUDTnE#8=;/F8^#W#03$e[8]hl2pdFc;"$6QctM;OB`7I)RJ`nPr0oh[7%#CIo'X
%fAZqF2kK%J1sEdW>bRhREmbrZU85@^cZ+*CXj\9-J(sISU,d,*e)"buJHlphOL#o_&7<o.EXXmg<eN!F0g$VijHJU@q7-nG7'qdF
%J36&)3!L?F[<WB)2pm:rH=J#j:WSME>jLH/`b!6&&_+h1>O1qqB&eVr)jc$d)[!QP@(ulM0ap.+:0`(("4XnrNOuNHDcYm^*GBTW
%1kr,/**:,HFUXsUK@(P5[&4G,qA$L2^.p`LYqG[rQuJ2@G3:ZA/1mbU7Y9E;G%7fqO'jlXOVpM4<XdQiN5p%00;sh"op#)!POWVT
%7h?Q-&OTVon/*fSf"9<H,HZ%p-Ui6B*Rhb<,fVf=o1i_Q2GF)cKCSM#!@KRU[KV*X`a:j?6D?bQN*-VM2;!iWm'&<ajM_+__9`JU
%@cdu,JI([QDN^g;]5^+YY/pll1&"6e+XVF'L:uEQMhua)';=TZ*noq(/-O#3?HsK+=I4j`eA_4\E6/<,Z.U**H!cttQNLNF\6(O+
%N3H&^bZu3KZQ!nhUoSB^@0ieooZ^H\-mS3#>g.0i(P`Y?;p":qer&>/)fP7e7r$BdKBn-1,tH?,0qjRgBCSk,GVBngob<(ubC*>K
%^1%@&\Upt$%LW!\K<6!:d@B0=[i&(`SZ<V!!#B?8GCf3-,ko/T]O4IC[Y]l%Lhmbe:GK:V.*4E:@^*ef)@Mkj[`%AK/B,jO:i7Pt
%bor!2;@JEf9[_iI#/^Q.2;BU;S,:`fTbr($\5P'qj7j1TkXep5fZ41\g%gI2TJ(B8'18sRVLN/)-;@R1S"-u=65e:kn?HL$go-'t
%BA@P^'*CG[o0>C0kBu'0M5t8@"YVSYjG)(tLs.!d@%VXD@Y>/i(ll-pJK(;l\iGUe4N)GlqK%7m0GoWa>63k^KZ(9UL\SkZ>^YK=
%3at(_C[&Z)%%XHP!coS2VHL<!E"Qa?Q@b"h;e>ChHTIr?g\B"k:.1'%%fh\Z6O]Cm"qK*OoaBDmAK_O]N?BBVQr!p/r;:5mp%pPA
%\2h>^(l3/Z1B'AAE'l6B[\bST0Jc&Ha\p@,AeMF!CD,TI(a)oN@:\GcYr;>1;VUlPLkA(q/-FmV,p$rAIQPk0T&jK+L72;b-@Csd
%K4Gn7cJT\^E@2'^HjMcE]'>Q#(u]s@`<P9TB.Xa'6mT8QYB7ZQ(rV.DCr9k3OnL<HL)W7/8j#8IL(SQ`Q4R$5+>W@o$s#PZ'0!^d
%BGc%+eBQnh`YubAM:2mnpZRPTbA\->6Z<GYA-^XJ.#&\HW,fL+$q'7U)V6DXA+:(Y@B:sO:+cqqNVom'/IXT^k!r5UK:W;&5rWCa
%6pU:X:+Qfuj[sgi$<OE(EMF6qdc.3p<>_Y>V\/%]";YArhD\2<OB<^_2(4/m3oF_C;&C:GSD714@Gp9?c'qOsN1[4h5%,G/<UOtG
%H&3t'fS$T$N56g!2Po5tKM0_FFs:@JZ#*(c4MmrYX5%BA&\ZBIB'1<)+r8ht^tnX(]A8H6(t"CL[LBq`RYS^%HuL?qoa-8TNF#MC
%Ld2e]Tt8D>!o&iQrId<Nfb84mjM<MjNcB(E+,ZuQWIr$$2o`rZN)*DKhVa%0hi0K1HPbID5oL10-8q#])I-u/gaIe@r/5u51Bnpn
%?JL4M94Ub@^0jA!Nj7i#OU"iE=)`=.iGIUD<#(rB<5C\rjHD$;#u5do$6EBG2GZ$4qI$r>9lM*0=FrmW,f*.1!N5r$s!hjY.n)-)
%9NTn(_XK/n`Rft0g;d9Di"-)U0TqrFh9?Gr6gdDR]GSbnRi<2d"&NZ_)YfskXkA&10/jXrW.Enn@CCDW"!<3,Q$K83`dAMf[;uHM
%!k/nkXcii/9Hm6n:(E5A=9;c[)]3m')4MP3Y3FO*beTm9"?hq^"5C?Eg:2EZBp"`XBRt$/@R^K))<aR-is8[nX;Z2_gfT-t8ZB3f
%Nkn#)DIEUFU)nE)HpS/k]!?Eu![#_@(R2^ShirD!"GW6]PUJg'$rkR#9(2jk2*,Q4gus9ni;h^KCqsFf@'W`W$,I3Rb+/o"HOVX+
%!bU"Bkm`:J^bI[t)\I&_W*A`k,MXko-AS6P\W*aC^eigJRi<oops_WPbDd"1,htI?%c@m&"YamHF/DY4bcaA,Op`$HYUBpL+92UH
%!K1IWs5NdK,.mFG(AG';rGV3gpL+")!e;,f9+i;F\e,HmmU)%]/@(=-%SC0pHWT?:kU0J`K(p-4*Z1Z)e$m/YJAt[M?Rks7'Jf6-
%+o[J])tEA43q7.+ekt&]rV]^?4nW3-Un.GMb585+-Zdc9VWu96S+d_LM']CML%dM@%k_eW?_#/]61FlJPaVr%gj";t-GVabHQc6c
%-?t"R'-qr(K_H92%<fbEZMXP-g0[JI3&fRK<.]cbBRe"UlHEt"ck,ICbgh^HQV?lM)2\&'/JTE8g0ZVgNhA-k@<`?A!S1t7nW2r)
%-0d8`#GYN_emFR<eoJ(qncakY$J&S`.QL`(8JIJgV\'.!0;DoF>:8_i4,=:/NV+*].`K>robZLX!L.!jeIZ*om`PCL&02pr:ARVX
%=ZVD0oU")1kTmj(ro+F)@L)-N*_E':+T:Cjl0Q*grh^[ZK#.:VQkm5IKCtQDNqjX]0:N<Wk-Vmf&:tb+^Q:-rj%fJE^0D`^AGq3h
%P\FKopQtkJ7LZK-^PpZV?9.I-h+%glq93*gJ[IGn?SGIo7tJL^"q)_#UVZebl=?oZG:!2n/J;rlo9ZA7G#J>!6Hl:9')o`i`"!9k
%?b3q88)fcJGSPr"DNqnOq*tt8hj#2'&;7e(9-i]R5P]ceNE#F-:QqC\^"IMB&<N@[`qDL#KCOQ[(BRGh3nJ;g:@;)r87QSu,l4?e
%Y'A>^GN:iIo1nr$pEms?R"!_BdsZPB,?Nt)]Fk)pk%6Zt00EZbX?"HWNhJ=;8U_g5io[(m$Q#HhegZ&>H[<%\_f%T+Yq6fAl($qH
%MMO-58'tFF.=Sh1OY&XCIei*i[<@F7IOtEZ7e',1r[=8pQcDo?KAi-uB*LO;IMDp!@l+$47^MYtpgk-EX:7+C?T^2gT4%G*U(K<S
%@/.^1LcY4OnB:YBn4No'033JG*2iSnG@B@dQ/e3/D"5g@b9V-']7],[!_+h\*5@R>2/q.M*87KGj-Kh5Uq:[F'"pj:OE:?*^.XY#
%>PJH-(gsPWOo,R4C%i!u?_59U:ac'55tuI]q1Y&QNSsUAfV`D3'5<QjS`LYSU*PBQQNHO?_=C5"9E&11I^,2s^Y!7L<JY)VT_V#U
%SSQl;jqgo6%70Rn!D-FGk*H-]\mL;C-+-M\7)-AG1GGB`(BS3]gk^D^_uaih7)-kQ6):j`Wpdn:DFD7>VUip;qF)PODX'O[$WM=i
%DVgT@QWS1rI1,(4SU&n6IX0/rIHC:$<.QAnm1M-['M"7n;1nZD7e8-dGZMJ0=;$pBJfYI[^Dm-"U\U_fW-RYj^\CXn8T:8.A.%NB
%2kFB4L%u(I?V#SAEh6W1kT@>)r2*bL_J+IE/Q,:IbqF&9CO$QJ8b7iVPr9C7^YGq+06TfIW'H:UhKXL+c2tF#BR\?*R=.BmMiT#.
%L`=Sl@/<W*lnlHo@KJLnc#7?'7eBIIb;>npQ3==Eb>JlkVtm1[:<JtTbqGpCon)=-&q:<=I6UR*0.$^cfgB`RPNQ$.'"MkN?`^lX
%;EN4.L;E/!SmP*`\-:23Y"jLjnGGVgD<o45b7OXeGC`;,%VM:BSmMdn^%;0]IZ/4NcS&pfa?6GF@IJ0P[hE_9:`hGjK&r>=d[W4L
%0,CM>bFRi5Mjjr4.0Rah?R'6544^!ugf](L4IhFUl5W9<`:45f0so.T`@n8)b)K(r??bfj56lsZUcZ>0+$6,\?H;"5]h[@@b/3Nk
%qj%$<Cg/Loe.HG%E;RZFQ.pN+SD/8amMr%9+L5REdZrO1GV8YQ8T`Ftlg'=-<o4HKVlr6GE>-X^3tM=5Ab;ObFru[WoC,;-_Z?Vj
%d+nDDVe8@%T.d@*n6OE:c9oME`o]@q\l"Rb%`\PSQS1<886'o2ng1JT/XskKa/Nr#?T>[&5hpU3+iL#a)IFIo_utuO4Q<14]or0-
%,G%?S`,HfGi/!*kLG+)83Sc-3]5&(ri/@C9_W"tm*DuUj9&L(\Y.i'@mmTYiK^s`/[q@u7Y3`idM<C8"CpZKZbi%mmRo30n]8a`3
%mo\gk1\W*'RRVGZ?>tpah!VhgKKLHLf4fRD/lms!Oe+88:r]'5Q\B@GJ1JoOj:=p\K0*WtSg1!AmZk&D%g,Q_-g^5<1Bq2>.G00%
%]$g7,faZ,gZh6("%cbdTHI%LS\9`A`;Q&f>EoP-2g.p-*H4Tk%]UV@#Yk$)<JT>>d"Vsg(UOLXSd1mY7:+:?rkU#m,)#UaKit1Kk
%&G-0XaGlg93Z2o+o)d^n<%b*3"lV.9nJaRYOtV*Eo>5T\i=8YTNoMWIn!5si0DKQY7XH?=l&`[.nh)<E$!(BbF3[#.gf/rMX$51X
%apY16drL6VL!i^s?5b:g[sP)c$I1)tF+b#)]N>r]YK5C:"sLBU<aKTa>ag;1(WpD'N?aW:VoRt=S@l)9&1e5b?9Zi3Zb4Rb<Y!Q;
%PF)+L?8soiV-8]$fR[F:@edsb]=!RTjFr+-Yi+T=JEbol:0sr6I!Fi8,n1%D`]5F8&!W=!XhXcg3I0kg_m4:BjJA)LJ*5mXs/q;T
%_+UsOM>FEG]_&a"jU"[gZ=`UsioFB?Q#NMZ`N.JU%nb\q>=KqighX8+Dj7maMCC-t]ni7F=L[b'96$mhf:b!M"=7tGmt-[gBodMM
%)^@#l<u@RGa@kt'bdLp?V0@U?oID0T<\'`'QNIkA//WZYZ56S3hQ'WD/,(Uu,;2&4g:.ge&n52_=Vc2d8WiVsKY/ZCaH_jRYXe'D
%6-(Q3[Pg&f07&d>duBG*#qE/PK96s1<[<i,o']K8PT(Vr:fYdHcG^=jCfV+fB1DS%79;6N3`DDfibZ8Zd]0gc&hP5>T9/S88?-(V
%'6tV'U.(Ycp1g+!2I:Y2R0r!-;b'f&'-/a^=?545Gi@k;ob)AZe(;':j(7@D??\/2BB+"ZhD'X%8F+`$db9\9(UBd":#b_u-e8J0
%n*k%2,N/gANXSkW6jtFs%1:r(V:D^W]Yj(/"9Is.T!7O5"YLcmc<og[;2PJAD6WJP.%!NYm(6d5?2[O4$\BaHPW8Ik(nbVZRsUK\
%:ufj6gS:X#Lj(rZ3Pi;]4ihjmh'En,9Y?>PUI%OQg:rMI26lQ(.!Jh*)Y#k$ggu(`R[\9*3m-d.[nA9f)OkU\eKY)D$+=-dLpm3f
%gF`n3K\(fl(D]</CNJn&(hiR]eLghUXBa[W].B#-jsJdc0l4P0llnM*Z.'oLD+H;8%(h&K!;1dcfS+:O^A2mPhe?qDRU!XT@+<ua
%FW8"cCQn'BPoIEDYm6nFAmOKF';P!^+4T.U*BLAV;JM$>^=):uZ%L#$S5m%D?/QjU762!9Ui2d7&Aj\JS@[(JP9A_u%%rM`)0LLR
%#Ir@lFV3@JcE@V@"b[4OolEn%)nbWCFjoTl5/Of=2I3-.,+NWtdp6i5"deZJb"P*t$b.tVor_9*5f1BF+&'8]=2U[A,$j-1iT@cC
%kQXjFBQTU<c@\P%a)Rm!U<A&e?8,K'_fHnF]$itC2\'+=0@Gl'%c-5_MF!rJgjsi_cp]dC(pP,WCeo-`)"+9H\hWDHMMWD`\r"q6
%H#3ak3mk8<^e(6C.d:n.#)+\<I<tgC68q?`M(=;JH*JFDI(gp3LFt@ui,lYPk`URL4r<D/AT3qmfUYB2Z/SsU*4f+r=P%&Q3Iom`
%g8/QL9sHeY@=MZ#h;rO04,NB_C@P&m$YOBt5:70Ym/+mRF\`"_Eh^(gT=\-gpi?49Zssg5`h(A\bpnJka`Eg3mKOu?]Q1/[T%(;C
%MJ2g+,3j>+\/XM>B7T6hSkBOL'bP!a_H^P1bSn]P_-V1m^nnq&Yl;O'J[:.EGIn'uHM2uGWj*8f\]P:`l!\Yr;F3F;)g<o=@$1Y:
%0&IW5UiY_eiu<1prQ+%]E:-u-1=*A=Eu@WO,."ro!?H'C#'V[&J5L1O>jBJk`4[F'6HOhR(t?*8rj+@n!/kh`&QA-iS]cd<FYi3X
%-jpX2\P-,@&pn-6V3Fo,pW)5cNAKa<RD\C&1$;Fn'Mn.Yg@'o6&EcBqVn4\HdPAeJ4*<1'(GI.f3gWLZb]i2S)QNRO_46DacL!ET
%Eu"'nlcu"nJdumP0]sq^T$uiI7;.2nou<OqQ5!pg3-QtX1]`4j=!<:Kn(bIl>/1R^gpn+5ETJ7l,8'=gS;Wc+5'W!!r0##6bdf^.
%Gq/g8S-r:#?&HIgbKq=P1+7,CgF3pc>n:787F(X1cn`[HiP`9_]l9Y"LiX_N3)?P8=I5t9#BMN77.`UtQugCH#+IK;F!7201RN54
%JA-&6c6X-%Q-3?U#>ud4;/kZ&[UZblPrUc8QX.dHc:'d5FbN1_"'>^JhTQ@KY+fT"g!%!SmO#&%[?HL>XPK7b+k>tM3B*5c3CqGc
%9*$TV)fmX-"PO$#/l1M/E9:D33B82J8HT+B*?Ea,@"p9\mPVLq\)9`IHV0hl(RM%<,A;'1dF4rIflIbKV:07QQJMBDp=rScA^B2\
%@*_P5OV[;o0fEt2\Z,;IS'*?u=@'cmbD;T:)4XMh$CA+[9k]4/@*Sml/n8?Z*m?FHK7gn<".Bk4iOa0b>lGKGk)D<dP[^#/_4/X;
%TSfn,fq(@-m)#5bHH(TL"F5&C["Qd3hHWf-%r>UrLK#`6:7R50;@!JH/d0[\DT')I&fM_5\J0;e>!])0@%dJ@SBK4f"jiZY)>+I=
%VDNkP^!?>23>YsQIoS2cOp,9mI]U=Yfb5*=bdkYIA22bQMJ$Q'hUK(QIOtJ@Vp:"+`U4m;@.@(NVTu#k!V.1P0!@f4b+R$+if=-2
%T[&6Z0Xd0*QPq;_ZHet5SX%DQ_44/'**E7obdgrfR<,o;/MCh=Nl:Z9rS*;l(Li@VB?l3]+k=i-b>UgPH=bBuQou2.\Y<E"cD<$X
%Ml^LZ:7Y#l+QL7'SI;BR8@$*FQ6JobcCIV30L'u)k;#2bcm^?]jUC(Z?b(5lnYB*nJoi3h(q8EmS9ml!bD=,/]Rm:7N'Gk7rs7=C
%e$;O$EM:WW7Xj'm\PVj2V$1Qcgr45Vh`,\hHl/>.[gPI8)0;_Hs6kWO-6/c#eQ;jnK4,XqbFMM-o#d7+CTq1#$mo-]<Nb@`mo6j=
%P!i?(__"\O72.C]74KhEGpCH8X;hoX:6Z-q)R>9RJJJs8X:flVab::NojGmq&+GsU,8Vd38/Ad6j8sp>=?TOj\N!nH$Rpg8*$_lX
%7Z^9C@@J4PNsh%4ckcNCJ/tMXE?TC5(l!QN'g_2X619):TEndJk.Zr;!\jhT.]p,_%Lsc=3AYR;/@9l&`J(=S@:qPM/kb^TAWu,*
%@B^gE'2I=\"Ba<@\3R]Zn6i/F5QLi6SIlZ9`$0gF(Y8\ZI1tV+U(XhW52:_k"BfQN#gFP&/4L&"i22@f\Ss'3_:hkuFKqsRR;cU4
%PL\S`KF<9"4_\ktBVQ#?@0+`g+!bU3YRj,,g5b+,7AE:P(3`n$.XQJO^dZg$Hd2q:acuk<`qaNRbeOe%dbb*MP?BA+amq]6^_%@C
%[nnDS6N5+F#'VRbCefD:4P3AT4$<9-`d3Qq]O\B@L9k7jjXo2Jg>beN$X?I#g31]g7$5bYK('O0Z7JJtPOB9j89/"6]>Z/U/92g\
%>a.h!#YuZ]IQar;1.&bfHC^PjQD+91mS()$6F-umgIS1OSm+\^;02.tF3@GsV/DURSIt05\&Hh+D^;eW*bNf,$N>Qb9s"W=/\Jc!
%Ec2AqjQ&jI'ATmJ#66GqI,VT[H)J-*&/i[-D@;=3,hN71/aejnlum1+n6,o?&Ce-b\ah;@fbQ#Eob1Y9@Np?#E*?IBT3rEpX"D$e
%E1o3g>6kgW#YnTc@_u7iPdV\9+!]SjD1eT1(i=7$NYc?8`?DGu2aU_r''Q@3B3VrW,FkY8\J/;]YACX<H=?rG&kR%;DL$<V,,kn_
%nO@*5F9f>?7hgFb5X1'@&Lm,-:1K3,-J%paZ,JGR=G"L-a2kEoOkAfrAF7WM>C?L._R=I[q1QR"E>?eCEru&'I674>0lVu$\C/ut
%OG7/=\RFZ3][Y&=iGjHAG9a:sbd1(mGAUnDl:G9>`GEgqQtr2dKJmgenf?8+CG@5P]$o5*<a\^m[<?RIT;8mI1\o0pc<?<(ORM$T
%CZ1clJm-`\mN-,Vd+&KgZe9)K"*C'72L@d?SZLBH)0e5$=0:Lj2cVGd%6e@'AaR`g'%L`(feg*[8@ZTtVA>ckF^_8g\7J)7-`JE3
%VgQ?Y>GU9^7;_b33uD_#r7pS.TGHIH4uPPUClbHNa'tr8*n6<9AZ)q"W-+<Q2O=A:_+fhNOVs<@DV>2g6mU6$DH]"J]kk19/I-?J
%V1,#s[.)q1m!AqDIl_+A3<@P=']VEjmYs(='Db0n$a]ti:iOkf<E2lE,(qjY]ee-SY_RfF`3`&ILGBg][*96qDmZlRTU#SP:7e[,
%1%]i2*"W#EZoqS.02k]q,#/F]BJ@ktR&/Cr+`6h0c>ZC.P6rgLnB?JS`M6rk)sp>Y?jRuMDeKU*718f2LPq^&Zk-]q#V+Qi'bm0p
%(;-2?3,_3ln=7CP#Td11!RYhOFr;Pd2/b%QF"3"s=D4VeRR&Sg4PG&?TS3Jd.;sjUN^X7%3sBI@h\^#o(^.4`WD\@NFuV;%NIDYA
%;*%`_30TSn+J7K1=74`Q#5.>%[oG-.%VMNG&^LM;>K'&^#B,ft'"#!_TtWJ:g#:J?K628r,UY!P1";+"SR,p4[^*WG1X8`CB+Mj^
%5kT_5F]6T&HWO01MCoA[Mc365OK),\2nmu09Kka$42'QMd*5<=+b!pjSSfl<g$B+aVfU*P>kUcI)^J"k1cqVe!Xb[Tl,\oIcg:9(
%C!b),U-tV]R0BX.Q@J`VRADU(bq[C21N/.R,jA]og_aYT=\=\a8FlM8*rN=fF33fE0+15r\=%qSG'Wr@-C<iGoE$s!\*S4>b[?`*
%'LXsR:+V<9@6NcmYA=aUDd$:+'6>IP<>N,(bYl*Yb/+<Ripk7]V6l3>PWc3iV3IM_dW@t3WA%,pa2X(QdE)I/.Cr^1aj,]t"A.sY
%:'GhdP6IQcGm6Wn@*^m%A-n>=lOtIF0T-o6SNO3R)JSf=OWBH!\Zs3c5lNno=Y+d$U;f;UA5+1!^)McBLPL/NP<p$c.le#j6Zrj?
%,dO=E/@++-D`3I:aFOc3El\l%_pdD,5^H.#c65u8Td@::4,5B&orU`4/SO^uq$<NV(+)^uQfK%$7#39,^DO.<K+?;.8g%MZoSl!L
%>aiJ%D":[rf16_Ggp&(0N,RLV#\^LJRo@AUXr9>/8[P:k/>AQeO:NU-(&n?R[+-`"eL$<1eKTe(PrH.g\X;s``??X4?,.lr60iQ@
%maVZ0&a;LfdTCO1XKjir5Lj?es5<b%^N%9mI[m[Ecc+NY(0t.)*>VnME$LKhYUd^@"?@`#_87bTWh[<k]G8AQfZu=pOcR#kPj&C`
%AEB75#;E`Oj"sK'e/h=qBE[tj^5(eYp1/=bG[^_-+[^Qj"&Dbq33etUMN[3tn?=f(/Y2-3Y3E7FI>UjG9TiAc!I$0a2eDD%DZL?C
%'Vm^F"!3pH:gMb4O+SB#bYp/AOi[rg:I=4,al;;PH>W)q6&jq=gj'KE3K@#/bYq'R-GXRSCEYuAd\UYf\`)l_*qFDP\-+-3G0Ztb
%QZ.K$?&#%uiH!KYL/j5RY=iGhb<]K"dSX"83,bGi\<L[&,!&."!bQYUi3@VZ@FqdrF?^GM=Nhh4)JWCkY+XU-fhh+**3lTd7-bTK
%8_`r:jX/?dALIC%9f8m6+Mj0"0tq`nQl<NiM%g0f-;u"*V%38SE54&_5d;LX,X(_X<(3nPQ=@QnVrKR2!$=.:W][rUNmgGf$Z!`5
%U660a`&?GK$M&M*(;n1J]6sm[(MZVTL<6TM=be171_EQnRIqIpJ:Wf,Hq&:h#<@Oj/'$7ArNZIu/A/cgYG&$pP4m?k=_&PuLqc2!
%Y7b`gO;B0fWoqg-@)2E2SW8a)HZWiS@;O:O!,4X+:DADnTNe;*d8\j=P:SJZ=k@u)>dp%._rMsmNSI]&+q`=P37T3!A*?;lL/H;'
%-1?^7SLk5!hka94TL5@TI`?b[V,U$0ZMa9X=GV\&,7,r+<)9j@40a5`nO1d&Hj6=Y%o7(NV,!;>^abmTpfsc#EW*Ze1V![fEf:qI
%+@ZiLL9nH9a>CtQO)p?NEj4+Una]$W0:o*\%_)c0g6#d<lLO+i_@#7\$I<Zg;U7o!,Il`1)+21j&2.Fjn5h1kpW.q*aBCl&SN*1(
%O58"55VS#&YDM8]PbP""acXE<1Z0-3-<q(:Bn)je.9e0^2VHh6UH$sf4i+l'S*1Vs1cWD"dC]A_SeX6J`,'aQE9:&C_;@$D/R^;r
%4:?f].sW^33oelE(acK@lOFImbh@dRK]7bVW:iPch,)p]&&sM:X?_n;bUT^p+&U8/%=kk)E^0[b59s1X+>Tq;U1ndW&n&i&49Fi*
%>g_IKB)J6Z#F$Kf:jjnt?PVI.Gk@)cLm*a(JbK\U^EUV;,W]!mL`+;Y'fuou%+o)]5LUY.9M*o!2pscRi@ZhhFr+^HY=*jc\!Np#
%Mu1_)Yt=2OW+n\RM(400b(FJ)G>_l)P-Ird&X"Ta[05NWPDLR+?!X'?q?&F=@j-a?^j#_8K8][&XSn5*E9tb(i+?.pnM-^?\=N`-
%73,1M0a'fO6\8tdb6'MJ$BeFC\sTK]YiB.j5f1YU\-9,%P`U.l"#-@3".j@k^gtZNAIW5rd#^29"");>3mZe[Ob'/kPap:"3prQ2
%"@3nTP=1g6cOkZ5[8(_,<A.3SI-41VLdaV_S&0J4>ofe9`Ih0Z=dQZhS_kLI:5H_8Q?r%-_&8%>$A#QiT^o:T9L<>!`?]k^K\:>f
%!hm=4$2*=&I_BD5$*Q2(P:C[2CWB+k(A_Q1Yf#_7-ulr$H-)A#,(-i9=B)15M_^ZqCM75DQXH'GU+kV:_*TU3S7c-;m.JPh86Lfe
%J,Op/+/f1_Z*Saq!aR+/MZK=8D4Y"$6W[fp;\gsK8#1rLJEL=Va",MeI1lsm37q(LTadoYi"0SI[sF01Z1Mm==tCe`:u$J&PQcgG
%?<N&iG_mp^REQ+`lVX5XA`"<)X;*B,;nZ?MPrX:Z1u0sG=[t0T@Ip@mQ@uP/_MfSFAH/n9n1LDhVo-kZ72:DQVk>$2LoZ4[44J:q
%`:mNH1nU[TgQ^%p+&b``XP^&KAQ+o>DQ;;2-iBZb.-$NaJ#5iQW\PD:mBdg%PRcu`F9Ph5Lh[<"*2pl"O*NmCaW[N'%^rBP1Elof
%D&odG/DTM+cN0$[Ri[/3E^1h;+aXUO/PFn$9Z<B+epc0(`]Y)Mgd_NSK%poqAXMgPO9QjDd+7Lch*jJtl&L![\@s&*iijjT@W8$5
%o;8D3*kE:ZeLCA/'B<Ibf'M:rB.iG_?l#qK`XSEdb#+4%65^L?9[&Cq]>W`<<AE1u6kiJYAiX<_*kR6q<QEq*[a^Vh0=\![EtC9&
%\gCl/7"qs[3MKlrWKXCf6#EpnBjt+MX]%4"89&^*n##+OacJmJU.<uuUf9EdL&kOj.sTOi(^ZmU"<?;9";9eGadsl;nNhM#T9hgM
%,-M*,+7K_mRg+Igb&'^p.<UJg"bm\T2heb%-_<$/cnW<u0!<(]WJZg^8a3BeGrdTO1A_dA@1`g16bC!FpGJ/]"[N7p6RFLZ:U)37
%Cmj.#M`lQOIU7=d:l6Drm8pG[]#4i&k]u?JDP9qRC3*]-_S^WAO>^b4-<VL1J_<iBH&l9._*I>U4rj^QW(aNi]8SqM=mRVH6<E0I
%[?EnloD\OL\pJ[-d9D8`@3-!?$V<LlH'HIjb:ToaV<Zk"W8Z9+A@nL)cW(OHCK/f?g7Luun,dXR\Qe#*j1GPLE8=OoEb)$J(T45j
%]pMNfl+mc?:)pJMT,nrq;$(e&851;';B28@Dos=m2QaUP08pjQj`Mu\P`h'cL4iD*qTtJp.MB=_;_<jm<FfN[HqtqBUph?cF&A?D
%Yi0E)L%&gHMY0e!P@NR6b0[XLAnST+Z`3<X5PV78+@dk+D%(BB@u?CCQ%>/Da<>7Mk6^'"@PjubK@e;9E\,K]h.7DsA+4k)<Q5/@
%5S@`G+%as&kr10]%tk)!kNffpr`'!1$M$r*"D:+MV0Gh1;OQ/FdMA#HJe2'/fmMqhphCC[)V]B:^*8RsLlX)N2c5ACreYb'&uRX\
%Kt1F1^gXf7(.f.iF\/t=1MMO#`G=-SNcu\=LW>:6#Hb?=fHG-]LarPZR*FZHRWK_d4iDJq)5YJO<M2\FKA%t`YV!Jcbibm\aA3+=
%<52]=<9!1IrsWW7i#&MY'ZI%.*.M?7SCU'qU2.mO).HisrNnra,!!7iR@VAMA()S"Y^-?l:>lC0o=m>q?7l^lajnQWAS/fpf4'Ae
%3^PIjoUJ8%75]\I#u4%,k"*Nu["(HXlphCtHif,gM7^/@hO\p^3mIlm3,Dt],QUC^RM,A7!!cptc>KT?4W$eF(RFrVh@k9IK-u7]
%Li7Da5;!UfKtA,(E6kG\Jbk%%,Skb8ZE4PSp*bJZ#SOE%ZWb7!!`tmXT3#:mg[ei0'f96k.iXq\g&fa?S+7"]dq4.ErU.M$;[!TI
%/(5I!/Nqo#?-f6!)*'st8`:bTCuS!o'1]qQmC/OI;4J/^1cTQZ:.G?OA"C2uS;_!'gJoFA2Ob#RL-I;;+g=Z*EF)YHC_4f/J-/@(
%Z%dMogDoX_7[5",#m@a<(Qt'/L/^D]VSA7[K'<Su^&`,.FD4;J5aD_c`Up*8f8Diik2VGKlU*,_ptBi7Df9)Y/!fag!t`aZZG4lK
%<QJ>M_$Fm"6KTpf3h^dc_DEj9a8UaFc\`^_>gJ^hDa?uk+jU7R#SPP@*tE.]A/BO4a(F<Z.Rh23#j7'paX#cDfZbX[M/[A,#\5W-
%Q6iWs3sBU=OKg>jbLo\"l<RF7WKn*KLnV,E19$feiI2:+&fIF:<L:s^%JUQ$,FNj=S[#>k6/o.%a880NcO+*VFfA#B#"CsN7>sYe
%3M@=^S!bZb<bK)p5!W%>(78WVB)bb.QWTXL.!#=88TK,#3D`iU%dOEO"tSQ[J\bDnj!p[<4(gIiK;!jqN)s=Y55!%2JT81\eM?SJ
%`6',<+%MOc_(S_M`.^X8@q9k`WZ;+4ak98I)!$:@%%i(W$b4d(i^E&#N;sqUCG1.8GF7UJFkYctMMRYOL[7A8O=\FJQ%H/si`UB[
%!UH$&RR8INWL[0NEFtQub:Fl@*5@aeCo0b&E?ZX((t0Z=3h"1kG`OJ\PJ#\?N<gHo&a/_=+!7K)I7crJQ\=LU,eU/1B=&;]VaEd2
%H!+[K#f'a?!CUNTE'7\UB.m#uHP#4rF3)s`MP$fa+!>jW!3E,s"0`99c+@0cCN3FlQ(judhPX$A@lSt;/S*;0&,-TqTae-gNb@"C
%38L]ajS8FG]7Z85DDKPOTObrr+dSu\L#:"*UALkDG@WrD@(X/ID8=PgQS,22,"!6;?L+*37W-K\ap"ugM?5Nk//4:/$$7X([M?']
%:nfcBc3'/IBQ5<)PEu?E#:*+GH-;M]U9;ZkX'ii$L!`2:Vkk1BOt,S0$O#JbH&cZ=;\e.,]3q'tb>Bm)\pi1]`X%mTp'3lW&oEN:
%+2V(/jB*JK_`=.h9@8F!WTs1.OTFQL0C;kN/qTmW6#%iGg7(,q'On6mjtJ3d@pF[h/p9[j0S5nC*1>piX>or-\6>gp@<"Ts,kk]U
%_Q:so;)r:8Tigu9ZYtTNL0=PPH_piif5uWr%l'j,(t?28joL,!.YHa5,YH@o2Q%T]^f#MWFaYO8j5_U``cW)(>1Xdcm0;;Kbp]SK
%>f0_&LrqS(W,TqD\2uXiWFE+^E2R*b/S%17_Q\CTDVSZ_/s4?[.1sAFCUpRol&3m3o3<IVI!4GsDCRIJnru,n\l2OJ+/hOc]ibp`
%!sAEch);g'CfqTKoK)&n@SK-ZKLbL))C##Ra2R8bOS%'cGt$B5ID\TNoKBi^%j]s"GfglhCjBOr(bj3f)i!@S?&f%['K>@p@gPlC
%i`+<KL-FG;f)f.f]*<VnH<uW45@,%!/pp-6)af>_JjKhWIQo++63%'Vr;JfueG);-TMuU\o8HQI$FW;<@N7Zb&0[EYM(U&:cQS//
%#QRiXaooYW]C2>-T`A>skD>.l1&JR)l;;KR*9.9C4[!%\p2q1dr+iW-L>KR(ig/&=SgUZfc56OZ.T&_h!$b=or-)B1e@F6*\Ag6>
%Iq56/jCE:^IpH\g]:>5Dk?T=_F%b_^hi%r@\-dXV0':/D,InWa9DN,Q]Yp``B$HJkLI?rL#I?BEB(!$in5!CR9[h0=_e\*,4JB!p
%UI8/NknmAk[Y'$\-^T:[V><jo_UI=m`5mQ:JuMQ`I+o&8ach9pMi&4&CPNOP?7)EZ<ksM&TL>85$dqB*PP&7]!\)46%QG'oW3hIG
%1\l!2ZEbmcc;W@3bUAEtP"2Y<EKpW[CXl-VKefHG8Kf:t!Y#Rt2L4WP[@W.D#=plnYM"U(L/0>cQA9-P(u8TdFSGjo(RfVFQGYjN
%+>5qrM*;o3NkOa\En&9,#>)Haob%H7S5#S&^]gm;Gke!14@lW[eLo)^r\Z^a=LFV.1/B8m]4NtD^Z8+Y5!0S^Z(L6W+!jJ'k(<tt
%>t&S>T2upI`/NTiB?gY`''?k$FY`p&h6KP)"%6>&C-baL'nM#3HED;b^0[t,7FLeSBMcX,H:YWM-m@!=1;_RAPpbh7lnMP(XV0@I
%Ph94"CPm0RT-pe7\4K&U5t(2Rqa*KLFtR92!hh#m8I5\Nn2EPJMMP#DrOZW\\m:S?==&h1AIjD<'7h)6ce/[DMGqlT@)i[W@oJ7o
%9ih?THZt2?Mg.6KPndns]:9b\!bVm,(X1fs`&qjXU?R2$D_u0ZjNgIFJ3%D.4`i\N[je2[9("Qi^mQF[pb*oBBm<Cd5djXq4,7t_
%$2KulW/ffMJ4X;@`^RdNG\VnmV22dE??ttDKWD@'#!>7M1CW_D,\F0==bIs?Y>*V(iJu#1B&K/D-j`]>EYgk4i_3t9l&nGY9+pA_
%Nr,qF6_,J[9$u:c@(Fn&&J19LlUl+_D>U2#'_XM\l<f2Fi;eT%pB,:!EGK<=9HIel3([;k9"%$`6*[0'h#VJ:I&?=fU>de#`rAE3
%/R9O6!1Z1X+3ed9J=W0W@N%%1eB(RFRqc>N[>DNUBlSde5+J;r(><Z/k2JBrN)M?,?UV]AD%CH*Nk0E.^fG`jLl,XB8_er[%:grH
%#<2Eb+R-qcO")P%'=j<kAJ"tfs1_ReK0g'bAmFN2L/o<pQo/=n4i8!hB<O+_QjKDI3Lj>:[<5?`i!'`N1tJsFapE,f`n=<21W>ni
%KG_&$$@/AD/2"%hbf?>[d9Zj28X`HY@Z%`IM`uc232R;*h7A^mn2$5^l#9ieM"6@GB,'B>c?G5m31\;Z%k@RDh&(]cc*`6.",EC@
%[%IPNMGD.9F=?sAV3EsU<.`Cs&tZrDNo]EqidFbPn8LX2EkaK,e[,''\`?+5[c'd`YjOb(/)>?l>D<9]/&"Dp#,K^DGf[OM<7N@_
%e!]63#cP+6'[ZGd7bUS!A4Zj7&g`9E='f)#]#mWmn6.oO>;MBnD+NH=2C$[col&*Z.e<klETESPB1jk#lB@sD$p&ER$SL2_h'_!#
%g<"#,h,7Z-e*]KH`B="70i%eOda\JR;kU/;ON(Et%Y"_F\1)AFK`#dj.V92G?/'8FeZ*B=5oisc,&0)Y0-0JVjDL-i4pNh:dTZT4
%E=39)>!q\6kV4>qOE-/_KY^946)J/a&R,t]!*Pt)#sQK,W>>_'O-*;pPSOER-r.D:C^L"EeR7$VD6#,t1I6D5I:EI@l0fR_Xp'[)
%\/#Y\n!4$-&9O<D88'L7RQYme'PePR-bp_1MA#!.+Gp:R;RI^(5E(S!"/Y!.48u8/b@/7MUBT.1c^794`6JB27c(2.Y/XBN:0!D:
%&V^h<Ef$GeGTa/daD8kD#^0jkUpr9Jl;Y1[g/Q%UH2/,PleLTY.=b&MF"gC5(sqald1l7E*lA31?%L107O*H&oZds.mE<+.DZhfc
%Rop0Z0c^0&V52.t8GINDPfg0eY@rOUH#A<&_<\q^SFD[No'OSAiRPEO6<cgeIOoS0Q]PY_r%qgn+:691hZse[>42gEO?7ZkedM<T
%RaaaoU0%R*bMVS4KERJk0>tfe#9SQ)@tt*c*i5l/rRjnFV@-BFkd<K73l2OJo\f_CQF)SEJus,*=P=1j7"co7gIO:&<4Xu-BRReZ
%8:@AOgR.!)lWjRQPSr85fKc&V%KW#u=6eXNMF/?g-QkU"NYB%$NNH>pk?&c]W[&CYk!U"YG:cM(j=)$O$E:>k+Qhek7jY\PE=3PZ
%-;TA'rUf0@(MmQhV\9]bmi;;4bEjaAcb9N8o>!e*LHnQ3SfrH@U+%cjAg-1#\?7WS"3Mr6]thk`*^q#\GF->\p"%Tuq$6&MVY7m<
%hI%%K2sBQ=:F.j"d.E(ZCeB$H$ku\K?PhK64d=Li2O+c-KO0#8ZC<5F:u>l^=?D^tS9RM/chrhI[gN70,WDH]Pp+nD\73oeY5CCX
%WW,Y9PA(kB7T=tD>>spL3FMt2.9rltFD+<V+/)4"?ucaWHIcrm,n5$RM:1RnNO2rRV),.D`$\7i&#pts>>`i0MYF3Hj@N,imQ8=K
%/J82AYabQuMImk!cYa&Q,m34dQ=<fZ8<-/8EjQP`[EEo=-sLH-S$dU-(-;'+C0%96`+"fbmpf61Yj(N=Ce?$0MGs*pYL58D]rmh?
%:DDj7mOqb6`=^7d?8U:EB1)m,_Jtj\g9M;R`9ejBM98l[WOkND.Dhn7RLnP/BdjNb\?_SoW)Tf1'&!kOf@M;:>1q_0`Gu<q1mbm$
%XucFNoaiZ%^#\`q9`B%$m)6lH6_noc;7T/(5![8Lio+"]6/@OEN87GJH;O0i!OL!Z_27gnd#GiiECkaHn-hjP5g)O=Ksc0E<D(o]
%$mHG^-(0Fnbt2L$@e7OnJ7,l;O\SMTMeY<j&'c>*Np)/]p/I'b@3DT/[Nplg?O]TJ7khOVVBY"oD?NN=VT0:71/i3&ReMngltSre
%Z8`G),jr"9M(##-NJPK.r$*QqAG-r$#aN1aMMk>96)#!9n`H&UM+&Q\X!1Jq<r@is%(8/jal,Jge8?Il)tbKI`XF[W9*2@V>"H_%
%Jo['Z-J2:SIU0D+%M_Xu6o4reW@^'B:o4fX'dCHQ1`9T8/q)X.,0:>VA=A+C.cq/6O$RBmlA7=D3l^lK+9OtiXibkm_Hm`h.ERZN
%cR(e*G>l`U!/:Ps50mFG0]'U'CWWSs[Woum,2?;W^k%$Mn"._JaBT]0fsY]S@7qjB'irfBH"&VG1(t$8j*rCh!DXs>E1[CoD'^!!
%-*LT"aNNF@o+nO,cq7p#8g5=B;VCfkAL+Id*=o?J49BmuaM*+J[>Zt+Y7b80Y#tHc)na>'CN3WX.fjGaA>P2*C.R1s*q/GG:(H"M
%\/n?2bZpX79<i.=,tZp7=TOY-6APm]_jHSYUGG_=B*S"%lkhJ&W5f_]A//.$2$rtJ*^&l'S8"@Lbu#&L$c+HiOohj+dkBs<X7F(u
%+7Dr+m=;Wf^1_Pb/2IDW=RNY)9C"tYA>:Uu^Y_seJ)\Oh.u$g)P'I3iXA2V\TCOm`Lk2@FK6RKLCd>%uiG#'_qCJ6'N6sr!`E0k:
%A[mJu$D=a>8tdX^&qa/WGSDkp[B\^[k9+X\],he)DP7@"b4p^1$[J7:"a#@9-YVbo.&+_J*U-1/,1"q"kc"rJgMVZXcg/L-jdBCF
%QmTXce110$[)L,f5K#CDlArt\--DQLl>fHraMi^q6H=+"nq]F,[TnZWD-2Gt4UEG`AsWNc3/Mc@36WNW.LiO<@f,^ROclru)CC3I
%lhX<K92`utJ;*DP2D+1,Iu@#&%Q(ndBl:9kiI,<$01+KP")KDH?&-J3Ll(%5]S1]]Y87MFf[T<=4iQ5Uc2e/BJl-2`rkKlU_j_`A
%,8'+fe3I*p-jpVEA`ANT!X+0-M?3mB_+e=_\Kp.([#NXAh-371'2G"_]T*9<Gm7,iPp?+]+iBo,c!E21=h_i91ERhL"iLBP/]`%/
%6U;EB72aFK;*?>q+c/_>[`b'tAP=R6OYIu!]deMG-n3%Y0M-^_]dMeoSeiSI"V>`<.Ql,k<ucLaMVgKsYBhfZh]OG+L@rbi(U5Bq
%VI[B=*pua,";%o[_b9URiT>N%Wr1,N*#fKJRkd6j=:bq>M.M*"lZ@4WB(p;2DE(l9"TBcCjnR6^P9XqPG"749q>\YD6dCGmnXViZ
%P!_eM?D3_I39]]3n("qD?RS7-,%1SA1>QHVii]70GjLu8`L@'.#@b90&P.HC"ocj].6\aA!3)ef/u(7+`%pSp`>tHX?Z\Q`CUl1P
%Hq'(2r^2]%5jdbN7k0j7YWgE9*ki)3mSdn"LreaYAn!uQOlSuIScXet>`>]glh[)iCs"3!_bZ'iJ5O4=+>6@^^]<SrEbR"TGh=g'
%+]'Qe9>$'fVDG(N[[K)gV75[R&Tfqa6bg^SA'DX^#0=?5RH:$mlEd6FNshMkF;,o3VRStb/i!W+mj+'"3Mdm:3`!lKXMZGg$PO%!
%34!*;B)%l!\"5Ihk]%!U@U<guLes.<9o&PQSk\WUgm?G?SeBg&WQCM'a66K6F^[ar(;`^P<VJ-[nN\aRbnp7`?<W(rZXQ#5@sIL$
%6"3,M=ND`1I<%AI=j;NaAl\S%qU6cV)pT<ga^l_DGCP7E3BQ<?1[MHl5:%jVob;uoHIM/%5Ia5q9SD+H%*O57+aMqWFp"Nqf,J?7
%X8P$R7#sqjeLaOf6MrQ8Ye,Ds?/@m55Z/*I5o"p9o)^'=T6\VES98.#+U@"kWhXE%UJa7$b8-UK82fbFL;U1E98%'mD3QA^%rr%C
%>oDYj8/+0&QL;111:*AF>.Z#<R&bqTWZFr'bI)VP2\d1J8mptZH0HBtUd11mL3t`4E]@J9OF]DI34XpRi4Z/,k^o<VfFQi:;2h;r
%^(sN2*[dqYWQc=<a#3"1Qms[=Ll%3DJH<UI&tHpt:@-n8i*nXII\%2K9@U=7m4-qTa\$*mlK<'KA>`lT3O77(WTm<rNSn(%)H`Q+
%78;al;BG%@kYq&")1F]R<ht8e<-PM4VQ)lpM5u5(2+]o-];YKFOM$pL%OVbfhA\hK?LG_;+V.Y5NYqFW)nSjF4Q=2g>6M2OXru4,
%$0YZO#`+@V*tt]R0Ob#:M':f5ea,gJ?qa>0`%CF;?aN<PY9\."?>Oq@["(M6RHCK\A1,bi'-MT13EK_Z2,1"g&Y*E.?&\R?efI95
%`#Q7_e9-r8&h&C;Nd[DU<Z5=l>JiX!5>d8^*HuBsc_f/m&oAnn?#u$+[u^7,e=NjH!:,:(>t;]]MS)"I4f.)1WX.WZ-1hi4dr!rq
%Wb$BD_M's@Rcs^;#u?FX0&]'"M*nX)4cFsjEt;k$<=up%U:1,mO\Gl0*n4a32]8U3T#r#maO:Ne'4ju4?RVp'SVE:pWVZRHW,6ng
%df9oTWKV(&%&lUW].*8?0NX&eFaq6sHrUB%3SFJ/j.cb1+Q@st_fl7/\r+2>\!,j*=,U_lg`+c:=UM8Zeu!j/P*9ngZn>=H+:aDK
%'i;cdQ8@fO/@8_738?l/%sZ*M@]H$]N#L`/37m5MF=<Kd_+T_*G@u>o^-ZG7`i,sEoa<StK\sAV6`*A,oDLL"''fpNMDtKAKT3-%
%B#tOkb3+3Jp4`)tk2G2CraIkk1aT%pJh!V=1%+&*8)RG99L"XP/l0"T#.a4Z&00]<0j[r?bNY6cBgu[UGp@;Q5Bjf2`rb8E@p4nM
%fTK6Q/UJc/*R9HDZLd4P?IbsiE+0eC,d(cTKdY.Z)+A4rl*Pb"4t]+:/`mF^lN:Ocn1e<>W<:FRj&u0rGb;h'"#7)6.,d(r5f5IE
%6,l;1oY=J!0!7CRUYbr;;0FLodDENp5O?'tF'D/#2E7<LiW"FaM41XrMUKa4Zi%q>m<[SA]o;(<G!ncS![8coD3Ei#`Cp1+ag5Sc
%O;+m'Q3#@rlE1m4'8]siT(P+cFqjqUPXbg2.+aQDM4t2VW%B6K#!?8V^n>1A3'RR`c\Q;3(tF.OMJ=E,B]NWYBs3R[>*n3.jFVBj
%FRj-1*CGreX:5`pbslYN$je=m0Z=bqD_=inL#Z(D'7@-=KG2J+A3s%CaUl=_&T"Ve=5@>^#n8$ZDaD17Pgo7`1$oJbYmd39,:6fA
%:@bS,(8_It(&1dfqgkBKe/*tBKs;3]RhRsb:5r4$NJrH[YQ-Ro9k%]Mp)[]+kd>(GKG(k\%dXK3#g?2&ZU/?27=m<!S/K5b!i@e%
%f%paLOdPqcd%Y2%9bGTZRNOkj"(*=>lR<MZJKQ/hcJ^H.jt0c9`22?Z;#nZSmYqq)c@U@HRUI^pAR/V@`#J+L`[WJ)#fL7kPSJnK
%."u;Kcp37Uldu\b/M&R;>G=dpkl9l"&IPk/`5o@?&7-H#-@kIJ(kWGY9h_(a%:$-!oa8#QnXEdo"7mj">)(E)dO;RI2bX3LLO^\F
%IiJgtEI\6>ah->`BI33td(UdJdm7KRD4*MC*/7`7NXuYRh-sCcqP4Qr#fH1bPPhkN>J(RMn=WDo_6'GC<*#0P!iM3U1"_^C*/nkV
%4@@&;Ak)j1T$"8KbYdnH7ujHpeHX;qQ_,Cb?-B0@fYeuZJKot+IBps`@(:(g@OiTk!=2p)g1(+(7;fO:'>r2'#^+:PBQS>(jmEcl
%ZDC78(3,#-AsDXsPkb>3%.iF\_*kdF:p.&p)AGVYTN\%+#JqT;(5ZsPi6Ya<O\jnil<trb2n]=QPJeG?%-q+2_%(s=+`@m)rbd8K
%Oub>;1C*4bA5+PD3>g&DJsTuh75CNp^s$(-O0iAa"*d''c;<XG+<u3p#g"'L;mR]7%Y2d"cC!UYK=XQ*c/*=K\QAtqascBXY`nWO
%6-OmFU.Gl)No)XWMh;3ukWUG'H)?aL76W5,^Hc<;IQ<dbd-rOSj\Su;4*jC8HF]7Z;Xe_Q:(RR^pDh(3`\)1/:>A<U*<XG%\K&C,
%&Q*0D>Rl9\&G!$?jk`QT/%4>#JN./<70>1:*&aq/j^:O`3)7IF&+V"?\E+:>Ms(CT9ZItS:X223o4#RhV_BKP.L>#;(!ptl*ClI1
%@$Y;EL!=Cpj]IBnjG$bHAbE,<]Q3oaa(XR*/#@f^6QZR[,?X's;]#NmJgq:ieu2.$@+KAG1o,.g*YUn&1l,K197,-,as1Eo.nk64
%*7rboPX?$-a&-[Jp]<9+Q9,h;Ed5S/>-]K1iF<rIQi]oSQ3ISTLk(XB3<gmu9L$KD8"aKa3C-Ie+;Fgg#+c9\FQABmE,pp.[?SIW
%_5bTbIR4Q>T%NV.aQ->C6Ecj[PG>Pt#Y)JcP(T?g):9=3pH]lEn.@u5LX1qJgqY4nT]l_-3HU:::_:_V(SDfOP39mr@_j8o+:Z\[
%'oj9rJL0,AB]LI<+`%<,a(.9P\IrRH`p+\"2*"!M+1ORsJrsQ*&4.(D0QNhJ94\5qDG]m^&ePLtb.q#,"H+6+'F^I$:jJ22Bu(tu
%4WGWm"cF@"-?Og!TZ@M-\lU.t.&]K""Gn,AR@mi(KLARG`9h*JE1g#/6Xj04JJ14;:ujl2"<ToRa%A!>pKo.llj/E[0\X8#O@sRA
%JK]e:PealDJrmlK!l$#mjJ%kf!dVm#A_.$G!u7B2Jj0_lP/Kr]W.Dj*K"t9"AiJ3C-T_llO$hlAKQ38Rl]ToT0nLGOKc(n'JioV,
%U!b@Y32A6<m,&(m4E;StKcL[m,Vt/qf+dfgl?M6[;FVZ3r"?A?$0XA,QV^tJ*cjH"iD1T:"2j^[j>[\RYHkuqJgZ@PMA^A<Wkf&!
%3/2*U2Jis`N\1p].Bm3[NU4@oXDorej7sU%NIrSco+hID*(&6Kb&CchEj^pX`k<Y.$.-1p1R-mX6V;%M5goon%R(JC,auHQ3<9)P
%iY;kW%YQ)MpM+6UhD"&F+i_nI*U0/(ln[](TbX@*(^JS&pIaqo_4O;%;%,)f_Ar]BO3kj_CoL;HikgbI@Z0-,*Lk<>,L\q:_#3a8
%Z8gnGATH;[?NFGer2P]+%\`sock3@h+NZ%33;QH'VpJk+>B)ui0Z?=j69nn/'SkR5Pu3(KZ'OD]ec<\*s+89]W0j8YaHMI"i_j]>
%N$]#U+"Vmd@,dcR-%us:LEK'lN0(s[RfO3]*(JH\Mh@8\)'$;_L^-CG;\3pkJ=`hZi]nWRJf[5ui[FrhFCQ^'9G`][![->*4asmd
%K.;7n&<!HZLPJ,<87V/Y+B?Md3um2#,6NIk0f!]*`"@#Lk-Q79-j,6W:.\2*`XPH1j[,H`@)HDP_)BYZ!9-8*"MkKWT"S_\aDdfp
%qh[W#5VNUhJOW\u:%X)tZuC\<Z&Bid;t1:l03I05j@%'%4]FC#N,e'5'^c,<=Fe9%&bPl?-eqA-Nkg=#2idBU)("([><DrnLX6%>
%$Pn\?cgg9-&afcaIY8:#,lC(B_P';5iTCFH_QdW'7mo1]E!t>WL;$1!2cQhT_85)Gr4'2r3B6JP&Hisk9M,m1b8;'9:3PTdCW-G^
%5QNCS)\=)V'2/Sr4&Qg^0dq9WkF3"fe5S$5n/-4*i(;m2'cePZl?K!GJk*pk,WtRIrJ"fAE6cgIB]'!i`"WW-?oR]p$[a)P`!-B/
%T^^]d^d/AbCG=]99N!>VUO[\Bh+MbdPkaLbRlnOfcY2sJJ9ukJ+#mJ*&\nc9FN+==L#%lCs,@@^"94+:(k48dm4Ci:/+tn[A,$m]
%0bfKN?:4^(K:i9q8'7lN\DKmq_1!n7:qmAW3s<_GXcXqf!Y$riV,s.k5cok"NR.]T.oGfMXX:digp\9H&__HFYQ-m$Y]!@H0Hs8r
%^'D#l18oC)TS5QX>`>o$$.$HBL@m];33CA>=Pj4T@UaQhK7+hlhiG%?)=8B9cKGi]Tm_Q\&fDO:K%:cQ6a=A-!/Q]/^-QC%-]&so
%(R/ng:^ZV%RMO[p%He[NNWoOW2@(MCKrbI?)fk3M'P@R?%2'AS4Tb4<+?7,h><&]^SL>1[K_"LAFd)t'Ls<_])32-FkXo52r>=PK
%11Gk[Hok!c)%,jBb`(PRH@0W:CVf3jJbO>R*TVh?%<1SHmb*5>>:Drgf\VoE74Y`(&5]kX+a[F::("3aKF^J-G/+CD^c&J1X>e4`
%'EQ@L1mg4oBtfr>M3,>(cc2X78ek$<LtKKWCVfY_F^h>PAOR_2$rr]A0:(Wd/-Y[#(8t]$!54q*(^85)iZp4->i<8'!ZXVWdQA,C
%5FVl>m0YW[_=H0]]H537iolJT$'I5XLEK!t5]d)^'2Eb)jGj"ml_m\M('H-g#pU_a7V*k6:tSZ!5i/sQnKt7<@q%:3*lsi9/`h`I
%N?Nb<[O=Dt(uL-p'I+`=\@["-'Z_43&p0uNH,I?pc*e\7)l]34+E6+Xg(DPs.hQ/QDR=1EhJh6U;anG<WNHWhGiRu2@*q>sKqBd'
%<cPbqQI?2,+W6=qJBC`LCr>d4L^_L4&KG_J$Ur*ui-6J3;IX2-/cZ^/"R4,ihRHGLGb_o*bGb/F(iPA76!RoSn]$rb>]PJe`[6GF
%cT?M<a<89?<Is\[W*@3SAJf?A)'Y0`&WAXQm1VB6_g!+g>/iB+L@L!#8g)%s(iKi6[],sF!s-4^'ZHQGVL2N6nMZ-FB.8]s`(Q4+
%;c(+]nej%8,8b>A'@s(sG[mfp_G;tH2\PW(O)Vc%S![5$38R1,",5`Z!sO\_@iTES(h.=iN&S\IA%J<7H"-sl\l*kpD_/XSf8?X5
%?kst/,m/FFPlh&"HQ[5\bFuIKE4ei:TO!9AL>%Mao<UgS/jV8))8mIuV9gp/Tq>fF&A3poOUH[uRe+nM//[4t'+@n\@sC?R'OD,t
%n1KHh9a/?Pd>o1@>QMLRmRf>j)8I2CE[]&!n[gMJa&+kA#2]k)hD'dgd(=io!3$C`%H$c9n(k4[_'g/A[t4r#=rf?m6BJga3]s+C
%p;l&LD9LcMEf(<2!DK3!+U^763u]Dg(J":?%.sla4i50LfPW5U+/q[rm09S#W,8nW5W<5"-Hp?Y,1#12$JB8ME5GG?)V5T7'O&?>
%VH5++US_IC'A/o:_R*G"%Uge''oDE^!*fSNrWohLaHRLdOPNHXC-;XON<B:ZDNN[F`f)I"m)EDJl3%1A%2::L3eH]&dl'fj$JCF'
%)[LI,OPMT:L,eTE].mq$"1&0;)mV.'(el]rEKM[0Zj5tfEoKV>13Ao%!P/?dN<pRQFGrJs0o\Zm^.D!hS3\Hoh+46>RQY=C#1ZUB
%'n^[>Kd_WS'@^oE^*o(RK\B./[d^>Lg5QODUPj.9H?LToJ\+eSTdlB;go^+VK%g_;cfj*m[Mu.Z\B;&38ALH/JaGo6Pn`P(]@"Pe
%ki>LS<[I?4E4aM:L&>hAgPoq_L9Lr$2c)WIU):?Y.0RH5,Bje=K8^YX)`sgJ?:+&a!YsW1+a7F=)iUp2jDIj8(sADBVc(FCDoga6
%r\8HD;9E9e/.2`(2sNDTZe^_T1&RR;%K^iaKK<BN#4=qfh1Zo[)p.H:$Y1#H'V_Y<h>!HBqU"8G;p`:UA6LlRJjYZ9##P/J7.ZIZ
%]2=#&+FaU`L1R,f8-/-*ZO!JIFs0Ug*2.c?,&#>pT0EAE-<!KHZkEW22Hl/rEP'?>i`sCg7cR/SY`ndUFfH_3$#V[/Mr\XiKbke;
%9]6umGCor_fst#[#W*o$Ldg*:KY'&,Ci6c=BN_4d*/rV]#7`>[MVE!"e55RQ].n.2,D--.)[eu1>SH.@UZdb-%7[k`84HHRE4^r^
%KSJ60>ANFZ$=M)1j>89(2n1%\]24$i%Dmg,ECGuo!I#.GoL?XP8.M#T'_U.POEprq"q$(?O+=in*&@\3&2)JJ,q'J;RjdKBl[c\,
%8#bd@!-a'VP`-]CgC5c(JOjU]h<5Kj'J4n'#*9)NUOpPrr(m60%CmDdNoV<p.NiG&!ZC$A7k\RK4`!&R#I]$=gB.Q[/Rm)pkZ]H^
%dg75qHPEbI$>Yf:Og2(/JDH><V(5k25h6B\>t<WdP[P(cIQ,ANJLdK&2(-N[=0QQgN53"DQ,1$f^\iu*%IdJa_U`4>Vngt-g5Ni0
%'rY>#O'oPa80H_;E[7c;F9</2%C7cW2Zf:$c6iB`_8M?0U`aa]Ja*sC!8[--Ei_#]2tW+j+G.q1#<qu/GjZj-dfc3\:iN@6,_L.?
%jpM3Ap=S/V`pCfrL\;T2TG<TO\W^J"arZohLj1KTQQ$4%ZP:b`!!["#mV\uYBkW'IkT^7a)>"dR-oV\kb]&6W*EcuO88bZ:+r\!W
%E[SE:*?mF-efihY!-1RYTIb?C!7H`B%jO&OUb[lhL'k`jYTC$!EE<40eOEZr;)AB0iWd"J'lIMt%)jD4!HDU_.b=B)*,]`4P8/UV
%\7'NbT&U*1)_6T.dQk=;Ud>Fn2[fsJN^aT83%SI+K"qggNSHc!\:K0^I?2,p!.bKlNEMN12>$:MT*E$3-(G-c4,FVDJ@:_)N0(LL
%WflqC)0e5_Ym?'4c;H*4"M:3LLYQ[O6COX#DF6Bm87T_XKGTmV.-)g`d_m#C4%lNq#]Mj5`jYqc6Ws_@#R,,cE5hA#(r:'UJIRWk
%[LIOA]$hO5><e1Q[MtL*[K.I?b"uRL>@up?#\UaTrfk37K2/Ej$`/Mar'&^cCbXU/-65X9H5J.H3gad6YQR/%eTcgf/4B@JQu/KA
%bE1OZf)aTij@1iXnBTJJ+Y_Zi1N7u>CkH2M7q2\->pkI?/IJeC"2dPCODTY9a9%4SEb@Yq`468s2I[e>`[ds]P"*U%O$L-n="uXe
%6+6<.TYF;g[ZNmY_*,jt((-=0ODu:O7&kK'+PX@OVaH`LhC$B&RNE,9C]q&'A.6BfODQaG]$qk1dG.985C/E.["i(#PCRJe2Y1i@
%a>T]"idhtUCr7/fk+uI%2[*><[cse.Xs_Vu^m:aQ'k8133.mmdd3um#fK@=/2N"aK'S;0QLi(A>7D:O/fS5elKUkAE__EE=/:lFX
%M3('`7M+<KrmdqS33T:V$cFs>H=ZT/22LX[bRiN2i#*P`!jN1KN,T^ZCa30hlK3]&D%Q]:;$R@G!@!5[m>MUbi<3(%PTXdPGTimh
%1Vu%d1M(Hb&@N``&&H]t@N1K]#j.`Md0g\/)WPU#I%1lU5a;@<E6J54^-e4YS.W=jg5h>b$bSCOO"a*li3e[[f$Um^)X*Y-QAU*!
%7_-<Mj)7gYiZ;Eq9VMUuL%=\eJS^='Y?eHlTQ^CjOA1C_.`'`^M)8n"f>d/$9/,'/>oO.LOKT@*+p\6=Dj<S'-dIAb!G_cL\Ye;"
%-ctop=R@BCW(5ABeVHi6Zah@gfW\au"(EE;ZQi$.`&5OK;*-'q+_O&W!+\G9:ktqX'nJ-<L814U6U(c5UVO#5ar)'RH8KJh6pnTo
%6.:ihX;;;BN?DusWGYPd;/?"^OuDs]_.Z@/d>h&1&IX;t[5"$M_\F'*!n0SH)L`fRM2%]55nn!;'F8RF(S];G&@B-hm#;"P&S%t?
%(aAf;!IY!ZZG:,M6nqPKphU6/U:al'c\B5a9`>gsCbMIn,OB4P:I8"rJ^2:#DELZ.quG@%YJFg<IPRU%0PYbRcldn`#.4fECe'<7
%5c"lC:;DWE.l>KWkVYb;&bJ^,QQ8'c7+&:BQXB0pL2`VlW,+&q,Y6UeE1l@:5hQ_FJkjT':,YdtW_bEDG*'l3Js$QLAlS)r#K[I-
%:*Cb5TE?#]@G,c`?prLA&!7;S%GF5R+WFac`/rXhRi46oD[_^:,!Qi^(49p8*hI>%a+f\WN"@BX3d))m:Va5.ORe<gNEm_5!r(@"
%&1!64]E4'%GaN0c&7fU1b]H1m/c+..S<;`=(Nr%l/2e(#k8Gm03`lq_6X[1<#GS0L&=A3L`t9_C:/VOR6*Z@+S-gTd&^,M3M%)'Y
%aqp-("V@U:M:4rEa`3TF#)S=M[!;p&[R"_=NYZ.sdk`&h#SS/u"]5m8'-$JN&8+BbZ&R>C).?uu4YeED:^@k15d?=-"Mc`?2?Jlr
%h?bSgqS,/q4&L]WKRiQ@%29c#72.]a'H<UgptQ0,p2*C-faWFD=DSO/#-J?h:pEYZL^M,>#+u!u^FYK!+CQ,,aDTC&i"/5iPlP7q
%_/eBEiaKb!cq?9K_oC27[alW@G%!pW_71i(V%7?DfEd;l0\o\H!X'kP3susMkJ?KCYYhIj\Y3H,8dE09!eu]s<(XE5Lt66=-$XA5
%_oBMQhls=^3;6Z\F8SaQ<=0L";@#9>8QLc2KUX"k)cKk;dP-;^j3/0;/nH_QV2W3oiL>K6,@K/C9sHg5Jmj<0jXF?1#K$a$<IP];
%CnO%lgJ#Gf;.O<qlRiJ\"?JrQ'J+'N\=h9m"GMgeE8sDifJkd"J..-K[)@ng@:T-AZK*&6)l]EeBb8&t:llVN'K36a9YhT4@A>e3
%\C[O1(eS^J,]',M<5StK)tdmGL*]sS#'0hdKdtP"J>$Mc#)/%o[Ipdj@=p=/M(\pa9l=Po9\)R>UEKj3:':nC2(L0R_-kn$7d'TX
%m>UrSb<SWS%#0aLFL_qi)XXaD`3g0o2TED&m>\rdOl.)Q3`9t15`"2Y'K3HsGnV#%)^8=]9UA"Q6Q949&JR-4>GCp]TWlhiMPCo>
%CQRddO,_E@TZgP-g(']5_Id4%CsY3,'TJ3Yd@*cH^l3pU1+=XR!eh(a#dUXnTWe_]Wn7N0NNnC`+W1V+.@>rMK#4C0d,Z)Z2M$].
%g2W@o3e:)q#RVMfnq)g,0X]!+Q6];ZW.bl8HOkg)Nlo0q-u>CS+]pE42V>tc6DTCR"u?3,6"-PeN!@=!fLS:Idg-:"a98ol:tXE\
%<eR0NZ#dg=c4(+"'dJ=A&Zeic1<a!e'YRdE(nkA^A;8!VT-/cGTNn5uMLl4^3,HquaZud6Xls<tLYYgR3:'*M3,DP#.?oAAYiYY?
%dBF'iRS[Z;TES^kK)f>T+-T?j["qMR()@pI$%O*2eL\SR7TUjHKCq4V'Sapq_Ut<.rHs3LNGVL'*W]\JN&B)s(*IG!Q#PspZ9*Tm
%.s%!F#)%sIWWTi+)$h1P:C*=25hL;t-/,"F<TH_.&L;087!.c&&iNq9&>3QeKT1.%"Dn\uCo#Dc7o7i/TI>U;$6+0irTF<:N@oH*
%GKit:?r!BMee&TS6ATnVK;O;DE"46JTL2n?jWrS8'K3t&=K-h%Cr$Is[pWX>q#sF,O0Gj>N*$=BKoHf%/A]1m$AMWBYctB&N$&`a
%Cc'":O`\FV7Q\kVetB6E!k)>IKT0i-AY`/Tkd;P;M]N5;OTc(2T>)"3K>PWNb:]q`@0;qCS3UKbKgNBS$6.`-aOUV()p,U$!ejA4
%L=nC7ClEq@Z7LFX+3&I6N:$#r]oL$C'FYpD6C((+#)8,7EF=&!L5iag(d9Acf-#&UZL8V=)q?Ri;2[i$#X57$7S)0kb$\RYon]Z6
%j.X,^"hY(g"'9pWZS;ru_f[jnKu&N2`X5V$JfVDCg_^/UZIqZ$YTmAJ'`pHQcG^V$41!=3;62d_^YrO43J&LNl\nlYrbI0iXOu-m
%o4c4sf8qqH&R13BNTVTiJ\Hj=(USpXOKShD=HTd1kR<lMJ4Ws?%3FJ7"-J[')>4t2:IB#mfBC+%D@Q3kEk[W%?3?m?EEkg9!?n!C
%mgX^UZ,As.+i%kAEe7HQ3lW@)FH:VT.2n#q.ra)A5c&GO:'uZ8d&nPM$VV%^Fc@!Z+G:$M2;hE8iEWu;;CB@e4/q-h.+d\9)Y+ff
%20d-_0ub'^OS=9:[0>UE1$6R`iYmX:knSke-_ZELE"1YXXQM_J\;'XJ@N2s;GVr#Bi1gEH2H[_A"E*T7_l4$P2&Zp^CXCX06;^7o
%f&/:R*Nh7faWRCN^fj+e#9;h2eN1!*TV0m*4[c4a9P`i/m=$9NCC%<r$k?'(-]i^g9*;PU!(&eu,<T`iEen@7i2e*G#2`'>ZNabr
%MPh[QCK/^db/")f3W\<,i)ml%/4)1FYm.%eM$RRM8gIY>_6AZt@@`l"L,Bfe1rTQ\Lcrd&$A(.R#?i`*g]4Ea^''nLpsg3L'?G'P
%jt@,R.>/5f1igm/;t+N1AFSY\6Jj;J>%DBqTW<X$R@Sq7XZumg>TF!3E.hGTV/[L>*iP:29Q!>%G(N[I6EQ!0;g]2]Zl1W_&O0,H
%Wrk]rN?G86ZN`6&7][($""&QK5QI"q(p=jVR"6o0eGs-4<^/mNL0l_D?Z"Qb+cDIj<J*htd'NjSNGeB2TPAG6TY4-?WW=FP0:fmX
%3t;i@UJs<,hT-hiOGQ;kVMnB3fPq`semhZ0b*,(i"+d%4FpS3N_c]G7eP8^<#XC6IqB7L'HtpW5+2LlC8f]3aEY9!A_Zu+8WGU_>
%42Rl'&iM/beDM)Pgl.+N7RBNaiDP<3(nV5QV$7!e5Tj0D/%&8FW74fW+<U^hV=nrD(m@!'s&t2R%`fqX6u$s+ciYkMe8W.L@l_E$
%%Zp!8pm,7nb`j*qN(+9-.Q"5fd&7=5A'I]`W'/a`="NW).C!YbeFb[NR</l.7MpT^"c/UWB#cm\)0IX1_NRI:K41W*e/=sHf0Q>9
%P6G`5#R5E`4\u]g`?N'O5Ktoe$9t)WhuofN>=l:CUJFD&->DDe*)roie*(h^"[.j*(<OmUbKWhKi_IDe0V#`+E2Oiu%^@DbFrCiL
%CG9jEO<]oHe3KoP$Whp?D+.&.aD&lZB<5r=S;*!;8@bWH:Ot\D\?7sOm(-P/ijso7k&>H/Rgs+I0F_iE_#+4Of>+92AquWY"Df"#
%ZP6=g@+,sS3XA17ZS:<;)IfQH:oJ-'TM=;ZfRJCI!*D&9WHMt(Spbqm2D*R#MDZD*_kiEeVSO<>E1DkD%:C>YAX\1IKB0k/E2EXk
%"Q^JOR0G2REkX<O1_:;/B^/I!C]nC0BlNuZ7$g/4K=b(i'Xc;Y+M#L.Vh`W#jJWJ,%0`fO]r:GKfeAX&'+r&>fENs6$lL>1f[<%(
%4;#Dq/lJ-,TVV[$(NX4YaO8%HAOuogL3,8X%<=9""8W-jYgPOQ+`2dqcC?>XB[HhIJ_1;S;!GpF(J9[WJ#\ma8f0id$WRe8_0M*L
%6j4qV!g?KF*oT[X5VZDtR$nJZ`Y+_^qq-Nm$WXI-&IQ/2"sofCSRmI"%2%/tn>5*;8qA5@"@j@9;Lu*:A>NJBTL^F:U(YQ2'\Js;
%_N4tT0.Oh4&CO^]3!b*mg`ltn<Xe443%[]EUljSE6]acI\I!$OdTPM6(dC'&;)lCQ`qo9]XMIC/-71at)*Jm)9@;qEi6`*'MJG5h
%N`LN_JW<4l96A3/Ecbp#l7m67A8>&)fqaIX<9dLlUOh0%2V0n;BV\h`5bmjrfd^SjJ8lergB]RGo^stj_]_3&Jg*!Y1aX@!Y_Er'
%LhLHh'=__3/YE4]7Z5::2/WjS3]#j!5Xg<"S<B*S.2iC)U)O2'$UhMa7)PZO[9$b1Mk_EU0haFZ5ti=6Pis<j5QVSSGLS=@ZhT:Z
%,!(p79];Xu4,i^'+aB=rW#6Zqd+Vk^(%jS4#&bKT6UPqs@Y5"&]]l8FL;pIo<7[/)_1dS^Xpb^JT+Ob\EM:i(eHC5$B^gsl:8K=G
%b(0T/";DcECl"]D_M!r#Er$I`)Y@ja*>MCa-&bZo)jOj*,@a4m-8DI>7['_Q'H66U;"8'sCETl4)UhNVIA&@G0dnm:Es5lDoZ)O>
%A7Iu[#)14*fsUX-5q<$l:'%%SGmdlU&FUVN:gb9Z5m&MfK$4Q?1nZg*W;m-T:'+,GJO)d9nPUoOeFJc:=O7=(leEBm1l?:m1aHb^
%N"lX;Fm#.CJ=o3S7^s@>F3c:E$3L_?6u!g;5Qaat(3C9*BS9nFY(8jA91F]O]Blr=+OG=@44jHrYQ+XO0AVQ4cVM%u,Qo7&pj.)^
%D&qh_*UCNBe"83uf3deAo&0g\?f9fsrU&;"c.*d#l_As"T?kh!-aWU<LVrK-%mLnC5Q(H<#<2Fm@n>flp)is7s&3Vrci!.1fg#L`
%R%;_[rUAWu*uqcki6u9jJ0c($g&kPT%V=HOnS"IQ:h?2mdF[h4o%235<8Z4*!bA0A5YjrD7<9$_*WSA*$aRRc&#D.a1]i.\p"m`@
%rrBYD`4FDg*-;[(Fd7rp0n[\?FRW]O&XC[7KOD%,bf:A_M$#&0U0!2GE+<6.482S:j+6$tHHKj/#>i27ML#9[<5CdZEY4ik*K5XG
%PlcYaBLr5J$>p`i7p5*?Spl^\-U?N`fuoulcTdOWkSalW1$FIM(7n;I@K[);BEjKX7%4MSJER=+MDU\sKlS2EW2$'&=4V#<%_B$o
%9?csba[Y^R_=Mg4R!$@J+F,BJ(D4l0B0s'MbgBa-Sdm$1#MgMQZU,jj.o6cS$8Xil1_!U_Kp[SHo`-EU7'ra4'A_/j,kPWXE>:0c
%&>KfgB$jCnXn+@%`sdP3J&TM4gT2E7p9tQNNSY/%LFNN+-^6]8<H/,'NaZEf68)ZJM+dcYOF1?DZ#`#o^m9%(m/#F]),-<qKA7Kk
%i?tACZ@HV`\8uJAh66tuVWb/l\l@VD$r"Z3Zm2D;cPP!],,7VYQ\\"rh:6GY3sCue%]2LA_Lk(02hnko/4nBHp`9S,FdC/>NAi2.
%lVs--k#0Li3Z127k)&;i=rUX0lD20S5l@9mD]HD)(-!R"S"T<"0@p)0,$l!&1\B&><$$90*Z,V6GsJ^0OlR'dGE1Xd@o6dB790O`
%P-V"f_F::g:e15=OX-QqIH]oU=Cu7nnR+UUUqMG[s57L5raHg?m-^nZ&b&KXed/t3\[5D"VEt[qo&lAW%3Mp&N-)0']dVAI]Qcq5
%`u%`9i#kGY0OPFUZ9i*FSR^u@^%S3^lmh;Aira:28(tZkduHE:]_#XJB6W6Lg@YiZ%g+)HkclU"G"X:?H5U01KWPd12>UK@NA2^d
%]j_3/F>lIkpUottBTP_N:P7U`%`sDo?gFWg"@D>A="rt'9^&q+I5943)%iXAjb*V-l^<R=2bg/0PTCI\#OmE;CPkAG4;'b=5f?%m
%@@_"LXbUAlMuhie\6BW+Ygb)>[99kR.c$`d.%L\#J^D7]3Y`\BqO=E*c`c8T_a=hL=k/aI/f7eZ4b30Sk84]@/KRTO;ch]B&uIH7
%A#:3,L_7uSMFtfp)S/0Bj%a\pPu$YtFGC!-rL*)JoGj&,@PG,Ma4:d5p5qeDoA.O$mml1V07a.J$k_fZ'<Vk^02/GuQAK,rQ+!M[
%>@uFtk*UghXn91_[%:"5,@N$o;qV:c1q34;B0V1dMR1'98YiUEns7M,;]/)%`jRdW2Rl#<2Z+4:Tk?^3:^E4'q$og8bTWBr+Q4?h
%bQd#NR/O%D2h]':Jk\NM(D3&?BRJD;Nk:"gArsb-PA^<Kal$";<rOQR*^XVI0\B4t)`'s>TB);*A7APWN/[Va0-9eu=QM48dCM;S
%0Xng6m=!s07+ei@Hi!!;@Od6/IK2I-ElGmpCRq[<N3XWO0G!+D=gT^)8JbFeG_duVOI.3IK[5Z/72TU[12'`ea&QW2HVd]IBcQd=
%<q0LPCNJ]XD^g!i_/cL')g$j/eH37Q_7K</LK6#\2fD6(GkanZn>]/@PFn&Yf&fFANBr>T+9sB`6"8oCdKd<F2NotR5lXR=CrC.8
%,0l*+M<*DCP75>EHB=4*N/.r1gM=^lcV'P*Gca-M?FlfD(_Lr->=h4a6n#mlMMXAQ1f`jnHL"!tM,F"/a==g]h#f#/bF7qHASI[!
%\bVu<[9<.*BMmFjV)NfkbE2O2.otQCCh,09i.RJ"Jn,9=]b7<#&6W8$qbs6L7ijPK43)<mXZsCSW,qJ(ZidE3q@K%g@595QNkm(h
%7\>@d9/4F3R:&jR`u#Q]98p2=a"V(L7[4E^SltW).EH?TiIU#dT/_+,pe'K6A:e:FH/";f8e6R+-1\nY)XX-l6'd(qRh^a3k_79_
%d<^\2-__-I.!+6#&VjhlAMPIJ!8P:EgmIbb%'jN/[jtVU^l;F`JB4kY`0d9@JGKkkZY&EI#cucAeMa*8Ni-q%&/a+'!Xg/+!>:+[
%J1`TIMHQ7bQm@U.ke%H?MfKAH*F(OXihQfHnk"R0-cc(W@9GIoeI@?qk&(TC4)q'<^_0,J>dOq.KhXs'>`q2C\8=Iioul(,c^Y<t
%>Jp@A%0T2T^'&l%U?<iA_?t\OkZ5Q$Z^&tcCY#qZO$-`5'4b="4F"m-\$9rZTiVG57jAu!jJ_*haTXO1\5&)Mf*+_ddE?(%(&:@Q
%[\E=8S/L3=^u.#lB238e&70-T=WAOaJVa(a(0Hg=6T1#u)l;d=FqA(72U779ZTLHb\hW9A-6HhE75$.[Q6aW"I?G$ds,8%K8=<C7
%&r[)ipHA^@i#u=h5r;b<`a<&BU+K%&AeBspgf[<s3em/2;3_YW-FlkC?,t>BO3Fnq0duVt<Cca7M,Y-Y4m:pB`!umaeuLhe@K!0-
%Cqi$ZZ-#n>]/(3D]%[J?FK8>o0\IUfog$GHf>Bd/![`4V9hdK"[NjYBKWXWLgB%M%a2Zo>]5QXT<i:J"'bQ3H/-ZX]SQC&H5[l0q
%_f\tWOQR]Z[Rh/N"5?74O\R)<0'T2^b.E5MmgA+tWrA<<Fo0AnoW9;/UN=)F(_,/XcLE[n#1Oat&UT%HdMHSU+Y]#\-Oru7'4VcS
%SEX"S4:7YAHJeW)'6l-U"p60se'I-S[^7TH-GDNXKq'&6@<PA%AC23pVp'X"Vmoo;7#>_,;,`4PkK%*Xpd28[,\0cDZ`r"b.m+U(
%6i]J\>D9P4V8]f&"B?rq`6Q<h\Sq,'\:"F@9Bh7S8)n#B>0<Cj+(A3GCHRcBb*5?"*7Vp_BhX7dh"p@rhPIBU>Fk!<#BeI(Et^t/
%+03%ps2h4M#K./qq;![-91SaK_a!)aLcpd:krBC99^%Ug!b-1j@[ANsb_3e(TtiQ!O^/b0i!TGLcCPR>7t]N`_;<1m3mlX-M0ZL8
%IPe"YJH1.E`^D=%,e)`<4mS.1%\6\=;I(IF;90,Dmq^&ge0)"F4VmBG9T3^^%.(o"HHoQ`cm8$jlrd[mOPP^0U2"Bb38HSQ*B"1`
%4u$D9JGXMeFLGn.ZMtOl']GP7js\.n6@Kq\k$]Lq@L463H>2_Ko^a>u&CHc_N[ZE.)^ig=$`I!#[qo10RV$chU7\*'H8-I5:*AU?
%YsS`thdb_I`E7#@DBM:&b6Y0,;2C%priV:S2^)f^ak?4D;+#Y?;d:N's%)>jd`D':a2)b8-R@^3HY:[I/BU5<Gdh9l.@@-qjlIec
%"!ORpfN@IEp.RkI1ES#F[gIn:;U>8]^sB!:73p:8A*>SB3505#6/atE.QU&]&5cDH8FJ*,LcT-In.)j=[IZj%6AXhn3XcRtF6=Co
%lC#q/MP.k"6?c<"A+o.&7$iuSRE,O=!Ou];YpYC6$ZW[WUi;/TJ='S!L#?26p@U'iW+'(aN5;abM&]!@CU;C\a-bu*r"=QDc]mk(
%EnlVt'o3D@9>oVA/-R8)K&u[G]%FFs0DA3[7qkXpjBZ9Bi;jLb(Gd$MU6',R33<j)A.[/P1P`pMLc@Y)0+eFP*'dS:Krb@*K:9_'
%3X'G_5gA@dK%B4nB>fuA&\12t?Kc=h[S2P=MnerP_n/!IY;-)5Ldi8Q'<r,4C`W^;6I$>h-?0,52@<mG;CA'oAi0V1FU>EHqK787
%+mPQ07^iVq9*%Hg@V#1lX*gf:A6_V@U56O06CW%eM20f;diMU;6t2:uM1ja?@lWguWp'bU+kF(oeQ_\D'%%WZMdf'])V`&FIbcWW
%p9_XMl+s=pf6+\`L44A:,@iJQ9SYRrc8*["'8IhQ_N@BJ!S/Gg<0h@TeeTq*,dWgV)iHh@*I277O.dY%d(#_MOV9c<hftE-Z;</F
%=A&sJnEsXH#=7S/3+V9i2&!5D&)<JHD64;aCVUELp"h]c@pq*B7Ea!F5bg:P]&SU/5l$401o,$nShq$r(8;,PA0B]iNBjT50p+&5
%nAN/THe0+'!#Z&7)r!l&h_9Ha676p]7(rd8cTQLrL*Ac;q%;=-,@k;[/I/FIbbSegLU-st;CPlVj,p<gNsK!d<'nHIOYMKk8_OgP
%&rFF79e-Bu5/[\TZYD+L(<Wm$n#db.T`BHo4R`@LPNC<qiUBP)U?3ZHN!TE5=[pF];lC<@$[[(1qZa!/(/Z6DoC/>Y"!U3PF4dFL
%NAr2/A-XKgK`!Qjbn:ojO+a)/Gpk9&EA5dDDX9]s9LL!1,'rEUc^"YN&[0T'A'[?\fZ"]W"pN/9QY.<RX:SspZNt/PL4Ch+E3CV.
%d["2>/0CtY<]dqgdmV,:"56h`HW(Gp&0c/td_]+3"B:@#>K?L&GD".d!GL%j"$H[-Ncdrb3jX3#d8S1Pkga:mXW'OV,j>>7eD*EW
%Q9LSbJLH_EgbD;c8#.<B&u9*tYK8E5o.<0B\DL7jBH92.N^FFmOiEF!2'N4/!YN3X#<p_iZW)JISE'sMe)O!_ign.9/J6A73Uq?g
%JV]/ZHoG;*3]95E-[@jR+W'DeH-p@8AEZUo7Q/c$E=hBS=<iU<GlB^N,DfNi,aR4V[Es!ui`<7(k*E.U"j;T4;>am2?Z=g(:g\7C
%Jaq0UD@Qq7_F.^a7!:g>L)>0:\`eZSNCHA]At\2(i[odr)*XsQ5%?$)rpl_uN/:rkkf]QmB!IFC&I1pfE,+%P*lMFgZ/GdC#%XCC
%n9HY1Z`u9]nn^cW!ICo+LuGD#&t'U;.*h.$AM(Hk]TJlLZ=t>TXPCc)Wd\UR(ISm"RE.[,ObH.HHI9jb.>Dr:UiB'j\ZEFW0IdFY
%j=QDQ7b/(=@+*L;k`"H]O@?&Y[n;U4X\ZXmTW816=S_e^ibu=N_AFJhHQWeb/67f:0Sq'6%*pF9D3EL6JF2S$XVHsg!:YG7(ZBi/
%7c48''EB>$,%4qHX\j;2</@,FJ.HI=!aA2-8#1*&0Uf6(JsE=H*ZQ7YLsh@T)Imd>JPE!f)6ph^)&V_Y'_@F&aK]=_&^Wh`-:)C<
%UN<Bg,kc(+?_]am:->WZ!_8(qR[tlS13^nK$`&NScKsZCUM?6Gb-Q#T`VP4r)U@DPJY#S?@EX!3$V>n7<(;omVY6+29!j:3K]1o(
%7'oB`19tN1M0dlCA90^%:h1Tp+KsEoS.&("k4#`TTc9lL)!&]9q(FEl"h0'NKkJ"!8C]0kRMLCuXIu,J,2t#J="rHQ!]T821#8l0
%4]2ao&M<<R+<Ag`(k(3O+'j/W;+hn-J_\`mg&8_T#Zb(B)$\c/q`]AH!scm,!1KGj_c;d6R9@DNW*gFh`?W<pcV3Dt/<Z9iLd&u8
%AE165Gj-'_CQF^O`.j[6p5Pp]A7W2U6o7AhH"[_>Tn3u#J-MSa3;!V3KTW0C+=>:5b3IU`ND#*"/.p93/'JK4c\NDtKdMsWZh9Eu
%Bg<9L<Db._B$@hJ&LF_;o^=Mb"=dV,"2-_qpbW72")ob(]hE:IcF+c6B/'Qq8]Z5eEp]n[DOH=FN6I`]D`uUF/Pf=c6kBIMj!:@k
%@q-6QTSXjP,537T7!]$\(d8Y!.Jh+9&M1Nsi/&)Kd^.@`7#foXK\rHFQqpS\9YlT3%n/rF^;mRD!6W<-dEnu&&#c@7WJYAP6B[6m
%%N<OEJ14`6D(ngX^Y_e_B/VUM%0R%'2S`e1Z9MYtmGQ+a7q4,5!T9QSfCFc3=ik)/=7&:_@[jG.NP-gFr#>cGAIpcOBkdbFF/<k1
%?5ks<&:JTI/Ok-Y`RG-&E0NdYF,O0s%X8O/s.W%Nco<L.Yss1;13.=UZsV"RXJe%!5[,YZ1*Vq[+PM;:.Z%$=)dXI_%+K8s#//fC
%Gi)m7;4V#\=Ym3i9ggrVl4UGiSd'C5P/aF8o4F/A#+3iTMW`!Y8dA@X3PGKdAV\?dNUn]h7#mK8TLJQ"3%?;n(<`Gu&6)jK-RjQc
%Y`0ADk9F]r_>jcUh?Zt_3+>Q:i5VcadPi3)1A&FmS0S\p'PSH0%c"1K2ZQ#03ag'i9H6;gh5[$]$g/JM&PYYQ,ME5nN9Dau'>:2J
%nAfYWbkiUG!\oh&8iRD$/3qa(`3k[aO:CEq>']na7TbNdRtJ^N'W_lui`OT!:Vs)tLRN(eJBXMT:_Y&V&_`F_^)&]e:t*W8BWUAC
%dWMi^N&fY#PD24/H4*\'_=ho3^m@a2q>b'BSgAW;GUXjPFf$DBUQ-p@E$Ib8Yg#;1"Z<\6CM'&(YDi/dOt_9?g+3Lk`b.7Y$=,/Z
%NNJ3jctErQhUljS9@2TU:M,#!U@_0@7>i;j[,iPpLLK=59M$j]VV!ik<L:P<Q.6@r'ii\<0.g!1-S6TO3\dnQkXe//TGX47=VYot
%U^*$c]Gt=(Lu]?&4k<=3`2pbkFl]&-^h;e#0OV:&@pbV8Oe@dnAd8lPZj1tYR5h,^DR2;f8n^PMAud%HFQD+H<)Z*>`2\ur+dA;:
%kUFtKSM3OnAL.!VLk@+-P,*H&'*dY3Ynjj)KQ7BF,r;S'Yh.r^!ro*3*^afqBtE&94b^h*B9WQ:%^lEIUT!aLW2JuL'j2P['RRH%
%QM3?TEF?tHL7N2a(c5MBBK@-C?ocF@Sli2P)W>:Acd<d88+ZpBN_m29jp'(uc7NcdODMu:NhYYN:W@`&0W,_F?:aZ^U;roYWi\X/
%]^M"-$LW27Ea7`,gHt-3FG#K@(1oi1O;)t3m`Iu)2*jRf+Q>`';T(7_<3Hb`c]'cAlm'XU^um,AS"n#fR[G_[gpm[:2)H=<ZP+m4
%l8Ye]8<Z/`:IPV4#ibH/#\fd=EH]3U##5fT#R)S/F=sikO>LCtBm^`@NR`DA=JC!?Z*]H@3_,FsXQEb`2I9Zr1WU)!7WHFE-gi-K
%i_!$+7A+HtonrPn&N1maP7MOJA.6\qdB+a>=:HV,o,qKK_GVB\>snj(.Re`+K=[=05G2[hNe7,8kCH!(S46F$XHZ37q]nT"'fj-O
%<M(W'=*1HsTI]Igjh\?_jAft\4*ORm[S>258f&)q(?rY4^1DKQEG6Si:sGF\=H;YonB_0Y?)0SVju=!bO-8'm/709rQ7B/iBol_M
%E?/1KQK=\iJT3[Af`m=NbdL_6ga+-[IN]TZ6[KAkN)`qAXKb6VUeDa7V^s8bWPKFe!djIg,$6t2=\JVS,h;6=Ns">eEpFkdJN(YI
%\#;aS&&H?&mWE2UNGUJ(]%4"'[Um,lK9u3n"@2/\TTLpEX7p"XRX`Ma_jqiqBe1FKBT3k$CJ4A;-FR_0aAHV6,Y^I`c*<lTk^^WR
%S4/Y`I-fHNPIIV$Z55Mm3.ph66.nnQPRm.LKe<C4ZV9YtO-6#8Khud1kEa9YgH%`[Udr",<^GQK,hY)pW:rIl8Ro\XDs]i0"rnM3
%Ng/rXi!CPoR-.[FH^(T8BW6hR6PG#l<3M3+N(.C)P2U=-CPR_[!M9X59R7*)XK!*;%,OR+6]uPW9IUX&$i'X-!3aCNl4]*eW#U':
%!,mB/-0-'W^l^bU;-ue7=7`2*jcUCso%X,:AjOnhXYnNd%rss@?jRiKPGU(HVUQejT<*d]G(:p\LWc@BSO>_%#kW`p49F"R8"'MZ
%.\1*!!T!q3V@Q5gf<"i4kT#q^6Br_!>@mHj645bMh(o[11sp/:D8jR:)kq(:AI,R`WQc;7?6s_81G;]nPB=15g6i)OTufYY7gWb8
%.%RBl-`X=\(HuQ$\snMc9ggq]g$\FK$FnA,kbV4,-.if;7?*Z8P,=FhgWXG#2e.]QKq_aG+H$etO:<f<Ed:U5XD'(9K]u';N$Yjg
%P-?f%e_$0Z^l9Y(Rc&SgkN#'Q(ct5UbqVL5]bu/pb6>=lc.Kp&ILkk'F6:J>;nOD%=u9^3=?T&o3eB-`^?1_*"=4Y4?@1!qj&cIQ
%1D;'?s/e$2\]E_AQcd[<ngq>)RAaQ,QrTnN2R-C&MRO^;MgBIbW',)n(3=+u>7Z@,PEbk>/O5IA.?J5<j<`@.\bj+MP3buS"\9=b
%f2;?[1+8"iA6Z>ZdS5m4h/'B#48"j`ZiMEj:!Z)H?B(lmr5JtYCc*/1gk!h8KdfiBZ>Db7,`*N)T4IigO;3qpM_SE%_cTX?)adJ)
%)K]qsQ/&Ej)aiiQai[kmQjjYn*XQ"Q$pk@ghXF>u6jG3tZV]dDpRPcs'Gs-<MG_:)>f/TH\rWlP'fFB.p"ad):E'3:Z@3@ZaLhqf
%b!!3n-qgmYV[Qp/7mV@c6IJ]tfR%`D<5\72`&L6*mE'H)9RjH,kRcufDhmp?LjogX;.q8.%R=8fQtS!K0NRjkrYH/XQOVW0%aan$
%U;ZRZ3)l6?DgD=E?q72FSP2Pl,/6"2k.(SpRY%5Pn/dm#'"J>IOA&=tR<HkCVsb9Q!%S-eO,d'ZLM8/>L)`M(.IJM>-o[K9$dk$[
%0e]Q;,Q&\OJ^4sXkCDC+--872,c*iYeksG`7PbHJP,V!?7&"f*Jn6oHVXo1fUfh`iK9r'ZKe<laU;G([l!cCnj;dJDWY62d_e$X"
%92nD0MS^!a&4O*P]qYh'PEOnm`)W8ua`2-J7A;d)TV[C*J^o/[*eb6COjKT.87IWRep#tZ\TFSA+MS\U#"k;<ZijfE)EDG&QedBg
%+Z77B44d:EZ"6RK[oQ"X-$U`uHml+($qPOU>V\jW;UA*(ar@0J.8?4or(1WSc_2SR8<(lW83>-i)oZD<0-[n8MXFAJcoUjn>J=`t
%O#Y/(BF74UVkIp/P*U_pZ1SZrLP+NN[0M-?KHFBudE7cLY?DH6hHqA,"MUR?ju=PiAg+)mVPRX/kaYa09hU@`?2b4CSPZh)K3GO+
%i2tUuCJ24'6u:QO(h-(T_"m/48po5XBoe1qP!XpI`3a4Er3NXA%!"8;P-Irf:l@?l4<Pdo5*Ydg#K9FtaXh.0"S<Jg*jC!JkS+X2
%CUS9p8_kPWI7&ueLWEj`Wt1!nLR"<@+)4<Em3G>b1XS']&,jjIcWS3:^]>r^,t%KFnan"mD%1q**BaQ'Ml(RJ>7Ro\7U72\>0u"/
%`1SL\=bR_YZ;+md%4"!ZeWQ1fA8Y!2<Vn,kYrE<nglNe/#?'35]Fj/#`@>4\`Hd=jK@6ME)!&[@JZe8JfYElOWfC=;LUE!9#Fmkh
%WBO:N!GGT:LG+hPE#P'#$jE[GkQi;W;4\FC27+5/qZnT@A/==3ijqIOOFuG%WbUWDcqIqETeRKj4;O^.`eB$.Z!3()E^_]i*T;:N
%*eHL1#\.p$oK9LY1#U%B;"e$=63+8Y*/&#Nn.bO(<G;YkYD@9>^$?B;^k#0]*`j12<gDbfHj?j5YZ`ll0&+5T!1VDbe6h:`'r^u)
%BN1M5!/5WUaE>#kLYB"u'5RE;n_eYUF6OrQ,8Ia[W)iNaUB^3G70lB5CnX4^;2GZ"+K+i]63/[ANIC#f<g)Sh3[9t5.rP_j&7&N_
%<Uk*ok"iqVjGFI;[5"UmV!>Y+c5r^@7<p/s.VbsL._*3F6-Pq+TBMtLZmiS,:eI^0.L:o&cO)*(#*C,R95pAqPZ+Cp;cM\L3-lu$
%'?)#M&G+[TIF*3t8A_Kg]b)KC,f>9N8)Y<J"GteBq>b7AHtXi2a(Q,WPjfDXi@@.r=[BQdCB:mFQ#]`S!c;0BYs<8g0JT/T5%Ob3
%BMjN#C.P$Ei>7;Fh\il(&J6P:ciQ-p4J4W#6&g]t"Q+"n/2[Q+J]Yj:I2`8*O[[1Zr*j08]0W(`i0ft<*`Du\cj0nFEM+1;nheej
%04]K^115`RE.mK:*jCr"PQuqFAL/Z<Og/3u[nPf!Yt8Med"CK>:*'^)l(,dNA"q-BSca=,+ik)'5gjN6XBQ[u*_N>q(_3a$L'mH\
%g[7P+p^rh>V(9s@dn6^16ZOCSIOO3Fd:A%M<;6^_OF)MN9:;(kM;Od1)`kN]]Kk!!MjeMXnc7)$I7UBa7L\`_"A"Ls"Z1KLHB;Wn
%,pr3H:h,MqL@RR/L^Dc=2,6GbF]SBnkagA`'l%L67nT237-"?c/gpckS;i7@poJPf`"(2V,"DYnb4sG)FXY[H,S\S7+H6Q[+EE\J
%&mLfd:P8%\d(G0c\Shn@7nQ"4kbuO6Di+Zh`'&?keEH)V7?8R08^ngHh*_tN*?!<D:S5QC5V/$9OJ&[#+!1ul3>-XW)BESg=ICeH
%!_j,OY._jS25=V;,WYAdkgDr$5a`1`b%Jt\Z&EiYBOiFe>a03qbaMcb?.]D%bS*hn-]p[hgSHJW?s2L91t"pH-kW#4a@\9CBFe,W
%1m6D)f7;h-&rHgcfudm3Oa&??OB&%gUF,l"08bQJ]0rirnh5!^@S,IuNQ!<5#Yb*QSn*0+J:Zr%*@M=t<ZVi6RB\*`?Sj+=*[IpL
%&mIC0mOZ[eb=%&YP=:\53+E$I(L:RLk85\b#>#lO#gOZ?\\r2&8.R%VDNUr]q(%ii]\\>$g?U2X.8ou>,GDT^j+1-CT^80Q`YO[G
%XBL6#4Ytfui9*RUBim8A)N&=,"4>I>fje!kO9YqA)+,PaMNm5EObOs:-G]q-LiErX8lUp@eg$kY(+$biRomT@lVkUO7O4BQU$s)K
%"VE1Tr2H>>pj0i`"Da8F*B5Q2JO+9,knQ&]-V_m;i]q=bP__sX\g!Q-W<jOedQ%Vk7c,/-gX6*K7hD[5Z/Z53V$nC`o5b4H10/j!
%3'nbO-lrIH].QL9`_[q`b-="kiGS-Vk<)6_l)[aWkY5goF-%Np^fG.paoRXV)C/oBkqB`9!_c`0)^*IlBL.!!/-%"84c?<0.3HVS
%6Rt'NQBI3RjSAI7+ejK=lP&BTJj`$_VD^"Pb*l0A0.C:3<gVDRdZZLU0C%R(MI;N"b\4?H?UjW$0\u?YT$2GR%iR3^*X_=YOFTOR
%(SG#JTWNr?Z-k)I0B"&#*&NTpCO"2U88(krdK_gfCaF,U0]U&SYKD\]SD"5=P#=qLjH&%H2"?F)$QdcV2'AA[OolW%(llm-bb1>E
%W;?[oGtDM3W-KdkV(!+)+IrRja52U4?&.9g=aES)%mcesa@S8GBmh/'HqFGj']*j3c_^,pfN<eE/gF,N`Rht#P$6Q`9H'ZV\HbdL
%9!lj/%1\[Tf@VYY32(&\IZK=LW<`KHF-T)rem5pg%$JP2q:H;f[^*-1`]N'S=qbEE+Aj\9M%Pl3.),9%)oA7g*a>+s$3edD6eLA!
%%mP08c'Y]74c&m")D;r#HAuH&nK[0$<Bl"LfPV*eK:/cfXp-DXj=#T<N42iE*E,^T5G:,\$[-CNA71nT`0f=$?<8s9,Ef@8FCX(b
%2[lbl;]Wsq6c>Y7/Ecsu.DDHpo3pkL?7*`.PC,>DaD&:F"^<-Ir-BnQ+,]a:WANt0fn!F*&s([$%:pO6rUT6,G"I+,!00=)/u[pr
%":3+AQNANAS"[B7n5Cg5(XInE8O^c+`<8Sp\jsm?0Ja3;8lR9nLkD:,`s-?.o#N_B6icFc)AT_5<hPPHPA$u7+cNc87^4HJ4ff-h
%,Sc</$7da/0#nhFgpgq'YR1Kpfq;ELZRA>dm\BF]o^]Mj;0m1oZ5A%sC':(P&a3@1>6[+@&F:l/JoEec?rm&mAi-4C3<n/1Vh[<H
%J4R<3Y%`-;%&ZK-M_aXmqJ2U&B],ufqlVqc>LGOac_E0u%?^alC'2a@1!MeNR92\i0&I3WZKB"a%+u;cQH1]D>,@o\n<O=C1C+t(
%R0XO0]adN(&kq@dItiJ_5UG#J]Fe"L<[d-_4<IlbBN(,__,I)=rfTPTh'sdl0alCpW=6&&lTq3i@*E_9&Cj3o)Obc)-r2<7HhIOV
%87P\/=2A?N9St2pKXcaEF,1qrB(hYfk/?^%#t+2UkcUIpa&%"#]'T9p/O7];P(6N]/HM4ZHM.3/QlWp"#I0]^p(.]K0[XSg=eI_Q
%9^%mc/`Ckm`c@]0P.]q6b?>.&3Rq5d_FbIgU.Qt(NiF^&EqHIg*%FQ\U<"rW`qLZG4HM1-43(p5\l8_"D0"]Zl=/SRVV@g:i18jC
%q]OjkcACN+lM&=DTYV)I]bJAV`>+5DP@mM>kS;E4#EU?o0?;V)J/C,/:?56G(NJ"<X:g6&=t*A0[=bRN-s2I!431Id_%g[Se13(@
%NjgAj5/TR,U!6KeL304>ESI%be"^a$dhG^hW^F'Ri_7):1&W_h4rsF-0gRXpY+K4A//@K"Cp=[>P^H*A-TH?$E.S3d_J?!-bFhB1
%^>Uf*a)K\+Ik&kVR\7tF>pKH0/nAE&g_MW*hp::^A<a;"f)g5\+HtXg&pi`V'QanLh2LP<Z/)D]&"\UCEaXE"1jtMto%UJA]V]Xg
%SHS."Mtp<pS8XI^?$]#/B+C[S>)B0D](?"sK$ZoEPgsD2&:?>HD3>06ac%',8%%\'n1[FZYftW?Zg4WU&TZE-@r&t'e7.]7LMA+L
%N!-+J)l*Ige!unpZBV/(K4Im"<^ID^<nt`/dV5NfHr:(]c8ZXTK%Ok1kj>YJX)598.Ol%Ag1&*7AWkMHN&Y9595dC!>\=t_6Z`c)
%oNYi/M!B<r9PM><CL;9`GXp1*0u$3<^e>=!g(`9-X9SSancUE,[:EE#[`D=;%S,$\`j;f0?,96N8LqlH-*fhP3%]t1e6&@ODiN_[
%6Xe1WCMZAU?kajmbG`?I/<\>0.QA*pFDmamBl$(t<t(MdR)s.&LgVNqAb>luW=Y_/:No9(Ka@g7O&8)e#9.-#B]TY@pN+jEGNopI
%WC&k7O<Mmhek@cKrUQ3FbXA5:Xdjcq32^eVq@'^+,:'&l*eRu3U:9-bJK=GtXaSMVil[ntqT'JpFg?l*?sQfBX7m61b)BDCR--GY
%lIO-I2SpYUc`Jor/SK\$:cD&l#N4_p1-[,@M74C_dms0)dl+9UTHKRN3"rmeVZ9Pk2*5h7/pg@+LD3k8,h@pp68<7D[$i6L^K734
%JX;%`6;eg%QtL#\CLh9fZ>,>W%rs"=UGtY>-5),>bT]m>%8I#b0UC()!f>bBlD'<1[9r9%:pT'uf1B&jWBjNV=m&g9M[dKb;^Z`Z
%PZ`+1)Bt/+9]q0(*#^0jXYCf=E^;.;7U/!ih`tUr8C+CrE'`Y;o?3XrC%Sf^)MBNW'FS:LL<D&c^9_9,l]P<fNggjt+Di>[>FK;d
%KB\>lkij:#FFk-gfTlQK*(G%G&8g#d[Yit_XoS[o=#UtkL>JN@@5l$1c?4_F4\/VNk>g#2fG?.e9uJ[$hP`CMko!s)ii*-/n)P=.
%4*<QOR!X0,oO=U_;sCsmXU%V`A%UQTDJlO7_Pl8Y"`bF#=saeYe=+-Z6T#Sp0)!9TWn:'QA%67ljtpaj_>)W(U4E.)'IQiE`=e`*
%fFk_kNg-[ff??6FeuF=(M+e6Bek-'AI<a)aobB3%(/$MG;&'=CA=c0qqcXS!!,N8o`#RU^O8aeO'[\d:]$d"n`VZ)Qd>Wlj_156W
%4,fPT1*r5+^9n3f=`-ucgLHniW+oS*IJ!'rL]=sYn%X8HAUa1Fq8otdS#\L*cEFDfQfgmK5^i1qlMTD[jn\T?r:Rl,e"83u0@0O1
%I/(P0(\fpFcl\n[kMO$VT%:&.r8=RRHhOrFl%cI&^0[?]nDBiiO0=nNoD.LO&,b[UfgifISY"Ft*n13s/mmI?0<RL1rO"Q]o^[%:
%hWFUXo(;!`EK2X;m-0l"fBnXg?e<&!/F\]BR:5m6a0V\iCT$@!a,PP:TAFOf2iHe`2qRf24.i-BZT8/%pt#sLBD(hF(<>%Q<]B1h
%Fe$cY^H=Wf=1C3h3+$!!9pjk;oql=]A]oOn0UZ9,2hbu/mcW]RopZ7$iHEtg+8;>EIN#t;D@3"bq;TlPM`:5Dk2E9j:F=9h)Z=g4
%Lpr?kg4u$Qr9!@8j6QM:M^^c`DnN(J4^U@e?="`2GF?%A?"(A6Q`$&02JTq)a^*e/^:ZI3S0'C*SfW=G_0KbXRpd^@L@F\3?I#_i
%?X,5_cV9u+'R%7BIZqD:nDl2<=#[$U6k3ojOkJMKB(NGc5:f2R^45>TG%6!ub&:fhQKJcsam*>T3PSm+:=tf^FAo+(q<I,5Gk(OO
%q8JibnUrjg^A3iH[.A.L29YUg*j>)rm)JM;iTfc=Fg\lRG$WtR-r?:\GQ:N(>J-DQZ<-/]Wn^pGqlT%!YKHh&WgqtIEYFaHYKC^G
%.ei4K?J"rDldbRknL/GlCasd;DQh7NFh,1<\(Ba8\fAf@r__p##PKn93Ks/I8+`<c40ngRcEkJcMppj-jsR4%pT?#l.8g%j"RkCS
%mHs38jKlg$b;kMoP)e!Mhpf;FT&/8s;XL^<r:g$3e^\\hrp9X;D7A:_iOGFPiJ8j#A;O7I0]eigg#,4Zm<WS3pKG7VFg\`.bAGnj
%]D`8bD's8t"NUAhc/l#%n`'B7r,dgAC#")7a6aR/I#(Z_?Ce5Os7Z&Rqt75Aqt]Qb3E!IP9DGunEHSNGroW@WHh21HK+0hj-Ch>%
%l^QB!jlaB`XNhXF;l4^7.iXu9o_BN1cEFD6mkhfQPoWjaWZG=CkM\;pf7ZTgf*9c61Mn%7DPB)rP@cOTXl#q5na1(:IXO&t_Y)OT
%2iQpI<KHp'h+=='dCBB,^SG'e'>1*^k$<?9gV#DTVXqHiQXec0^]Z[[a!kZe`sj)l#uB<:pDH4cF7@pIL\pd[1^CA;1@^ECarK4!
%jtOPT?GAL)>Yf>fn'oPUfUV'lnBu7RgN^<BrcZ#g=$tb-Nk;7n^Per_?1-Go2tX/ijm*)OjA&</dkBG8glM1jMLC`850E%`2Ya2k
%fJo8*Bj5I'2!-O315-$Ug&=gF_q"&Eg#Z]5Y6f*Y`u`93SkM\l^RUoIDl3"5Bt1.e4^"B%V`811:sXM?Tk4u#YVSJr.JrWso8iVm
%Dlt]GhQ0IRY:$u\>H!;Cg"=l^Z,aYmhGXd4[a&I1]`'$Bk:so<5)/Ad_;DO[pNm!F)Xm!Dmr0!-Ui"cXM_QB>GG!^;F5(@%^Rlqa
%;agO(c0g'A7=3^ULM+J7G3.]9EI`Z<@RGJ(2Dt5<ZUksoiYe;/1U]NXioPi'[6*/Y_IVMW>A[m`hbA(5*57i5T.`s302<>(dqhL_
%^Tsj7I6,1Tq!RacrKRi,2P2S)/l(TMMmLCuoiLaCSU>I4RJ^]@l^qe]c\M6/s#EO1QA/Vg7(3&:3h+ah-A3#uKXUAjJk^*+hP^k`
%%)+A9G6gdH?bPj*D)Zs6ZkqJGeYhJ3mNgZ0"@L`-h"h>@H0jK=':.R&2<?PrD/LHA=6C65E:`,MS$STnpjN&(oSkdeXl2I[X>e0c
%M5D_63,5q%WP"Z:%/+F]H9*X(noSr:#o!$oA.!8e[G'+e-G2SAm?&Lj)TVmI"WFl-e0O4T5L4hMY[@&P\t38(I'fj6VP\IG5S\IZ
%QCXNsYEqIJg+@0Q`<+MhbLP8[k((]72365Jq-lN2H00@#HMl<.8e+8@FJG;Dr-WcJl1+];q\m9q!+n=6qacsR:sb4E;^BMMam=o\
%@YZ1*->gZ/?]6Ef=Sko/T%cFCjZTTWO1B#`nRIGFR5119H$XWr(1i)2\Ke@-O5_=RF>L?i(?P<G`M-%obWZeR+,f\[]Jbg+(<-1X
%@SnI,O_oT=*`Xc6nRIGFR5119Of3Ie(1kp#D#74^XKa1oO!tiUb%,\Wf)M=JRU(lORC&=L^bn$\Qb*]u2^uUZ^D"3a:9cl"nQn_j
%aUpWbr5)7EI.8(`_S#Z7/O[5GISI*Bm?)iU%TrF2J?_&U=PjR!B$])cKs/HY?^n8&HbQrOCO<e('7B3=b=^HGCQD+n>JR-(\_<XU
%rOKJm?<DPR_V1T^mCCrCR]H*&Tbe[;Df=Bn9NZmrf-S%-%`&$#HM;3>p=Eup''ugLrYgdA9GhAM68Tl\qR]<"M-\k18Rm71JlS'>
%I_5MhEVf(er7;`(aEcRLZb/Cb=hIq0hd<F)'FAoeQsY>$$(%B%];_phA%Fc^T+,;A>V=<&pOZ'))Q&F\Z8"E@lLN<.[7>>LMqdV2
%?/EK#XtB\^jl&f0<[<pSn;3S/`""R:l@0>NqL>-eJ(O`#8c?QnrT(J):'5bX`0Y<SN?2.q^HY!2h+W4aUdF*''?!+P3e,.'rXGhs
%O3HcBnU,182g]2hdIns0YKeb$=&fe2k2nikol'E-9eq;fRGCVYJI-Lo+/^*_+#eGY-5\:`][*K4RY0Mc3S_)FUH+\NMZ4@PE*kTU
%BF\p4$M<HNqT[^QH4&uoWRp[rR.--KP*7bjSU)O<'DUR^GU.L\&b1m.]/.8gqb4c<s**r3h+n"=#(Qrfm4@`)^O-"L`hp'9s5#o$
%^&N<Fs*`LgoGIPAn%04Pk+kN:!8HIrM3?rVkI[Q+P:a9Dm!ZTpTC:Y"qp'fK">OfilIF/0ic'$Hhu3-qBC+2.2KdZ$?(@LhIXZO!
%Vp!\1Y%rZB@fYGW0Z3Q:CeP>2ar-dH7'[oBhO)eHJX,+t^8`sHe7jo3D`R:@p6V)KpEP!K-I6@D+kp5Bp(jsIKl"WLr(+ue:(iQ[
%B!T+<Ci:ZtGP.1r?=,<#kFY^&EUcVKLmP;HTDZ'$SM%'0\QkYPZFZQuhs8nNgWqbY\MM'j\N$^`-JFs#[MsS$nq9$Js0Xu$\\>7,
%jG7)4b70qT5$Oa)iX"DHNQ.iC7Z,1t5H6ejlmjl<bSHJWnR8JX%p'R*j/R-*^:2=;m6,SSo?VosW2f206gX3DCi"\:hA$pq4'7qi
%Iq<PCfc+8kL6oU4AT)hH)d`5mQbDA>_.OS./7a!6.h(-=p4encej/taQZk0sD!ptB4E3Ph@mG@c$I;IOO<,Fh`&eh_[besnfJ70u
%]?+`MS8#IK-Dl;5m(k$W,*$X._'Z&G_]EW'UMn;%.=\Va&VJj<5+XC1^R[%H[C>THa":oGqo<\<k-466iuX%kM]^"(%!_*q`HTgb
%GNNbt,;;85"K$Cqf0/uY*dqa$a7N/[;tU"4r+,Kl^.?LYbK?H-3jm;Vh\qVbkL8*3'T,#`O,&`>It$)+d@)hG$.W(]d<8lXXlj#k
%=0JbBf5MZ](FKl!nuggEDfC_d7NLErm-`n5#.AA]*c&%I]nZ7E1c46I^H?m1h^kWn%V`h?]m,#6L%E*5$(EhAaP*;GAc.dVp[drd
%;T']eg[6)M,._\hEc6,[4kT<MZX^qe*FjkHR[potj@<UuQnjH1*FikBh-IYaHTT7(Nj3F_ZaXH2m2.ooa7s^(rh,rjcR2/C4a-ej
%pid3rfihL?o:*()Nj%V1:!1`J)fKIhkH!dtbNn3cX>V;g'A@lL4In=<;<pqNma^F3Y4(W,X6#T0H2?BM1XkbN'-I-_!d`29q:4J_
%bJjLl=e$R0d<aBtDea11'.d9JK<d=F168!n5@U:ZiQ6`k+P3YCr+*3,mf+]oOrb@Xcm+)YRdqfm&Vf_$a7]d+)j6t&?*;JMn-<d<
%WL:D;XJF)YJ)1>ek^==t^;%4+H#m/7enuB0+!(4",dD[M/ICkXoOO/_g363\g)EX+4t($q#CPp/h07#-D0reEUiX!iiEfH[ZMhUG
%9b;Si?gdiaaKdWGhICJ]kIGG`.K9/e3I:E.n\aCp`5?IU^8RU90"5,tgpC"gfB+u4>P?e+?CT\bF*hbAI3O#Tme>8o-:j8[?(7=6
%6Eo)([Rls8P^ugJ:>oNMgT,CBF`+D.mFAb\3qnaCHZa5he@>\Q(_jPQ-Z;Kh\nO73r@6WQX]?gQ0BZ9*ouF5]4gkD#'/Y>)+N*>?
%/g_plmmn>+S]@#Jj(%Ls-$Bi$@Y9kk4O!-c!Q`oPD=b+AE`<>AD_FoLa$5#.,LYjdI_<>mol$$FKicm@Sk_"dEk>&:]8?3pGNKr@
%SBn?CUG(Q`mGojFFOn^9-gNKNUH;:6k>=kW<s\GCppbS'UT^$)AK).]k?-&WMO(LGND1G'TAN>bfg"T8i!411Nr9+4^Ta^59s1_n
%r-1CsN#T1]e>subP$HgJ^7$,sVG:p^I':?b>LSsE`cYqNV<N\J+1]3L:4S(&SCUILc,3iANNl#5JXt$b[62'hjCH])S!jjO4WD2t
%H!fR[B1nI$Ni%)gs8"naJkY*YTD"h?jrV.IZ^2*/=u(?#6FJs#*DF:BPaR%#bJiao0hFsJrKStc,%RqHTEO-Nb$HLM$UsM].,)j4
%^\^9fo,Z\%U$0mlnDCKWr0@^"mkIR_qfc])EYWcPfKJ1:s)H3WqJh/.CW[XboBVJ"i3unJr:.KZUH+_/hM:t.DFS\dS"%=nEd@WG
%CbZ7MJ#?Vo`tl0Hh*A[Pn)N['qV1i:?57M\3,UHLhER%T0o'Uq*2f='rStE\%!_*q`HTgbpM]*[^Q#j=6/ECsgfC-3rU@\[foPkg
%MOcjAO/iEX^=M$[P3A*(6P;OoK\6UHHZiM'gMpUF1E6*RGPt/`&+:J:Es`#3L:_CA\,PVQS(I'TJ@FkJ$iGAMp=3A6dWV!N?olV8
%DqhA\AeU4ui-VO:+7DE=DNf9Xk:n_%*WnsQ_#uK8lVTFoT9X+8e+r,:b(ng6mGD?6M+8@dpC;f/UV&ZMi$8>)!_hnV7u7G_gHbu2
%[PqE?K?TSF\iV?:pDYt5RrHtsdEW-LO6I[:ZhD;;`T7oZb73/i[V^feCk?TfHN*JWnXibIO/(9qg2.hJmr,Yh,WGPYk5>"dSR`s@
%dVP<<O4iq@ZbPtk0f+/g[S*Obfg^T]:rS!MkO1(ek?"ja<)VAc1]QZ4+7CPRD8"Hpc8d"/@JHKuD,uhVRm-8o*=R5jo^m7/iV_9u
%\du&n59Z?]Ba!m,"R.S3IVFNQT:_`h0dNOu+MIPrFoH7F"Yk`AR/UplH?nBIjhhVC^6!g5O3`;=Hau0@Vq92dp$2J8%u8i9++>of
%Ie``V%rOT/i;^KA3IV0sDrAAUpudE>iR<;+J,N0>rB)mRm&Sf(s*L-(e.-s&%fTR[lQ?sQT9N6j/G[--cA:QFdh.%dV>le('5NC(
%T<RGH`"#4"\rp]]e.b)X042Xnk".&p:$Td\iQ3d@)?3J1aBpic4roUffo_$CQ!mSh4;@&;[#^f*_bYD_8,B2([J%P&)QcR/r[V*P
%chL#0f<an/IH%o]pdJ-]kn9"d2BK7D:!7WOgHMIm8IW_h1jDm],Q*5<mB]Io5O#Q=;lQ;j2s^A4D1UZ<LYX;Ho`abS1)p3Rc5+$Q
%Y'lV\QBeH,IJ+;6j@B50LC8,XH[Rn==]Rh5Q9WBQGu3F`RP%S,fkX^K!t20%B=+.bQN)^rqGUMnP>/Ara7k&Kg"kP;P60XY%=RrO
%?ClXopd(;W:NGZ:c2)1Fh6gL_:U73KI9PN]>FT.n=2p9'bkgJZEBrRj*Ste/`eSEu;h$]$`u?YOGPuasrRmD%5O(FTLL^;PoIG68
%ru$Aim^F8NfZhKaR]/M3,]<!Ff'=Kij'0jtrYA1VF@b[7q9+]mi*MI5MSHe8_4^@6pMG>O(RO<8F*2d,]t?"JGnFr'q6"c2X6WFN
%NH?cN/Cpf_RE*uErGF>SV1:Asj/@V$r,bMDDY:^<qrRD0IkQ94:?lWhCpc;EO6IYVqnM#>:KVl:b6rQo?GOtgki:>,s4'><r7Kft
%r_uJPjU+W)Xh?tYr:[op8lK)h]%G:m);VOjR>t6#GC=?VR+f=:Z[J"qilH+_r;Cf3Kd'$U5O5#/cg=hMT7!`pQk/XMdq-CY[[p6e
%/^g=6l:P1YZ\>%=NqVjY5J-sM[gr18B]s&>f650:mEGFinP6aYoD0rn?>&)NdEX.Q]ONVHG?[k\iLQkk$u;K[h4KJ1drk+lqns8F
%dYO+T733%mT!`"oX:;O+.[<P[/<mM)Gfr[Jo"s+rLET<Gh&F!"a71[,qjYq"qrY#Ip)b<aWADdO`Hir)phY#-n;h)g4Om54NcB%-
%O#Ws%n+ap6F'LCp)c3%EdO_#)5s9-oiRb3>5JhF=6#=7&5h]t]rd6H84FXW^eBR@/$g-be\kXE#5V,]Y9Xtt'@sh1[o6<[YPFOC!
%.a^J[,"nB`G'0F<kmHQ#`Y:4HLZ2+])1CZ)4)SM+eLsPaGkG6)ac1dG51B8[\@QiCpo^sNr)f&C1lH!bm_5"WA'N4OoqY)N+0,J(
%/%9Tm2kLqZ_CV.%8<XPgmq_"j<Fhi35H'@H$@KRi'TA]F&8n.IZFeHSa:pCVqXs.M]>a=*nt_;-%bJ'2h)`-&T76T[T&KFI<gRG3
%*`#;2T%0%TbJfB8^FV&'TUnO8U_dknitDeNo>A];`O$.,jt.&JWt=CfUL6F/GjU%iFnNVe-YKYP'Y6n4TrrF2K1oQ.<0n719o,*l
%(77)p>tS-#E&ai4B9I`W#C3I]J1l3mBB/$2Lc1p9S\gR6V^+ZT'TcGC@H=a$F;kS7@jodX$oS[%=A-Q6^JKtH&7[ltcLK!@K3!+)
%i/%%e^jPdFo:^E'3tpku<98Mc[[p6"I4pMrbJCPqGt)<Bp%>2B.5iQs,SLAP`$%TqQ$mo:XlH<AH_\e(QGH%b7q]&i8i/.GIeQ2F
%)Lm0+oj>c1FVDG**-0u'FYo4oJJS]C^PGA@S<\(oQ2t6F[s.>Q>.LefOgAG8([@\KfpD6&\UD=)Vt#Z6na$5lX8Z^:>7X5sT&7,m
%k4X?bFXrYc(*Oc5R+>g1PU>'=jqD,YWfQW\.U/,WZ$KSZ4[PeMq_ZfdB&oZ)S]?^c:Q"ZdXp8Y);b-$2JB,FQEZ'NGaOHF=U=NhN
%>G$eJXfJf$D<Is[X.()>n"Su^2E;VNdD;r3?_VE92C5nY>I\[YQAKm+Eh9RX,,PfMHDl0L,fcAolX+5plUIf9L`Z*uH)"[DFXGi%
%DXBV#[HHJ]^XY;H-TqSN>:&F!GRV^D=X\b+"n+_<,fNh^nOVkh^^2>IqfLmLYmO/u%$'a6oDhPnM9.j6pk(B0+a'Dd0*kbq1@Jqa
%NZ#b8$a@A@j+C5krdq89UHdqh3J-/]TqaEM.Y\n?\m\:6n"D%:(pYOpa;]1CNor\\:p+$SOCq`$kEolt'7'N\i_Gb>cTr_KNB'VO
%E%?f.#@7k6Q+t^M`sh.NaG/)kjh$O=?98?Yo';9VST<l41$V31.Y/sVeH',@jHW`OrNns;`rLctM['ZX*3hJ1hfm6[.^4(q^HViF
%3]PWpPeJ1s^6S32`]%aKaH9hdjGbkdb!FJ0cE6R+iSBu!69#h?r]s3ihLBsbO[F7lmI-o,X=D'_fiK8QC"lYT\%nkc'C4-Q<>FeA
%2`Z*S"&t<P&@eu&oYT=.P&3Ko]g9c]%TZo*X6Kb.qo&@4=5*G\8-ROI99"LiC1f8rk!=@34VZT;*%RZQG[YGP^P6uEAQ):P=X]Ci
%a8gfr>\fipKAt]FO_CR4lG/HpY"u!42E^a_53)^6OrgcP*X3<p8ta1G/.+M7F_6ob"BAoZK'1V01(6)$N;Z"#G-nii[fYF(`Z2S)
%=+66Y;sK0k#oWS`ojeiFW)d&QeSDZ+3,Cf=HLZ65nG\9XIjd<tj-#MaQ<56&;#$W8@!JGebkdp\rbOn#5s<-Bb8b#2:@:J)]_3L[
%Id(SPE`l[2:Kcm]g@;8jf+"rP*.XH:\!i0'K*BrNQuV/dY,!$H%BQ]\*EW[c[F"X#5s)%CReT2MTaYf#5d]+(NOHQ6Z#BqJEf.6S
%!CRpqTcWV=E.O4Epj-6Km`nWo$qu&0+t+%GbN_A1#$K"$F>\GFV2D`!FcHPZIY?+Oh`;m8GFtA"a^Q#FSl5&cFR[Sl.0)B/Ss+JZ
%D[BSRAtN5QiXb\QcB5p&leq(L"@;?"BJ/:O&.<28kFaJXaOb,k25>2!S!>X,\dS/13dp\d/Zi3.+^tXQK.^I:,gSI0duDV(>)6E0
%_,95?X"I<r"f*2tU+]YTZUgOiV76Co#-p/&\%$R.Q!!@nnBulb=s(F_+0&GN-IA1L=NUn>n\>Y(O#k>(&V^FP20IKqB%F/5+\,.9
%A!Jp&OfGR-IE(S-FWd%$S\+KoV*9-(ii_1@[ku^)TdAt_rp6u55O7VB-6MJD%b&)s6Sg"tZX\e$\N)mB?+lY5/7rPYJ+#7+]4R")
%HT-GP?bofFp^XGsIG50TXNonP+tlB2&rp""+]Mb+Xd$l!]:Vc-%BZoe5HHa9r"9X#n1<bSo,eFV4V%7mC7b?L'bJ2[jG0aQLES!N
%!_L&4><e3=:sZOhVS*E@*Y_[*H]05)JO\kM=]dr@(_XRmal3\3]<tB;3KI'^,'ppQR2b<oP.^QW?m:JB8;rha*m5*WnIKl$"s%XS
%-ISA`'mNStK-P_^rMce:9+U[uJh7^E6[U0Cg#Vn=ElDkJ!o:1T,T_m*]'ch/CHN036"6ejL0;-L4u96o8!+6nomoc(=hAJs4AYV=
%<cu:&gL?`F[$:r.\RToU8e+P(/5TQtg_3ICepfH[MS5%BH!brGh^i_cU>&(#2lP5(M2#>S\Gjls[mN'Z$<8.J+3:TjeI9mCWgG.9
%Z`<nQSt0SB/;aBVdCJH\br>r+&*k^pUZY07dRX/b[<da$e>#=&o!'\BU5?R$@iZ1u>!7/?\8,(rlD,r6Wkr$B?KGRg5`@Ll*/2=4
%eRhWolJ\eQ.$M-^_F%G/Z3TJ$7/X[2>*Z<Q+8BTNU*cBLjK?8fB:hos=Te7a?))p@?C,rU?!.q;*!#I2_E#okOqc"M?1?rcJJ^%1
%?-3j4$QO<0E^r5-:'ZPue@&\9.QMHP'rL82OMAg)WAk[(.JQm+cCk&c07q<&02*W7)qMiP5!R+>phX.pgW1+$f!N4ME>u^"?=hc9
%cdh`nCEK&i$+,L;]?hinY)&rKg+cQV8QQ$T]r<La)Xo4h/qMee>n:(>o%$Z_n9WdS@Jk)Xl9tp]$EOm./sBN$5]tDh,?@qa0_]m8
%**OaVZN5'5:.%8[P"4Bm8UdYZV.p0Vm4:fum[iln'LLb(<F)]s<OuSQnRnIgr`K=a@#2`<_,rk3?oN:4dHg+/4fOKf0Y&&*han$S
%'=%^EZlK#5dG;K#+G)rO.M@pa&r\qjL*k^fDXF,"M7P0p#@OG2lS[<i'>.?N^qPck]Z-m!,ZH+@>A1f#=hro$Ed,7hWush4Y<W;S
%6R4>MDuA-u;h#N-KZjI:Q04Oh!pFP;*e.OX-s0AZQ$7nL"05Tg+*EhQ'?n5O+W]F7L\1J_0@uh&0';p(8C9D^.c7=o(6lrB3%3IY
%ggDTZLVOa2^hQ=sWk5#__;/b>Xmu#,ht!g[\34tM@?^5QeK;toEn!tEE@$KilS_2HFbT#:8aOG!Tk.WtqtWTmDQ10b5?f&fW2"Sk
%J&m]'].*TYX$>sX=VC:!M"H`XlMF[:NhucbV+u:qEaPDFgg%%T\`*9GF69T[/X?"HL6U(o"&nCXYhc&;\*c4lm:`<.I`.='3b%S6
%NK;^DMLOlP4(<rg=]OCSJ(.QCDTT`k/V3)Qrq>aD:&XO!?N/:1pq!%fo]FJk?/Ai"R=-qWT>+];cG$hO=^6FRclZomf>IFKl1-]C
%.WNr+lR\[Rh!F%sam;)C83FTA[_D+9O7>0QnCFeulCRjNhtZ?3q<<N=pjR@,r8uS&WK4)=o(@=/^,`Bdo4IXN_`.21j44'LFtif&
%;?+/9I/<C"#qp)MMXdG?`XVdX2ta>Q^rG3%bf>N!qK+%c=F</nrr@Oo3l@U!UVbUOqbR3.'=haKER`g,Tik>%r\+6-0QkUSnb;:0
%_tg'7GP+03hb]$!!<:6WrZ6R$Rl^Il5Om\q:AjP7FS1AI_;bL/lWAVZ_(#"8M++Gj_peX6^A@XF5Ja\qd=3]s>.jY-o8dN[^TOK(
%d]D`Gn^Bgo4?[5u.HU9]\*>PJT$O@W(S!+2bb*Yfp$T"H^RcPIpqYLQc**GRU[MHjIU'Pa9,9a^IWNVjs14L(G:N[[.5g0HcL.#4
%m`6Lp"bMo0AflIUql&gR1Sa5r6Yb-;l*p9-lT=9P\2ljb=^KuEV71plB)BA)^30FT3W.oPnbGt=o5@C&2D-Ul>Es-l:C5e92u2K2
%(`NA9TBJX7<C)9;*bI$.Y`4/TUe8B5Q8=d*T&#8qHXNDhqE!rphI2]L\:ju_:BG<#Pt]F&TiPQOEaZ:Bq(E-[]P^_PKij90O".&.
%V&&'MhYXUkI>shh0$[8lSOIj^4oC&XeBO_1n^_F(msP,XiqN]^6\"/B`-&ffcUsheS6l5>ce4mCcRqs3BB(t0(0P?r4&F<Q`[$0d
%70Yakp<XM0<!!H>pK>s/hPt8ER^8+s`:>1K3?Z5B9YP#g&+fa<kGO5a1MJ&j^3l90J+V&n\Gu#YE><rt(TcKg%j-8im;`*>B5Kd-
%X7,`^*S!nTS(#&9\*$PhJ!X,4kj&0dR5J/cBqOKCdR%0.pq!'5h7[B54Rp`ua#@XhoBX`bf5lgBB#5Qsb"1aE\aT=brQ3Hco5T*K
%+4\X)oIKZI0fPBjc917(]_L^j3PTn1e,8e%P6Y%5CLd.WKCC]YR]Gu!SR8C`bO^oYm>$TDe@'KkT.d@^`\j0g>^c4YDT-/4=6C*h
%'%D*&X5b9<-^,l+9n1JVnaA-L>8-u8nm^<Z0>Yddl"3WBh2Q@P]/,/UrA:&s5hkZcj=np?S#bl*fbUg,pNf7-Fu9N8%GoISBVqEO
%5N:N^Ii.)?NulX-]#n*XIbo\J]`Xf&$>f$hB(&G6fU))n.DK":?b`"Ns0V#knEtp#Z[8o!"chNm/X_e3';kEno&TY]l@.c-EQbJO
%g;EN.YQ,%/qNf>qI;S`(kN/_D`b.f"=4c>7/mggOhh?]nrM?V.+cnVq@bEQA8T0@m;4k;!(rt=hH@AbGX5@>>jkh-'s*_a"P"B;h
%CFrUf*8"l#[[&BWh-A0ak3&pdk-#T-Dc[`6([H;Bg$)sc!f-M7]?pUd;=fX2g&1F;j_B6i1-:6EBJVHV<1P^FDtEp%D:c.UgG(LP
%_/+D)3h9V2AhUt7>3ESBRA&)F^fA(8?UAJNg$?iCam<d<YK;EFIC[^aHEcq_[L2bfpW)m*'<c;VCVMB*cWf0u^H=_d?EH#VX,E80
%SEI`<hnN]b)e;$+/s];a#BMf<qGA/#fu8mF8Z/A6qW7(mS*SVk]D:"Mij,[c2k`"=QsVBslT1WnS@6iT'DAb>bm,23X(h!=\%Xo5
%gtuEjXqm?g/S8CXS:,jl]UllCSh@3(E$Dm[ZqEFML\(,0k#]m`PX#$-=,W:(c.VHq76P6AD",soG1V0<iY5W]kB1c`%+hi2`++C*
%*14cJMlSeJb.*>bn+=6F^@KOnogM#*%t&)=4hk?0oX?Wt+9-f$H9"4gDK0Z;H?J+h^B=;8s7Z66cg^Jis5%Z]RQ\Er\>ZHI2>aR9
%bBc[nq.XhoEOf&_dl,b/(XMEHVW*F_9eu7pY4KNI_Z,*EF4e[hdGh(CkoDuNb[0Nde>mc(4C?=8d,-6qkp+9bI+!Xhs7kiF?eh0C
%b&74AiY!$'rq2<;Hrp@"oq9D6B3h?PCH!%;F:CUuc3n$FTDrrf=RTJJinBG3pLB$8)!:#5b?8,6q:0okA5-TZ^,Z'uoBSHh]"3gC
%00d(c5Mn&!B\T<4nba(ro;Hfhid9%KiMZ,`7W#68rVEFi'M8PdqXgfEQ)hMAS,26\OGgf8ZQsTe>o6WBND$o7#=$b(X\>R_pc0+C
%II"'VT.VcNpZZei97;Cuf/Y\DpZWM/jWW!8GCEfY<ZKY@J'+k\bKk'e\BN6"D&Hs/F3<&X`8FkKZa7g+%q/e"4Kn3Co,=5QGQZl#
%I0tb0]rDV76i<@]o"a\=6ecP1pMp+KIfA_U@![(:^2I)sgtV&gkaqO(K%^h&I/9IW*1i.M_\@8)I693unXA>uYc4P_Bp8Ogrm0lk
%PF'JYZT29BHT6K3ro3V(O&''`T3f3Won4"g&S1<HIl>(>s4Mbfp*asX&+gOjmpL/i*a2]%#+S73)ba@c)+PMK*;8/NJ)&A!lW6u.
%X(U-rK>"n`HZl%QE9sl6TiA$APq%19+)!<2VUOo2E.=./S#&H[PO0HoZA[_bOCm=^Q-R3XYGSrWqs*V:llOX'IWr9QrF<o@@\`Ab
%IS!l=Se$k%`oFJOhLJ#\mh&'r\%LJK3,T%]_rF7am6B5caN&/dDSP`I3!(D>]hWcaRq?jE9lem(J`?HD0(2<I3sO/L`*YEGpATE_
%kZJb%3MIn`A&lqT,C+3U."X0Y`?W.iQFl%/p.4I@Vd]3Y\liod\N7@67V@*[jNAViZ[3t5o0grb%AFB>]@]rMmpniKI/=5JmP_OF
%J2C&;.jE?+DaMLJCaW6@CttgikP-@V"bs0lAT`KDI=(eBm:>9:`]fR*GA5<kgM8ks4"H=Wcebp2RN:&<:X154UsC()TqKna=l(*T
%pa.d[30pK0llhmu&#\gTmq#fS6b*X!.O34P/AEpcitdp=WdXgDK3k@Re\1?9KqZ9C9([j0+&ik8o3c;PK/TL6b*"]IfgDXC])lTp
%qgnS0QE4>u'4hk9bIuG`cAlbOE=so!"&sX6BkVBhhV=8lF2UYn).KY\5]%-sL64$pMDFnXc&'\[KHjk%&T_aWoV7`aR70TDa#2*O
%!!7k867"3&3aduAeq:Zd.IT2WlpQ>Fe$\Rqc:W#!Df)E'SD,d+\$EL#`+Z1Y[$=;G+[%DqDsn+h5AmiO\D=7l)am;7PdKZQ@If%T
%2YG%![.O:^s*$D7BPiok>3mU]`ID9j(s7*&n]pRFiGgICLP^4mdG5\s!Z1^pk1-MLe#6iWaRSBOR&6[L%3IKNQC0LC@q&fo]n%[>
%)n4OiY.*4f#1*6sB7"cL):jjW4Ck(%5Zq.7,FCU=;6E*^p9&_0rTL1I[X\'`Iji(+_aR6)"E`u3$,6`3A2UGc:S>Ja`X]A[Q2T#-
%`q%:;hWiJB(:@=/^d6/(=mLq"NTW$3k1WdUg<K^,atPa)h>60dOHu#eAW3PSLf/F.n[7'><b:?Gh.*I$3KdO:np<UY_M;FoMkdHA
%9nPg^N\Jt#@C\t!"_H&"0uPF1ZUP!E3QhZF[]$pmonFIe1u"cmZF@T[_a/UhWK5ELl&N#4>`bUiBuJ>%+#ScNDk"@\GM=0.9)4@e
%^@th<k2FUP#BY+0ae`F5O#0Z[/07sN?:gIZTsjdleH3g(C+k%TD[uqW291S2nABmtcV?1Jc0<K9I&:5q4F#f//<S9dHhLf-GOF7O
%Qfd6(V9ZW\GODE_RnrL.>P$%)p23[@>^Lj,@:JN`\T8GLidW>rT2$Gp_suuhs.+SJ5Ble8o\[3#f07NP4*UYGq/b`%5!2WsEDQV:
%s.f#.NDAn)Ij!s1$iB_ljcoYHhP2/F^7]u$]6i"jX7tUI/o@>6R=+tlq_e6/nl>[3mdm"<q!%>PI_@`n2nnY;f*2.rEm^=-r;%B4
%3qp2^i$!R:n[Huihn"_'Nq0A1biIcqmPl>5))=F_p>P^pm5qql1&#7a3'TV^2h%^&]m;["^[/+a:1&L"KA'"TdA`&uJ"'_J>k<$[
%b?$;kh<6F+]FnPG[--V]B;k^,7rN^;ein=3eTA>!nA"r%;%remOULfp>"e(krp<todXRJXf@E*/HiDfU.r2>phgq[h&H?'[GkhXt
%oYT<@qEo8:"J5YYkqDL;#l&MN!oCUU^H_`lQrq)ns4s[#Lo`2Xc_:O_RH6BqBWSI-c;k1=AhRfmHX38kHZsbIP.ElqiAS0[p%AoP
%aW1j^KEp8h7M'-mTC%Rjb9EGIk5W'IHa^Mp[bC^cd5%,jmiV1JLO>@6)=fR"br3QF<'HeBrtM+!n0#&cO:[:&TC)8//)t3Q3ejK+
%LW;L245Gn0SZUGqSc<LrpWl/!1SfZoeMLJWSka!:1X!E#!HiJ1[,0E`&%oRqM2R]*`6jBl&%eU&PHJ.%LA.ar[^8jAOZ2A9(AF,=
%GE6O]'AuC(l.Wj-%)YTKJ0)D.c0]EsR);$0H>3&qlcmu[PddI-%GK$gjh91V\k8!YMt[LVK@nNKOoK7!DNF-;rslnOhB'M!?fUTI
%qW8I)]T5:scs7QfEb"<l]\;P/l/2I7?)-FEFq.#cBt$TU[RX@C$1Ti]VsB.kh;"%JNF^O^@tY&h3nU>&Nu[MZU[IEg-9lK%O7\au
%GCRDbK(b"\7skNu8,+c4pqcYT)]\1hilGgrU8()Ep!-`(U!<Ou_sM@JL$K^uRS0ZRT"B?=]>p<p)dE(]2a%SGUNhb@JUW1k-Va+c
%lo?Gb`cRi,pmC3%6Z9gV`uog!6#DAteoYnMF"<mQ&Z@\J1[He`hS[C0s"81/DLL2EhX'XmWn5Xjm4J>mKQ.JbIW<MgRA8.9k1RbX
%+)Po!S;:4%kHo]gCAt9d%ia-`Bh0GRs6T*#b@u#Wj[\iophP>FH*BV??up1k\eF9@/Tdl(.f].2CW[X2T7&]q.7lMLh:qb2I'BjQ
%a(iTNgPcI7)('7Nn23Nncsp[u86i)^H"u)hU`)AJmLn-I`AI4>':c%FJ!d"4Qi2\`.CZ&n]<(_^c7VB,02L^BFi9Rfj-+P;)<KpC
%<QC]NCpD)Hkp3?fGg;EnT&`-Hk_hZJU`-N>RIO%"WZJqa54rK"W7A&A_e(0fLE:!1O!,_XT5Sep_<DH[W*^Tp!MXbG%pjc;IbXqZ
%-QqXAd:8u_;^WlP$tI2C$GPid.Dp75dcK+<ZC#uDr"oSh*;?t0Bi(T70)r`+.%MuXV?[sp&ZZi8*&gihM6DbDFc1)HfPU4Q;?)+c
%qk/1e-p7S<18Hdn:\S2lF!R`QlGD4mC@$-qI(?r'gYW4>V%"W:a#gdDHm1#J1#R<3he7L^*LD?"WNs5c`$rN6AVZQ4rI-E)LHAj4
%T#O"VhG^rseI93o%l8%d]2()p+.ZNFIHB&NRi;mgjelV;PC*&42TF@XcTRd_GN7tRREaj=r^H_Lrg^YU55FL#S]CTppqgrN*`)2E
%G2<(dI-`KmXY1C-rp87ioc(lha]fiKf-_q`m-[[;5E[s6::diPDQdmLn6gS@rptic$,-1UB(P_emVJeBAURsfKpB,(TUVLe2"'5V
%4.-!C@9UDb].p_$Z`l[ei8qepkT,$/E.1hp>akZG]7Oj9ZYROt0<MonFCEG-IfB>UWPt:Nl_?tpgPp]MSG5#B@<-b1ZSadjj3loa
%eU&f^1^rD[r\K]"m+R4@2r0ti]bt1HhDgnUE:60s,G-X8G/_>mabdW2Q=<?@l2@$2lQ:?7Vp!t1+07Ra2a-<<?CZ=%G%!I-im%&:
%+Uo+!?6/FYFj9NY1E62>Xbj#MlLO02P8g,a-YKTpR\*_G]RK&:_[@Em]%uIdph=ekDJ`f,%P<R-bAM7iiofjVNt5<hH^F/,);?,/
%m;Qh!jlPr5^pV9g%lY13@rK'[0KHPs]s9MAqsgeXDX4ddS'KjF?W0mMh$7E]gUO2nm*7fMInc;O='".?.TXPJB5T?N-B#pRYE%F@
%SaO%$>B(*j(G8G-4IEX_1j:/]A/^kanD7K]j(<HuN_[5nGs<pr>kl,5hV#V29=eW:?bj+_[nHGj2GeO/qV*khQ3d-Ub!I78>^/AX
%F*Zd9r414!HPjc^%j/=uDF25T?d:m_r6+;pq2+am`7!G9fRDu&gum=ZHn-9M"huKUn(a>C+_U8HhbG1Dh4D-ao(C*phT]fTeDJ_h
%;[u0sVB8i;peXaP>eU(;X]@<sbdluk:Q02N9R!mmB>8Vf(2(CBcE>uNoUTipe+UtckMb*j2m9*Mc:gHl?$j-XIId8jnT>a^>/+A@
%'G:2eY.U8$,Xu-:lSha<k@_O^I@AjeC2_s4gUaaU5I5N=&.\/VG4*>l:-G8"q0hSVeC0-;O61)YXZVKn.<-Ah!(c$U\+>">md'!'
%ECkAU?_4p<G]8+Hn_q=Ci8XTpRpi&HN&Q+Hb-#(!$$nXb9Ik2Q<\CMtcP(M8Mtu6W(":";kDB";U64b#7]1IIa8Z$P+ueE7E\ep8
%gtgUIA3=9X3N=,Qgme04:b^^!N:,R!4F_M@;.lnr=F;L"?2QYoB@=_S4a[iBkHA4K]f*3*?[S=^?0KMaoLe<)m1(qAQZFZ"e4D],
%>F0&D(Tu#aDp7U\>MW@6VVF8De@uO?me:$H3^8+4DX>B0d'bObgZg"APqP=-)'rm9-d5==]`$D>?Z)=?]D'mYdG^LWKtO<*&!G8T
%Zh\C_HFN$Lbr[q3kMBjIPc:!=lftXtccm@eD9&6^B&:uKpKuh9;.jfrhRu,OojD?H]!qWaB52GHbsgpXd:h(HmbEem-Z]4WR!V'j
%@Vt-4IJ2XjZlNH)8?DF:m+Ra%QKGfc&R",KlSnQ2N_Uf]qQQp\-eE:O!PeXsqaGES9te-fh/Ba64S<1RIF!E1ND2*NX5sD;W>k1d
%/1.7/?/=>,T=?8OAuu!fMsJPH>"H)4XBQBG%d1"Ork;?)T"_skTW]EHFdh7RbCKlsoB<:]qeO-b],/\u3:+>NHMRBq9_rOlqE-cX
%J#5S-5//FnY]+kk]K?$Jp%!'!f72o%i+W>IRb[4h?]J?V+4Qcu-gj0hfllf2nqH)^_>D@6dFG?ZqIaBNGU-=ei_L*Bh@B2,Rl^aW
%T$1VPI@@pd0R;./o];jKlSIXh?g4J(iE?(,I9qpF4,U`=c;V?e0Bf=;Za!):]UOYT-AY]J7m,#HCk!P[oW'VdITr47dtr._m'mk#
%":l/Ib$AI[f;;nE=R(mt`P^X*IOnK_mN6R[,%69'MlV,Q2uEO3_:&^*p$+1.o6r10-BEZLj(+"fM<>`h,"g`uGuFA,EN2J\L2$'V
%qu6TYB(YIY4cDLIYJ_5O277p`VaOMe,I(PQCEsfF*t1:lM5+*mP&9/8`1P1)dpF'/Ji7jlNZaB+[.3S>6GBUk?3]r=J)Fbhn.h;5
%a=&d+XW!1'n]CutXZGFF7U#i/l(^(CeOO[AfkHERIXe7M.f,'u^:=p'9tb,_Xc;O3Qa&[sU[?-uPDRV)%WYJ/Z+d*K6%^7JpT[-(
%=FUu#QVgqoqt3JL4Kd$.'J]0eU]j8anX7D\fBguW-XIE$'%_Hk\#)oFI;8<FU[@m!/$"SM%p5%+r!66U,X'`qk!)(Z4$J/^H3[o]
%=T(#C9+>:q,3^nih^4[B]NUr\r:juHY5@V`jXAk=*Q&jZ48QOPlQW)sI,2VUXa/scWQqZ-?+V%u_IjC^rDj<>`dOqu0_tRfeM+=L
%pu:,rUIX4>o-I+\>+KuE4o9?lji>%f:i:WD>G=.%-snRGT+nt7'4[ZtGP_>coDH#jFA[J"44h0NG]VTqOCQto;G;RCT3],oGJ@1h
%=FkdC(i%hOmHce31qVT*RK_MSE<-Q_q44pl[LI?J7al![4#\7rph^?OK*"KQ]Qn^ibKC300!%=/o($gQRnK^j<eNMg`PmaXj+dL%
%>CD.o^!>L5Zk'>mI7n>(RtoIoiRXs-]D=a9n_j:fH/lL9g[(\LH\Fr!p1=*rjSS8lcS']+?raa^GYbgb<970rVZ&[N;.oU==1;FE
%%MoWu05\PTp3l\H\$.jbo[P01HTJ$d7dHH^Fm"Q/]jpI&l5\TKmb.:-HoI^,lKc:E<*,^;hYVJ1Q-S(S$(*rgo[AePHb8IUKJ7^F
%5ABi'E5Wc/i_!Z<pSM9j-:d=lp$\XPipK`*q<D3Uf@e./X+[ZpqAA7CI/!$Fbf4Sa`bEGb5*[D_TgK4UJ.#&#HTXn:Q"OmD3[j$u
%2gh.p-?#NWs%q*j0tssD/$N"a)`MIm4[1[q>Gpc*c%#Y1rPJKfp*#Ho]G.f%Uot^RDnbtK]C9e9q6S1Uo%Mj#-Y]T9D_FgJJ+E.f
%Y2n[dQG0APk+0\Lqf_br=g>3cl.t*D]"6KPFEp"G7R-44Bpac5k9p#t2I>Y<a%LW%KNlFO>G#m9S13%+b_*"gVn:FPVtK"j+`=sH
%5M+PCpE-<MX[cmO*u=PDcK8*=Xj,[hgcPQ*rquG)2`.eB-+X*4=P5$@ojWCLe$X69=K@m\q!rEOEp<D`jme>XQ^]60_cJ2ZN)pOW
%3pr'R52<dL3DnKQh40tH':W#M\^B0RNj5riQWYT>c/uO"XD0iYn7/!5"NQmIM`Y]1S,8\@bn"=Q8ZA*S51A-F$*4/1^X(5g0JAKl
%'),uZosi,RnE6Bn$XA&UlsT,+>Hnh8o(Jh+/$ga1iC6Cj=3o?<rbaGPF8nQ@:1HBKmW>2>+BmNcDO^1Hc^.]HWpW*`3Sj#6&Cfsf
%D:V-hQoO5l=8p+mViR2$e+D8<9n&`6GdS/m)\r#X&%39-&Mh3*aIr4:0/qd*2DlH9hs^AuT1&Ik3YX!OoQ^+A;kD%,DF2UMc@(*:
%jV)>Z\%m@AY0D)ZMr1E(eaT)2iKB8u5oO*9R%1\`lLO:oXj-Uhk4P4heFW"Peu)h*Nm?\?>e9[G9n*g,Has1k"jHA'ZObnG>_`OS
%Jt!=TSp8pHID:%&ilh-n(G<In>pGS.p\_uLZOa6G]?2U!blq4_=MOKf-mP7s[<D*%7a%a!`9N9Z\^B_d/XL\6YME"'+"(E&4?09o
%?D).A5A(KBk&Di?2N+-2`o!qh.iu@<2j*s86n[5:++IR#)rJ=!r%[G^2l>_Mhql-)[^\dg1J5R?qQTSj[pcCF?[#;W\"<:N\[D;(
%g,HIPNB^R\[5iG@kFE_RBuJLo1]QFjf"q#0B_SoD2?U=.@@q)Rj,L"ogpM(gbrhD>ICG8&dbDh!\bDmtIt'aG4o%6>)cKg,LG6Ao
%%+5!%d]sB(3iJ+@]flDorkrVk_:/g4g;o<kcHWN*r4FhlH2aN]qUSH?[dQ?2Bd4n[)pmHjSaLB?]QR4I4WU/A1jNk_2cn2Oga91!
%mYuofE9PCmpL31*lrs13F7.lL_<!kFL9Gr*(.f>;pi^Cbj6:\/X[t:5(<+&f<_o?bFn\0k.X,c7eOCkDgXP$<PRB-HTDUOXp3[rK
%3c^3:htn5PB;Rkocd,:f^USd`[WjJ@DLS'iD_cJ6lf@BN#Ku]PZNo0*LbE*p5<6Hb\j#A&pHGi2ZXoLaH0mZ](X^[;NK^M&l@7&b
%-LUOJDiNUnp[1E*I"-A+D7*T*\E;R19`34n7_W3#I(ct5R!!ku5!5A&]N?&@*.RPP>Ges[5E"keSXs`!F8LAXi[J>_Mr\;V$a0,>
%DQJ<b>bZRFk8:c0oPjO'a8Pti)dhaj-E^XeoSP'fmJ#kIVg$?-d6'Whip>D]<hO>eX2OZ&-.:`fDpGL;ma6He=PLuYie.1?TC6'S
%5PJi3n&!+tfsRBa:(,k^P,%?pn2U&PIV.uMWfL#&^OaD_@(qW#fDNTH?T/@,^2;*N]5q\OoT!=SjgP'_h1!oCXnf".<gI\*r=.QA
%c0X`67pI;L8*`6Goh;0a?bPUHhQ8)%QL90lH7Gd,h8\o4S".!pHQbV<V056kXk_,3=mY$jBCEL]F&Q];d;uN#d4u->ii.BsQ]%t4
%lMURsp0?3ce'MTqCG#=m1?Dh+Su7!]qeU"[C@19u_[uM`q4mer8kN*g55oe+O_e=9I-sBm[R'k+DiQjYQ/0/6T]<\p4]TS8o?W9#
%4r8:r[sM_1o)A(OZLNnp.!ddLe%N5S4aqi2<K>J]&)TOo&4C!k_fX4!?K@SFH4[K/R;gag_)bn]O0).C<GTir'p%fj/#I[,h9UND
%r/B&Z;>t.p9/1E4fC)Y)2Z@-b\%ISWN=1!t.AgG</0)mjGkuib<1prG<mts-)]n/4>kbo05W>6THh2=X`Vk5pjSSll$[eMZ[C15R
%1>VB5g0-p[d0^p.s.8QGL1?SoMT2cp\^@<V7L=hla+h"6o9dh`UPgu$I&Cgp)Q"F$Bl]q,Ik=aKqg3[8oDum5r]]pa/pq731O<^6
%?)SVe==7-lqs*cgDfLDTEc^ihpdEPQb?"5,H8dE19\Z%YDq=*Kr4W%24J\%_?[Xp-H:GR$g:t$VIX-iPrSh!EoUYGTXBmZ;^=uq1
%ZHbfIBZVM&ZeouQQg^+N\5V0d4'^V-B>cm`B5_Bh<,]uS3O!OO(Z?Yhj"KTY-eF4-?QLi&*)FS?DoR_Bg_(YA%4t.L;C3G\]t?'k
%HaA0L].j`CkZmlOr21u.ei=7@dIn.iaf"OVC&Mm[`P-foiO*lRBC=)^]O*[[/(j[>M<F0am%[&akGrgirm.78bqEFqS%SFQ'ksK3
%q.LpiI.%]sJ+nr@nCm<[Mk4'dYiOn)PP`tgS=b6%:_EA-R,2]?Y,)fIZZg<We)<4/FtYMmgn%e1pADjg_r!B>SaY1nkaHVlqu"B[
%2\BW?X"$#-ZDYXip=#Smg#^W9POA?"4!W*G50UO'.m"D@eTWZq*31Zcj!uY9`GrG9rRl:29J#%IoBsj]mENIhD?#MgSp^HV3</fl
%i<DD(Y41OeD#;5Hk0:t+]\ppPEC\StN\/ZH^UcJ6rFLDlicC)35KYRDMOE?kUYj\!f7#h-*59*S/FN=BrRXGO92gbPggZ8Wn87a^
%!\Jk:WF=olVEZ_rbh=ZBVi$<Y]9sh-nMP`+@WD,<k0<>4NOOtGVu2MZkjS'h<l:iDdZ]^.I^qa9op[0HCUuV#o[/*"]<8mP-=gU]
%cd.fV=FG[7H"lFlY.-FR^0[8#$Tji!+5^nI,2P-L[\`q8qs*GCYDLp`bl;iskO[:8DXGYjm56]uptE,M\,G7\-stX(c.L?6(O/&l
%KrFk-]=G2UIXPBQWNhBb2F$&#T3@c@^M^eN>/#?QDU;JLp,+"^"'3*?^Q!=+Ac1<MfajQj04a-EFi;m]P!N;Boq@u'CeV!jbs(@9
%/G5tCKm`mSL&%d1VEOY8ft/1b)%%8tFBe9k:#&Ujgm>u?;mXTcd-mW$gg=J_GA0`r(YJZ&2ec9n2!m*ZF3C2jhO*$2Hg]SbkGo[M
%%`N@m&'q?mo`WI`5CL3;i9C1VG5TUc0=71uq4p(b_'QhcY^h9AqVO.KiO@UfDoXMY30DgU$(j]M*fgLdIA8ab/1p;9Fmn+`Y$PDj
%]bk)#]tYE8QZ/.c\_W$8^[lG[EMIl2=Z1p2E\G'VcHj%5r,gf^ASXWZQcm.I5!J<RD!q!tVZrl6#=Ia]\kRUlIP.=!&E3imT<)'*
%qqoFD:jJUS(Ij)M,:M>QN#4er^7[mAeBF\70:on(14*kK@@Nek>:R6/TCf/hZQnKTN=R4JMGNl`X"*FA.\N4FfI\U7a')Rc@0@Ar
%'<2<beh.?H(64<>"^e3Y+1Rcm&(WAn%,ir6q%fF=*uADJWeL*>qPWW)CIbQ)=?tss^UuQj:A]4=]Y30+*?Up,g"TihHa15hH+6(&
%/kW=n#M[!HpGVVp0R_hu4\>JP4DMpWAR?9C?fMCGS&g$Jr,<OIi<L_O,YkL&`5rc=Iqjq:FH4Ud:\?T[T*J$MRGRhp/`iD=IV9AZ
%-hlP3^D"X1Fpe9DPC463ZtVbU>4m4tpU<VcUAo%1M-IUuii%l=i?8-^Vm]6g[/7>?IlIA@JBFT*bNRs=o%rq<j`'&N\8Ml18,&@Z
%=*goo:Dug?)f5fSghu1g;ED"LYrQTbmpg1f'aBWA"Y#C?c=V_sj[r=-W,T1TQ#PYc"Ha^ALf'3>/OW*U3?kg[3lXb,U_XsqXW.),
%g,eCYed'BH&DRRT,),S.<@H+OFXJRU:^ZYQL:S3>$X/O3M$HXfL>qT1Q?k)55t*KA;eSh.^jRYrGXi9q^(W,@Uo1rj@h\q0GU7&4
%V8EQrkb&XOaI"fkf&0#VQGh#O5u]!hJqh*Cg46M.?\[^FS<P7U51&"mY(]ms+U^B[L6sU"l%Q3*+:GbmS\A.X-WoSpr,\PTqAqkg
%*W%#-Q[`s@d<@PmrNu)uUJR]5NauCj'(;YPW1mt%e+eJ4.GDlcP^g+q6l@%MV5:&;+LH#D_9*=#=@Hom*FT'!(nobo>8:"+!<UDO
%TG-WP_5RW@30\gOMQBgE3NO2@H_,eBmO3"u8DYXe/elRH'8SitVjX4RC<HP0(>_29\N\X2D=6gJ(QN24F5F$(a#i`ngGbpsaFnfg
%U0WF6,t#U?>H^c0g-3tuS#`K/REb?EFtXAlpC?b[h?t!:GkC2Gf@>bgK2AGQku'=\>qJh:cME498XOc!q!;,X@JR[Vb<+QQcZOE%
%dfE.3(f2?090Br8L?kDQP+PCB6NMui`Kg4$I:QnMZAOIe3FZc6-HJq9_W+Hb,<LT.%(NM0BOUj1O._1Qb_+00JrYYQ%a[J*08Rf3
%)&kUPWV`@*&mP%W;R]DR@48r4d#g#0g70=Pm-)5UAVllh1Ni>t+i-MCOSGl1-ud,[8L`]K,!?]FW;*@]4ESd-H[N&(%<A=J\(ZjI
%]f,FnBn5rO<ig>1.hlb<n:Pbt8EPWG$_&A>P'jNBKF/hkWXo4/&Mm:a;lE#Q@7ao6kgD;!L^]`K;20':#_CK?&::e:5ba3j('KaE
%m$!AD_KJ=t,c/VUN3*s038;9DH`(TWF<b4KAi_hpmSJ)&'7kh;m5UOhk!j]+4C,;uG7rd;gEB05/uLk;9l-FU`#f)29=QU-,#12/
%e=kYK90tiI_*TstO(1:t!t],hKW55E(0*iFo#T$.Nm&L2m3/D:r+Y6:89]jWV'C-Fq0_7td9gAb8,gplaP283Y4=k%DO@!il050"
%?%kq#gcWod>)8;K+X>5-Ya9B5f`Gn$BT]HoXso^.#!G:<e*f'>,ACjsP_6D"O=EXb*V;l`P1N)7@iF'a,c!b*;Hh!jVo)7JM8^X7
%N?6Q"p=C$gA;3:U"U(er%@mK9.&&%'47fEC:#_INW#8!tYokf\g/uBEqLG6=isRoE1af+S3MJKoh$u9=<`$J#6L)Fc;rA?3+%%;,
%NI["=,Uo_J"<t:Jk]jh\eED".pbD#MFCr=>KXVtbrb,L98gN8FPi$8"0utIeo[?[CN+&/M:a2VU[AC,S:jb-fXWcNR-M0r"RP@P\
%@?b^U"f%^:6OG06a+tpW"=?`5YR,Ek#qAK:<&@HcU':K,6'?mAE@&J`%-^u1ib@#_/%nL#6IIt5jG]&`G1^$uQ=/B[a,Wb"dGa*a
%'nMV-K`hS>B:rb1'<:;l">XeoYo'oc73!e#8CEfh,X>?05nG(CEs^oah[<$-#OliP%%V0(I%EQf*Ck`MW#*C?n7f^_#G=o@NFAUd
%X##7RrY86Uq,e2\/nFI6S^[@"o#W#rA;U!\P#)koTdpo;L*U-aQ-ed3&`r]U/Y`l^*AN"(GU+6(KCXgc:k6n]6'E]J0HD-=e5X?q
%6*1_*9%O]l%38(DJ;iSuBh?>.#]c5k&EB$P-S,O[[`j$NfS,,u\l!0,*S.D3[F4U$#9_4eXuf&aFSaROaQ^]=G1na:7$gns,_C!L
%EHk&qHgWN):OrYCM4%D?/f_EMD(P5AfrI?k.\OX;eK4mMkol=5onR+%!;jjf+'L<P-P1C&rtnCU>'SZKIqX=&X;8AGA!EbsLf9]C
%KJQDNg8=pbglN\a1]=4_p4&;*A"hj@l'hI0,qK00U9$0o3etXJQo%DMW!.fZHjb%HRoE"A-*>\FCbd<XP"$*!X#l^^7#/E"'WX^"
%&nDDG+EQ46$#8-hHjeC(9d3MfX<:rKptJ[QC0C$*Z4]!+8-007ork1q):AQLAD!ap7!h`,Y"Y\rOo-NNY'$TGf`Ged2ROZ:X16=L
%9FJ.J*Mpr-.H7!)=]g[9G*T*o`)Go5jYJcMaG_%C_HeWXUjgegOJ8ETi@G\ZL.i>fRe8Dg<.tbF9NK>#<QKEN\LLO3=toRF&Gj($
%7L)Nn3`i64i)>JCP!=%\U&nN!<#.NMB.Yc8W;r3@'qS="Z;;oVWiK,L94EuZXd^f*-'?<g!GdsX6+4j7.X\9(E/@hr,1MhAgojU1
%<#%ICW>MF"Y#@'r7.R:!.LVNhjsh,8+AA^k.]Z_"D(8KbMLq=_$5G`MQK^/YWWf:V^Gls1@_bPQWYI<TPu])-bQ+r&:mko"&5e6u
%Wb.>i1m#jZ1M]Pc1<*t,RC.-U^aU2%)5+k4>VuV^;"<;9R\;f=l<7+DZ_XK<aRP""L4+,<A==D0M"S#V1F(EZ`g*E1#%6DX8!JlK
%K*#C)9#Z`RAK9d"=US8c4Zo;F*=T7N_pe+$=C="'/=mSqE$;'e)IR,r)$t[;[:3Goqn\$$[$';n![PDtTbBfk&LWG->WS7(1c4E%
%KM@Yk2:FaCPA.O>UP*@CM"ku5TW(Om%Y8o$-425i?MJXi(nsT=^q\l.2,$,SGVgk8;5B<M:+HJS@9%F@pG=UT8Z4U9?qkANiIj]6
%i+\u,r>8FQ0^SL&1X0VNG?M-/a!$/g#Ye8nb;'B)=?;1R9C8%DDBl3STI:A+nlGB[<!LW>LQ1:[p/@2"h9e6J&X3oQGmcY\-l=^.
%@=96cg1E&2@%R&%4<(k2MDQDf<$,BqM1(^SVb=V&iqZF3F@gQ]X%trc.Mf[Z#"uNQo'L*,Bsjb[+2_q*cKLFIJp;#k6]!EeBqf2'
%OOIdq;MSNdIV-W(aSW&W`M@';_1KS2Gs:d2&?^`[hN.dXTHjUqT%$_Rqk;r:hY0A@SQZc1fVr5difc]`B4&6h$JI:&R1(2`#X(gB
%C1nD0P]k5OEi=B4_=/qILgBMpN+d`02/FIr3AnU"<?kM<&'Toq#NMhq`n_POf*]"VEXJ8r\6u18c*IRNh%O,1#EKap-4-FJ1ta#"
%,<^F7G\:_1C&!@D>%-I5MRj7g=_PAMF=D#??""+AmVTdah%5o%?r1nje.<F-&@bXAO_,4l\-XmGIV%OAbSc_KO+@gq@qd*<kIi-7
%OZH?K_e7VhWQ<)gP"e.tP"e.tP"jddTEXspgp2/+"^#Q6P(Nb3C&%3CGSoXm>`Wj2bqu=!W%/hP&ekNnXRjiIJi"`L98.C[L44<I
%37)OS2%p3o!Vk-P!?0UnW,H1@/^7@*lU_i`Wk%kmQ70Rn$g>SWm60tUS/Ond,S@0;XZ(M(i>3h:lqu-[J^kYW=+`(+.ZJSP!74G.
%8"<a2N^mn-Br'1_?:eA`,3k$a*UCD!mQlCV.re2a%#.k)ahe%9TYcrs^*5E;`Z3;OYjt^8'gEY&"u0QM^'i_?MZb>T"Hc;[/IA/]
%5%.$Y.mX<R$6DH#Z#T5'4Qm2`]Q81+Q9^*JglWL?6HJ2@$^=YD#*<,->ij$Md^G7'?=;"nQ[c,[eA4[V.-@(,d<6:&#s/%4TK@]9
%EPE6+-rGf:L/m0;>Km1rQ;CpVN^aD@Ge1_s,jm'@BOLhAMUbL.hitCAG/kC196X4Qf=)/\9=M-,0/T>t3RRP`FN$n6_tg`[+sK&c
%@:\nn])m,[$+,<h.ROB9gGUd9hLVuE$l$aAqJH`okIAl"o;IM:?9:1X-a[PJ_!rPf\V29%-^ett7Zq;%K&mK5C13RTa-LVH1j-kA
%9U\M+QKrO+(8UJF)ncFu7!&lj,CkMo$rSGX.SZfALD,!H/#%4gUpK48*Ral<PmcsnlO34LOTf_g8KSYjb(qgP<?tB(KnKmP1,'c?
%Se5#<_!/k+K.6Xgip;!Dehga?UVR1-3'V(iqK!fO=-<b'U*^"e)`FVT?Q)^%b6EZ8#YUdV'.kR5G9Z7*E,fR8(hO#/nT&?4)FE9`
%Pp685FP*iBSm7)hp>\@)lettXUSmoL&AOrR;]jC-"HH4\DHfrK8\_[\*<[46pB=N4%<oE&"QAV7<`ac$"1BhV/r`4(jfL&'A.D&0
%RUcdi=5ZE`m8W#U<+pei$H(.ihm2'E_J:Y@"qN?)_PG+N<qE:VeZ>fIX48L36DO;a':<2c*JFq:\=UW1Rg*O+Mr!D8.aQhT#PnZE
%/q=Od`u"4["cAI'<'j['gX-k@V?T(K"sQLhO9Q]4V@)TFc>"VW%#TfYetnaM5qgTe>sSP!!$rP$jZ>Z)Lh%.R,^`naOg^S$U4i^K
%(dqK!@l%"9UB3_)V0eLd8n:c^W1#T4fG=sg2K!:MdD]`TfYi.q1JRa:,"cG<cTu9=r+Q<dOj\#19C1W-'?SE+a"<c8e&mVFH[qTp
%%WGrnC?)OOIoGoP=W!\qZ&^S0Z>cq=@,;f,<<bgc/"8nFdK;.t#'rYZ>O8Em&Q]L_Nb$smgn&1@Z?_\-RDtai-p!$fM1VWmp,VBK
%[Q-k_ii1-iG*ub"S9mtD\[Hg?$3>eS4.4.*:C,Gq4(UtOO'?J:KF(Or70^_?k[)(Je\Ql9%^GN20r<re:ec.;#LrL:;!:t(N7;@%
%,%a*KG?a-VU8"<sfW-[abQ<uKepR`poB8Z4M9p"_]d>S<XVrBN5X2!'k-oakcbtD:T.3?q+oC\5:333A>4L^DG7'p<g@>U8%L!B"
%XX98HFm,"(CP[:iKR(c;%#ZDWX]s`B5ANarJE%S>h-1(U_t(8OP[p+48@cjRK>39Y)1!c',).qfWa3;oWjfgpT$DNtSjQ,AfR[1M
%4O!Z.F^PtN0L#IGs(1BP"p6t/n%UD?a3[QBTBs9SE7p%Bbbp\GO9&+^H]<T60%_p4l$@:C*^i%/X9a28@c<tgUEb5K]4,kYp<_Wh
%=p+&b"f%pKUYfu"ccS?[=+UL7nm`._PWiCR@=Kgbe110d.7COCdUK;4JdnZugF](L?,TG'60#Y*Ts`dm?o<0>V].Oqou'8_^84qr
%O[9H53LXEmA%ROmN9j=R&l@W:%A:Lj#YH8q,tO0j&_th)d.Nps3K\1u6#jhudWbd$0&"q@3tWQ[!osL-.(l"s;AdWd8=5/%:2G>"
%*:c2!`7li4^B>M'1g;<r^;WB-F?>1*giHCt0275ZR@JjPN"jb9C=\d&+759Z%=Q$'/kj^hPRmRIeHEIGOr/cQ@gEu;'Gd#Nr(opo
%5t<+:KP4r$V,\*rnIQhE%/1B$(V`\MYE"nY7Ve3,it005dZukkNYdX5GSmTf%jW_.h[0XJ^`EY(O2:@)i!--6cZTfYVb5qZL0off
%E:^&l9q9)?#D*@XRRs1&N^1M0kn0$NhcoHMVU^JBKV9[(DN)c3k`RQ2b/A]Z5M*-go&D):[0kR>28[ga6Br':`-5D/8!fo>F;:.i
%7hBii&L3gEH[%Qe!D/apogG^8ka,\[6g*7f0_>^uD!r9:ENuBl9qb5j2GbV,5Hd>S.tXM[e&eh5[KB4@%@h?7OM@BZmJngA@1i5^
%J_)fq'HDsD:+\jggd1%\kk_B:RWdB+(eIb;M'(/RRTH0nVk?uqK6Y*\`!_E"'uLH&7Xo<k#j"h$lY-gJD:9`:Ze#>$OJRqL,)rB\
%.GtQbi-J99XP6iD"_LAlO>F2iK;-Q%.R[dB$s$,\YO<49>!fD'>ctLVWQ%O<?AH8#SdA]`Wm"?.aZnm"!$Bc9@QkG_Gl7mSo9l\B
%FEUZDAX52qf7X859j+7D!id3F#4L2r%K6f>UF[U7Q-*Z4HjM`kC&QFCgS(p-3$R22>khkuN?j*Um'54T2+ds@bQ)]]K13dnhd"UF
%:do^\F%N-7,\I"N64EAKV,r(s#$+%/mskj5PC&U+JgL_hJjpWN<TR+I)<0.<pB_`A%4[#p6)/CtHnK&>dONo2]p:HH(:Y0\5!ag&
%<Y^mm>gQ%84]MqW_mU:ef_hE%MI*Ma^EI89*+/AhTRd8OYu)k6!UbChpfu2(=<Oua.;0t5[J95o$Q:Ghee]YL1i4Km<7%-I;4eFh
%.g>D<-Be-5M7SH7WJOO"WE#\/;&.q%Ui15/#-=+H)*!s=3On/LfgqBma<m1qR;<2?S:S4S(U>3`PQK7#L.'3nR@MC7\X[AabLP/g
%eQ?P%lVKT_(1_Ct0nZB-`t[QcEr=!n4CT`H7#=7f_W.^eBInO_&[)^r<5=J9hU:ntc+XX+LSfE/oSb`uLY"G12=i=)Jg:adPf$-!
%/e\tQD`p.8_H/u5rt%T'^gd^q1j4'RYd>?g=MAk*7aPRcbb5GM1#Ye^7a)Z`W>^?Z\r9*H;K[o7,O9q._51EAiX#HIlX]TgeW9oA
%I,E>-d/`LJe;</B_2Ng3IFRrm%Dk[e\029cXR%tXhC?.tX*&f+bJqLO!jNT+2hWj!_JL697"^jMm?k=!KUBnq/_>(m,[USWhLZb\
%M"ZM[n,kd=&;FqU6"$#j.]Q3#e0+$%2RJq/E!R86eB'Y4*D_V:Y)W%.@26H.$he@k-([j]Z4TL>.klHA`)8seM%7G)!gZ)&%'J"q
%1pFQAp_mY%A*4Gr6CSVoT,MIcIPu=9U(icm+pJ%`X?(s&M_E_paM=&h3M,.h<2UQSBB]e#NCpHC+?`1KiJX<>.Sr(X:)lp*\tK?:
%[Ab<@'\k[(/3&MAAe?cfq&^(pMBe^,3/=DB*@0FQ3>;d#,8.U2.6*H$+HRfl\+g-9DFcN^.X"C(XT!d^&MoBXT7Ld[.[V47[4U(&
%OlMU<!'UT,M,YW/d:1Og81Cg&i$uj0P'',[L3Zm^kXn:rUN;fRP_bI0HuLSa@eS_gLKP4k-H?-b%d;+IZA[fD_LD,2%RlEh/)si(
%AKde1-/4@e%-ZqZKJ7Y"<P_H<0(!HuEd4:;5r/hhYS8h,TFDOR.E8uPmfoDiJ08=Z%_PC')a9o\)fE_40b@rjl*d+lJ357s:ab?+
%qF"T([W2C1a9C&n(Jq5=5b3K7kgOJO9gDKI6slbSE<m24.a_F"*M=E6r.r4*9b'*UN7QEHiA_atJ]lQHJerA6<?1,JrDV<!aef?R
%B&K4]q",=oqbQ:s<$;jp'-.\Cn<_!TLu*u*YTGeSi<[>orUd25#fjT52H(j(:cBk0!Y9ts)Ds,PQ)&A]#q4.YeBB--NtOcqJJKi;
%%iOU?;qV_qkg!7Cm]N&f=JLkI,&+n^nq<c/G.b'#(cch0A2m\)`QUm_X*r93CfjNHG[b<)(hJJJ$&6Vgii"hQI&e^c9][HaBs:-A
%F,GUrl.-d?Ha&.>4R.h9j\LGCg#+Q6%+E?Q-qP0F[m_mR5D\6>)bS$Sf<+6i8NIf_1N4?"fKkaIckpjN9mS9N^_!9&&LeQYmpLO:
%0;0Q#8JH_E17CN#CI'?3PI*'QELN70J4>&rZY"tOKp2rG+:o'A*i0F5**loC,0(WD@V@&H,j$F*+*\Y7gFPiu(->K.5)\5W961O:
%Z':c]_@R)Db-0l)/H_p_"t9QV!@P!W%Setrn4rp&.KK.a/nTt]9h5sC&A`G_Q\?90>U+D0b2>BpUG"\10gid?\DZ.Y3r2rO(0S02
%+G%<MXV2[lm&/M?@M5RGc92p@_Zm4HW"hTb$Gj*.;M,oiP0rcQK0WuU2HZ8q6AG(ROS'cSEf'Nea_r\eA*9L%\:V_1#q_]=f+#+U
%`ojW=U[dOq$-a*(nVEiL.8/_BEB6(s59He9C.*_&'e@-]eKVB;YkD3sXlN#KdA0s?0uV.D<6H>DMXd+5(@I$4/^^@tkn1QMdu>WQ
%L$Q,s$K%Z5Q3e&?E5<%\iDb)F:<0a3S,ier6+$+`,#p$9>.c,%R[Ta[-,Of"'1PR#dc$=MFi]_ZJNUNILF1EC6dN6.MJ,#STnnPP
%C8,R5iLc.YJbT'u0h9%ZT-QM1^sJ@a7IucMARmDbq8/tA+lSX24>]s\W<!1j8Z]gL8/\+]>=lgc!l%+8(W)hJ7"-WEdmIb<8bhSU
%/!<0W((:!PPT]+l!l6Rj;X4Bk$AoP<a!j,C+/sdX!4LBtc3d[C84VkAKJ4.07hr7u6?ND7GhtF^H(6?^GS+6"?G-UuMkaHRp">t'
%m8Sd2WY8/^3X5u00&U7&UR.!2e;6r_Hd44Y4u=FI`k0*U"BD6=_E]ZKiur@B$GZt[l7n0)"q#?&8GX"'?80\rfZ,7"k$g\Qbt5e_
%lt!.0O5#d)]"-e0'+'-_cSlh?+#W\2_k@(N\&)mt\Q*$dQ#/JjT9$(Pgi-NK*1T:Z%7cRPX%Psk[,J*499/+0)ijX+CrQ:rcb82f
%k'kcR#R[WYp)BZVe[9/,fu(sQs7LiYS8B8OjCe@L2k?nhQi##<fVuWmh`R7h/"c2f^**@+HG@;T:#NZOjaOP:3[[,9pDZ<``d49E
%2m14W'JeG3_2USBdO*8Zo`t3q=p)q[)rG&Ue/b8^aV`f`OXZTUcebu_&'s(AD"1_iB0-.+I/A.udfm$ra9XZC^_gmLN'Tj<D=If3
%qlknRAWUc%1b^.tT8?M,p7/udS`"iG;V9uBiO)3tA/4+L-0V`U"#P\X$#6$ikFs^7Js-GdVh</5rmHY4"54H7C:SV5aaq6(l-f$p
%0N<bXd1b?O3lJJ]!o"?5Rt=PZlW#Xu\VU&h36;r1+M<S*9109/(5K77LnnGO&Hn*;*kg.@Hc%JF:&!$6i%Bp=>KI/QE#mSg5Ss#a
%5UEZ4aFUC\:Gs<-4iQSE&T(JSZ740$ie<ee6fCAaTn87lZe.(T3H#ep/LprBW`+"j#>l4rGs3F8j*M.bLO?PpqWR`E$0PWDs+;[*
%Cc"7(@TutrC?.WGi%g7r*-`"T&X*eOK8]^".;qaTLsp!,YVEY__)T7-dgJLa38e(M'cZ@0`W9KZA2$`t!R$/W:sb)>5W$QL8>p&=
%/1h2me/@:s0JSa>[Zl`'q)/ID<f@-$:`+WeaVY87+%Y[QRW2_P/i)RPEO7:ke;h.cH8op,@H9Bt_AQu-7\UOJkl)XL?-U3O-ZIjp
%9bWPcs$Xo`5NO#[V)Z;R'q3T*B&Z4bf'Yk'S,fR#.?%E"i,e?H7'@:Plus-YTM1l+%iESDQ-5AWd>t[LS41`!TlQ"Ws.Oh4-j:9W
%RM3G8JdIcm'?*6dQsdq#L)%a&0L;09,3V]S62aj@g0-02@Z*!>Z4p!&jBV1CTbL2I/!EPt'MMnDm"1PF-1$9T;:$W"`(uBZQ<),(
%QGrjbK'<uX0T?49*1)P)['9RJ25)'/QlJ?K'S08:!$>%Zd_I;MCBt:\p_(QDMUW%@:H0kJh,aeQK6H:g,!hcR6W+cCH@o!2>YhY&
%92IPgX>IPh@D.Dq]>;Grh(&33i4m%Qk_$r?%[t[e-\j%-6;M`eV0YHi/f-sh>h$@f9hRk7f?NOMcKNFIb!7hM12)NiXLAi,fr3Tl
%A@&<Ten_4q)dMb!K66hOKefWHC6o]r0Lbc77pm#-ZW&'fINi2Gj_<cM:RHl:I,-.saT87B2"12j$pH+#c5/Lt9]0RBK&8GYKc%Ns
%B-?stUl0:',o&RFG%B`3%!8CD]*'jcLb.XH_$\[dG%c'gY8^[#c=(.8LE\1)RXHSH5P?LE=N#p>`-27Nn=G:pO1%4j8hB-9<5ePX
%bTD'sj4nf(KWk4X136SKIcKO]F9gfhCMWFO2K!$opqqV-BEL$u=H#@)1Y@r/(Gcn[<.K0_,t9C]2[)Nu0kBZ^ZJ`VIVa(?g:]t&$
%cp-JD-57-8.g"9a>hbB0_f<@",qqAr+T`6$[YA`d[m><R;$6=gkLg:X^:$epQA2L"W#-+npX-_Urh';^Lfm*#).d;%%bXILRq#X3
%HJlcDC;s`7f<^6&Xq*XsClpD1ap\qOD&o3]M66'GRj41MQ`S6Wm;Q-7Q;R#]B.=:O:9)"g6m>gd4-%`J"fJFSM*gau/OqkRU]Wub
%i..W'R@o2OBtYuOjHO;7d?)a+U@%3dqi%c4[F@4+OZsoNl$05j3KZktij?cG,0F-*9NE1G%$[=/*1@?mbk7-IB<1'QJeJ:mEG'(g
%2LIPa11MES+\"b/4Jmj$7`7Z[TR`\;M:VaGRc$XA](Bt+KX7\d9L1',+h]I_$o)o=G>KAGj]jhdV5^.AAKZP/Y<E/GekjYqK>:AY
%d]ju#-Qm)"Lm7V'SJ53eI!k2_IVF'WC17OIC.(ijB58S+\FM]/dWg9T"Hk1c)^K>-!YCBOB<8b^4BI/#=$!mCAl(P+aLK6_JlNEa
%,9QJ)(%@"1akX!kH4kI1M8iJ5H+7DFMjTK0Y^\?CefnrgYQmmeWLog3I0=k*66LHn_/k,0\1cA(?\+AC>Xs-]h([3hJo/nS7YFtM
%*3Rtj".(@*Ngr]JO<W2kG,WR(IKkq!@o1Bk=FlX7bAi:&\fm"sm+2Z4JH?Gd]Z"'?':tM.@X_D2*Fi8!p+f.@>9"05g\MaB!l9j7
%kJ0S2Q6=:n^pD_)C?FG<U\Vg%6[T+,rt<Wu31;Qd;qr@2@bT>:QqF=hb^Seu@iiJ'mE`#CK9,#q">T)J1"UI&&DdVrTnu_VVJjp_
%#h^oK5["j-+)u#7nG.de\!6\4U2.8VXqai'F!ec()/?C[S[cNU?53UcWAP4qW7TU44/&)*ZDq3u(Ml%#RQo\2!81_afe+$\.&hmK
%_Z\Se-:m>Eg@S"3KD&%&.V,>XMuT<%fiO.jLTI3-A7P:h!$nR4fth+SU@`br%N(d]Pq6`p%$<.VGn?G-'i;q"frK`7OQDk@lM0P8
%RSRJ@P+fZu<(Ej:P3p'&J@8%12#%a]Ssag@/K9!V1PF9E%e439UHN+F:^a+.*a#^DBTt\E$^FCD"(g7IK9g>CZ[P!$nTO\,$d5PP
%-3N2%W*nehKgi,tQ4g$$s)!1>_$,WQ'BPMKkQ/N:GG90m8uVt%-lo.n-G#,Cc\Re#"jiK'DiJ;V@n:-8W9!/S@#*gUN>cdaG_\+(
%]#(H?1n,^`"%;nj,!!qK:p*TV!c;\NJC?4U!oJShBc3GXOo6C"b;t[G7Wgne*aT(aI^Z,BG1>FrNo[]eU5%P,=V7]2_]a5XbV55H
%C;eW;$njKB6jrA*QE*JTBOO6F#H'r4Ns<oN7c-,?(OqZfFQl)`'5V_f2YPj_27rttgOP!TfoQ=;LqcBE+-ae(0B&3`3+1DXV)AO_
%;#HI3SXFUm,#p<m7c&<kgRpMj%-NVN61@q6e<f:+kgAAaa_[>NnsEq,=3h+;EpS'K:E#gD0U(%fRu*_d"h\It4R`bFBRr_UDBI;H
%&uhgHB:s\fcCFRh4HD;oOZ8TS<fIe+iQj96"_Y4c)t9kJUHl%%a+[Ls*pIuF]IjENAAoZSX/J(73`(hjNUi5m/1\f/K?Mu.=cY#9
%Z8$N.$Sn2_fe?c,fjF'f:\QL52]%)T#$87Jk=+N_[h^5'+jK7\%FLY:3PS*V8@D6gM=Xlpo"js;!HI(!PS'tt3G5ftFA5`V-q`tq
%""Xgj<fIDaZ;-D[kFJ-M0[UJn*.@Ff\,gQ/kJmG1[RpsIcKAPe)\]>83<K-Mo0;Uu=,u%@W,cs3.e%.1..?6S;Y,B4WHj25#H;Me
%W&B\fjN&nDJ#2'cCFMcUr)^'_?_"@c]VE(anRCU@lMW8+cWe\6h99@%bLE.Ko1B^PK5LhC\kkWp\q1T*j47t-9aY#LXc42t;;n*L
%D]s'#5f?hk"Wlg1F:iO[l$a4BK41-dGT.p1h'7lX8;Tl4!(It^Y>aQaO",V8EG>N:&ongK'[^J5+kJI7"@BbY=9089':mQHUoF%@
%B0>hSG,>G4:+ait&BgKe"u430_1mJm%]*2H@,GF(X-DWM8TFuB2O83<)EB1!S8$9B">@,XD4!TdPN]V]P4>n/Se16=DgWXXMaI$W
%0R`dl%aVP:]UttWJ!us!=('^d?DrED(lt"l0sHHPhO&-1cVa2H:YBNV37IR>>EW]8VqJ)"284Qj`i&g^BRE=DpK(Gi`!M\l?V'B)
%l6m\Os1Yf52l^i8#>rHFR6_Ed_/m"XTNJjj.8/3Ji3'.r=6X]Q\<:1$C.1mjn@C8O("J`mEF/@T&Uc]Elca^*IX]i`bf&N'K,F)T
%EX[L8>cY/2`$2cZZCrU>N.>kUW7'.[W`WaXR4d&O_hB<i1G!(pCb$ukK!`I`&1t)D7e9WuZMTQNM*b=/Pqu-RnGGs/qk+pFAbmmO
%"^1[^<#*H*5i<@n.naHq!fE7a1:OnORR]]A6MHg3b9kbm$O8meW<V:4PJd,07jB^.3q8kW)?Mea$bYn,F)AfrpOnu8dnT<ZbG3IL
%&@70_RCk^%:"=Ci(O+.4UdZtMrMV3A-((fLW>3.#WNq[jWf]bY/f#S9,&*de:R4oaPuZ7)XQX8eXceQ.3u-FL.T3BJe5n=S.(&(c
%;e;Z0TTBNdDtI&'Zlft[@TBa2g&TX!L<*[t(.oNraLE?Z;gc1$/#CXFOBY08FjXlpn>68qOi%CsDW[jTV,;0"2?GP\H+>cc+&#.]
%B"^%T+qO-+T+t$e_B>Z9P?Gl3,Ic)WVpTe71n"FbH2<Gr$"shZhRI]f1dVceB/JnN&N169csJbl==rf3gLfEO,No+;oUN.[.\%8>
%F&&^9E*@eTIB9AQ(J^aO\5&6%ekY7^(AnYG<D'"iTeq\X:"TI>X1dl3rD?eKJAIcH!c"HKn5YFRY:HQBaf.#ai8V+Q=Ud5&E.Pbn
%?3lP0G/7<]CfW<NQUb/>:"[6:\ojF<ZPH6/Lh5Pc:jZNg]K7rM`@fVaP1D&N*7>/s6AE%.)Tnm+bdL33AJL+C0Q1J<#c_u9:bbZl
%&*5fS&.7,9-PuL`rKIs0=MqQA1oT'E+3ufPG^kJZ9_gDe.?Ps/CJL0?EM(<*'mQO#;Lj<lo=7NhK1$6%[*7/Qa)^Ja-ZPm1=L%H'
%VdTts!0amJJB;6u(l\Z&Y!CN1fIH-FV-aO7W,\[2TZA,iTakYs$B`f,XpCn@c1L.%kcKQoF@L/,"@Up^ne;J`#+[$qi$&p@]S64S
%.\[(*\je!.i?O>-W5"i[**s/l=\bUNq&HYie;/En,G$][Yo=4*+MG2d!c(3r!=GX''Qri+pBXID,LIJN0VJ`&OKlV2i8B975A[bg
%lZ3?@7.sU(O[M,."E=h&`"HOoM5`7g?o10D#_WL'G!RPh751OLiIdA'MARj!^mHHLKYV:eTsH)UAS+/eX]$1L,^^kF]6,Na?"-=^
%H@V4AOB^)TW/Q9qA&2N:Um847+b:ZHS6YDIU@?c$CX5LX)#h_u_Vh#%24uQ6!q2A)<t_Uc;!K'<>hVI<c\>CE<X"sLDE&Pk<6W7)
%^4m++pA;t@<1IAbB"SLDSdK5j_7q:&.;_a7%6!1=(Xf$@8e0<f#:Mct3HPbhODFqaE4%FBTa$Oj+FntjkeMCY<'rE[h%.Th#SodB
%2s77B_'A?FN"nT\Kl[;6Mat/dkho=?j.*K:*BjqD*(2`HNr!,h`ZQseD4m!uKS+?;&C2gCY@hh96f!$bp@ag$cXUp]$>#<<ZoJR\
%&.V_8-:D>(%!$.ElMTY_bi.F8lLr%"Cn`.m7_1ZCHRg>%<rY][RXF1jd9gAb8,gplaP283Y-Rn"Q]5?#qZK1fFB<9_!TT;5LJm.F
%#gpV8%V1r8:80_g#rWi%5@3?d7oE<`.uQgl;ihI*[pjJm:hLC/4FCEe!e9TI3qe8L?.K30VW3n9:0(Um1-%E4i13hB!G_iMoAYtZ
%f)EH=KNoA<5_IHW*_Ji(Gb+rqauEr4+UQH7l$>REK+hHgcKOd/WL>iT@E/3/)FMXVFNg8EF+k_PJJmX+RA5;-GqLBI48iC9rh.]F
%Plih>%i,lofLjH\Ymf'BFHbh`JBFj!C_b,8*9_>#p`=.%3BM<-n3(Dg<Z/[H*%$AAKo4]MNZ3VZ)slG!'d!3m`U!]>QlUe%.pa<:
%NT;?\3NL1H<YZ'=cQGW3er7<H`u#R,_1f*2S#;/O+WDnP`T:<)qnLA9-0b\l1FR]kQLotXbVYFOGYa2QJfo,8LqAN&Co8$&>_r+k
%$SuD>?pSp56r;m\THWKcjd,f_2Ak4j3BABtmbh.fBc7qR+<V8`N(c<i%>H&kYcd%[oK.5R#;;nbc:pt?=NRV3eqO-[WVkom:'Sup
%`eRhDEH=h5NDlu?fsR`CC)9SS+_EjW4s7lp+]9J],X05n'OYsc;@6OS*&;Q0??S8r/otFe%>*>cVg)_S8$;lBm!Ke>_i,2T=oklE
%)IE;)#&1'X.nio"4lj)52+rQk5"8(J0+hp\^d(^;eoO2X6d_Je%(o.QQg,clHk2OH]"l)C0N#8a"H.*D\;kfnlJJCX#1P)6H]U1V
%Qp<As+bf`Zk8U#BYt#^/8erBh7:#RWCVXtP*YQ:LFR;Q2),(tqYCjcf4gHhN2Q4:J@RNGP&VsgLo)SY[9YCb<PmWD#7r`!?q?#iU
%j+bXn.[^h[Jdm3Pmh!AXj-gY2APa.E"suD'BOGY\.NU1kL#M\iNH29*9agdhNq9`R8Y&RaYFhN_Q6h1$+>#9[/FaJkN``-?XW=]T
%JjOM)W3!?NU)fN:&0W>S,lb?MaM@<jh$?*?nI-?-U;D^ia@OK^HmW#t&\<c4@NLqr&YgFED3G&5+_MgYidnHO8'lQ7at2Sr")1Jm
%.ogkjV9tF1!GXTg#uD###Tum%cQIku73!jm:&7o&(r[#ajp3!=66^Eajb?s.2!]b#jL.FD^6OgLn>Rp)3Ldf-LKIo7*1mW#iTF^$
%G?k?b"B$1J'aV=Q'i6^%39WgC,01%R%R6a-oF]Y7&3C*?P(56kTgjQRi']_3`XtnGUB6u6E9o+kXcuIJItcNU!+@L$Q4<c;YnCb1
%=d``A8JcBk#VD%0rEtNelY`<c4p&"-('u:$n$uOc$TSWT;aQ#@-VjY"dP%1Efp[`aUU/&6X-(P\q&C2T'93mpUE[cTi4N%8FuWOe
%8HcsZ(t>#)M-h4W)&D4$EoCJZP2aS&DST-`6mM^b.)g7a2<^_@&]HP'!&tokj9T-!$S>8MJniSm_$Vp&ScV:e&fQ(FJ<'rZKuhi-
%Rlrq%_3W.W><J,[BKDNTZ[>E!em\>XR$sf*i>\4:ajfqZ+eY@$Q^DGV-eSO4(5+*Y6LY?a`oY*#'/>K<a'\m"A6PR"7`dC?(cY9R
%Fa21B#ppT&]\'N46PJ%@"g+>lcG[F>P-Z_%8eZbEXLQj.RY3qp"-,2god0_`!YHlp.`I8%Qig7@2H6S?E-_M8)QB.ZQJ*"g6nB3P
%X%rlIn]do(57na/h*b1mijVe56@G^s`Kl78WDoS$;o.a;Y!\&_Z6<I3Ppc^_#'(4E8rFl19njb`.Q*)l2C_%]*lX/1RU%%V7>cFl
%S8b=QUdX/q&tdEHQ(kg@anG$um,jE)?)C<#KniUc<6>oELm6kaV)H:iJqQ#/<2W?mCaoGgG0'Dg,PU?EBFCfIifp=N,1/kb6T#22
%74W>#s#-FJD;ETWN:s>3A6K__NS),EVHS*f3a-Ma*$)sKgtu0[K[47.e2,W)5(+60^+8#sTZGg4N4r8o&2$X@79J!@R,2,b@Q[Sm
%#gAQuRd(VT2<Q'[oIG[T%4Y;\prGJHB/0W@*lK7(YS^oFJm<%mD<J>)g5Dp"eN-_NT$tgB8lfI4HlFT$/-;5Q8?'!JAhBIpNTFmj
%+]$$m+LRe00U#+^<JhR.@"XZWTkX$Y6G_mjE`J%5.,(XU?&M#85#Nn8nJ*7*nk@eI*Z@#O8>U2Y%s=DBW7&0/Lh(a<39ojl^3=0j
%Vk9YuPdk1gS#KZ*@a0br/"MT"/E.UA<4[=fP2D+;Xc%BR<nb^H0&B\DpH.VF6in.P<Fgt';ib>FQ76,k0dIT)Y'H:Q`&C[L"rkN?
%s&/T#(nFHp.:836AJ>6Sp-i@uAh6JGm>E>A%833hrSeLXfs$U<?bAuDJh#6a#_n[UV_SF7?sG;#2)R'W]O@_+>R0;+K&]+uK;BA?
%k;+EcD)[5b@:qoW_dd8,N[dn.MLDD(O@ThI]Oh<737_VJfIKJpo-bhb6N`PoY,lJZZZe*"f-&"S62?&>>XM@*(M:AE\ti8&e>'fj
%+2'#2*/tF3W]:mk$JJO'])2WNoO$@Is4<u.T'Yf\/ba]FfE4-[+<4/gliHnuRRmg7NF7gH0DdiE_h7sXJ?t++psIA[`;U#krjb<:
%%bG")!h:\$j%"nre0Dd#g4XrZaN%FIlQjb)1D[OOJAV:o8q@sBA2kKtZ.YG7(C".&;SjtRQR]ghk=B&oRbl%B7UO%&_;Zc0D8dPg
%#hK*/X*>5I"JKSOR.)[.(SUquFSgM8b*g2261AoI`tqFg:l?o,JPpGCT[BEt(8f;o0(:V&jjgW>!S7`.N0!K/aDAeOg2moY3o8lP
%.\rlq!d1@_p^7Sh!6D%EU/6S4XKA6pq8QS2k>O*B=p55SZ*No!kG#7C*s7n>[P8F;p`[A?Eg=m>F'@:DD/cE92rTDjIOL+CC.^m:
%>OfI)qqdo*J>R:aXG!C!L]`63(V>TW#;No._3^3""qK6cIW.VF;2%uR2+V16-otFZ956]>i^P#c1_??L+u-\$VXh,0CtFc+/J(aA
%7=ZLpJFJZGQ*%'iUXu1%Z=W]*kS(4qJLbJ9PKI:`h!;/E7Iik,:a*_IS7n?*MMp,3a,4rI%G2de]-iDe3cc*PfWd`WP3k<84@nDg
%@%.0!/P=#>P6GhH*._%>i;;r;"*+URLqO6pO0#%r#(Sh'GTF2.W).Gi`V^9E;6U]]Vqd56)?ZL['_Yi&eO\U%&[e]#f.Pl"]O[SJ
%>"AhW4Yh!GkBrS<;\Z[KSG4l5W+0e)k3H%d\dWIBMFN`QO\K/F+*"?XjKN[Ph..O!i"ADj-Fgu?%?H'J1p0[3[Pp"Ebke\Z]BM]c
%L2DW9].ZJ;>EKj/0'#qsfs(e%jrcH.=?GCDAO+7USO3rliF>IA%#Beg,!Mi(5fCC@"*N-Y`^f0IH6*AJe!P.WEb@d]f]DBs<'Fsl
%7Fceq.;(@Kq.L(/'CI`Notni`lGX:lDW^^]rDUSA'WVkd&s<e8=^(ojo+`e<2:Q[c5a\HGFV2a>E_sQB3Ke=jjZKk)4l0dIe.JK$
%=V"EPSjC3MD:8\%("ntF[JCZT)DUPm2*qaE;s?c/M9p"k]`tiI?TCT8KE5U(c%#V.h5GA3Vi!;@p`_U`o!EuG5q@u?MlMn.KLO$-
%b@R!J)GgIT(XE4%6_KNaf-@P>NNj,5b:^q0>?*b0*HQ,fWj<UA%a$7u%8Fg/lJ<4QY'Q@m>!\='&SG1Sb8+.P2Rq>Q.b,W-!,Tu(
%pX>Q04E?83p@NocHL3#k@5.tIch&TphLKN]q%$'hG=5,G4F06PX9AdV`cAGj&k5qSj>Dt,$#%kBZ,!?1A"*)oqE;gm3%e336J73U
%rH?S\L0`R>^1O?HE^V2QXVfX6oj<fbT6/GqM3Bs=3=-.Xp(F3<#:A(bOg+WNa+(7#`-J+T"4+plDCB'^F,G5`&=Z*<*TBZM"XcWc
%O5A#&f"<H$_)#*0g=2ckg5>t08VpE'P,+k4q4%_GI'8,h/E3i8d`s>VOMU^O1+[p^c>VpAeQEU13R\f4!`$q-DeKl^EJT@1Fa$Ic
%in%&$QsMOO9;,8;1n);1h3j5SpgmD>9NX0[;4i(qJ?)@4DB+o^oCD&92E9%ADhD\k8*d(SeYKu*7')GiUQ7[A&sR'mK4Kc>6\BP"
%hfQS,h@MWn=Q1hC07iV_a5s`blK.@uMM")CqMc;F=F@]WhmR7uq3W1oT(j[hR$0Sk`RAcE"dr8`+q,J;;aGcPr<F2iC+'RsjAbKA
%#,"^R6.fIK73^g>E;"22$l[JN884;:*6e[<;OE*r64Q"XTPf<j;b,M20:a]X&0G'c(8&STVd1^Ke@)0HQgDP!/M3+=W*mCN@Ks5O
%E9Bt&8dhfSAl/:.3Qh-q"PMT*q#[]-JYV"+/>4gge/n(+^N6S:A]Zat\@)6l4?1b2a&!L;-f&K0^'tMqq%k2IVrDC2Hr+c";_2"j
%P$Ml\14`@R^tVNQ/%X(UXTKF*1CA;Ji8"$B^fAGu+'c+>8^_A3,%d'rObNlh4n)W_&EtVhU_*]e16:4a,$)]!)s!Q6&4o@WR)"KP
%i$I7d$pW\ARr$k-;sdL=f:al5)iF]>MDLp@"QgoHZ<,GhU0B2eObIcbN.O\TdYUD8XHX)9"/?F5:bf94Z1ie]1=dP'FqY?(X^H.C
%74\_62[),Nbf8p#1KYPYU::?$Uda7-)9KHX3Aoi,#^n^Z"m`&<o/P.!BsjV8bJCTYme.@<(nC@.KoL+CU_Z0`[WE=*o(Nj&%4WRm
%KU8Y,O1n$4pEcl9#dLI&JOF?Lh@rTg%e:smNf&RlGmI:C#&&S>RL1$UTHMPh_=5I]H!r1i`ac\UPb16I9\[FgTXeeH/l8OY!MW#n
%/e%"MM3,A.M@f^q\Z)r:<_&Ct:a5O!kFf7^)]AsoT+RG+Smg(&;'@N$0.*tE+5*rMdsTC3!pc"D(m7^*@PSFBP_r9>Dm&jmqfQJ[
%*(5._NBPibhW\Aa6eYBif^3..obrX,hZD2]r/`4!e@ob8;$M-.<QIJ^'VQ'Qi2Rs#<a3<;<8H)t1b<uR=$WRW;*"n?Uu!4mN,/o,
%K%S,>RU=UL?:EE#^hWm!K+uI7*)R:EkF!bh0HFTaqX^+(]IDZ.$rXUaC\s0q4E8Sn[SIJ>R461AZh`-CbOSUY.)/s7eM)6NkCtL#
%FL'qJ(>n4H#bNQ[jCYOZ1Ji3oK?>qEb8L`VB`>I,$jH7lC6=KYK(q`6F/p82lRI6#>jB`2WhV*sVgjl,b;tEOA5"NVQ<YfKpBD3b
%k!U#/jQ;?mSSL,1$A9%,@iJ-"$L;[P_n+#0<jS#1>4S8ta-&mQK4iCZT4cue>#*m`s0D[PganhKMLPafCN'$LF0i2*0KrkE!'qB*
%824V%3OiU$m/JTKbEuITJ<*,^CYm)BpY*Xi<]7$T:#0.cb8=(YS6/hKA'*EpYqmGgcSB9>0='k`E8a04K)YtcFi3[lb9C+7]Jf[?
%g!N\WaX2gqbJ1ngKRH/EK9WM?11lPW&V_k->d7KX)iKcF6]l7`7O[h(3D"83E)a#u&!.,N_AoU(=O2aLY=j/XWU'=^'%(dKZg`bo
%*%9\,+G*uP;SgQ+*E[,:)N0:1)Zerq&OhM10^=[;oh:48DjEhGM\'0KPJ\9.b;"('9ch2<^@80,mc"NIK:e'b8sd_\4ugA&nHM2_
%8OS[F?EHoX<X$pZ[,C3$BEY$nY&H96.8IS&*;\dWdnI3t"GY]?E4OF;EMMObI(@eonK0Qdk'Kfm%.EU2gM7R]e1bF&buss]XO*F'
%2I#p'/4Wr_2`LC`?e>2"?+N@Yk)Qd@%@e<>g2`LX<j@@TgiIYHYoG`gD`TJV5X>O8D*'E,8M@B?Do:B"X]N%28p`$,jCu=,EGQWP
%@o;j*F=>Ca*(gB1IYjPm89]#'@_)ciDk88NN.f`_WDr9#.H@\4HHSQn<.%jO;3`*]S+Yo7*X?Pg;+h0:l=tKB]6XodDZaeRbM3Vk
%MrtsbpEX8.n'R3SC$44;@86]VcE7OFW,]S`IZt<`1E-h"bYLe4RL#BjoFn8A-2GRmh<4m)*L%DI'Wi<s;\(*'f0lcgb[;19k0T:(
%o,c(RO:RqRQY`+5bBc$gNs"]3h2*#NG4q7E)pdb\qnc50alfPr"jbH>P_3_u?-bcQ/P$D=QJ[]3a/a*s6uiI/*`=7B*"9Q#bRk1g
%&Z@gN.MhCAi`O#^j^Fnl/msWk<L.,O8]sDW<GGY"%d.Rs<FuQHE'WVb!Hj0HU.If@&OjqZ/%fitA[<bch-MGQZVUg>PXP-uq(h7n
%8-q*ddf\P\DhP0kHVR70)NlOO!E*1ngp#hH1[O;.84cG]0+nr&Ei\_\'U.?7:8qG8'AccNn#H3+%U\Ri,=Wh/(g=g"8n6.0;SM\:
%-u9";0i)Rm0C9D*m$H_B(0Q?.+g>-FV37UC*AHt^>[a*XhF`5OXROK=?s)a=&5HW7M;p!VN"_-eV_g;!3G/]Gb*sa')&s!,Ppqj@
%#q_#+FG=piaV<6pTq*29!p<Q3&KcF>9Z)h\[WZV/!tGfcq8Jq,\8T4Rmq:o[6=[ki$*c(>UW]\F&b'IHl7`bPm-gZfi;t$5PYj\[
%C?4#4]aV^GJLX$tC&X^u>?R3VYYeW%$\\cnDtdgRZA>+PRNJSA'q2>Z.pmAjl#bt[Ja!eS'6>#L1+@IY-BLOmZLgn%&7'lr,U.m:
%hLYjQKrl*f:k[td,?3ub*>/R.Wfet`:B"%8.9(f7H!QBf3@Y`N6r"T1"m`Z4jJ.sE1cb,H,7m/GO&eC/<jHoW:"^Xk-c?Yj=IHE"
%rUH_&S7?#/#k3S,$e!+Yip5X5>J=e!e89.u1^KO,Z2Oc/R+V!MUa.oC&TU5AOUeh_r'gZ02'.>4aqJ5X"#<S3c6K6T)[7QDio#R0
%a<VBjj&(Q@.j%?@![s0_!m9Wb<<u-.'DU/I3>)]pJ[jq&`igZ"![;K>9GX#t.7!\s+T[M\f6:[8FN<!i6$Q.?O8R&>3lpV@E5c;G
%csT?fK.\Dk&]mBhKZhCMp9[$&q$^6<K4=0]If-h\#b8cf/m_VAXf1/H@PcXU"n'd.6W5-<fs1Y2_9<Q\hjahTf!*1t@o>;5XKqAV
%+^Yth%bqau@]#r80djn^=Sjl5,e]LqoB6`Q8anJR3&h)59bE*_'^T9`G_4s5'P;KEg+Gq!(uTfGZ\M''4O!(INi[qI<At+d(?d6=
%E^erpdRD<c#bg6W;6Xmb@e0#]7;>)g!cK1G9Ij^R3$sq3CpBrLH-eMW?kPL)GAk`$T/c<+L^38s!VoF$(a<8'S)<Jo#pbVGO9IY;
%d^eSoj\V7u:h#O.,&im?;e=UkpB;1Oi8$c+YmL;!SO];QPe&c-\'EEAi(Si)6R3[?QIS4ZW`>!g6aRmIBaeJ6pOUB=+Vb/Kofc0o
%Nb7+%:7!+RCj>/H4CR7TC4qs<[b<^e%"de=OhBiqn6:<[3^8M4[&$L%bdgSN+[*+MjBprA'/^>3LL7Em%Cf5rBLq?LGFJ]X3M;-I
%0&Y"_<hFS/7#XGbN@?+i^<`]]2U0iRp">(Q^ZpOaTn-rDB6mQ4KoQH740C&(o`cD9'AQSE#s%^2r<H^#&">M=Z]1ihU`q7J/N-/5
%/!D3f7>?qT;h4EjhO'ZmMrZoY1J0pjlp+biY!BNCaX'PUnc@9J*3%pu`m!@0Pe&h.`3eH4K7kKU-q*tgpPLMl>\]o<*h6CLD".2K
%%FHU#WC#f9Q]Bp_WXiARq:)q0EK)S&3G",jdA8.r3A-tgUC5L@Z"%&A02U&UjFfQ'nDMfF!*uLG`J,>Ck;Yd/rDOp8)lPLd7;.t(
%(]*'8<T(N^UYo9>^O0<ln]PK9q5Ls8G['].k.#(1&rX\\9o8IWUe:Hl/oH#A>\&54+m)QOMsE>epb,ed2^VZ)O]UtgZ8rtF6lFf[
%%3E`&'QbWkL`K.^#r2de2'o$Yf.\g5X4b,@,t8d#dr>h(BYk^B_R"]OK'3+1nr3.k9.BO4N"U,M"l8`F?:"Lf1eI^0:-&*,ndf2r
%`Q?dZe4P.RJ305Ui`;h5pog)al=V/8rkr8g3@!$%nneUKC'?gJ6d>N(Q_FC9$rnI;SG\_Grl\)5_bX,i<rT,qk?3R@\%/^*5*s2]
%NG"/d&M5(s)jJ]$n2,]h9lSmP&Z-,<^kIY7_%o4TgpXhAhd'U\Mf2;"6n/e]gL0kA+WM"%+`KZ"VC(e;AJ[AXC6@XFilMlfSSYGV
%+DOUq&<oo,W*P!Kg"H:L8'JSh>VV^T8'h^>2nif5U+n!n4VBATaiA`.gSb2j-X`Gp)3*UF&t+;UF?USP]lc'F/Y>Q??T;MH_^+?3
%'E2,OZ7HuZ!b8?Ha?mU('WC=VA7b8c@$UJ-'`;<*eus#53_KDNX%rS]l@cE]DpeQ6f:;N/>kKr)/.:VC:(l;oc13K@*;<UBC3\d%
%Q1]24r*O6j^XfK9mJ^a3pF#VB&RbXFG-&GHC!RZ$_`F&;_M33uk8E?qeu=/$;ucF/IhmP3Q0hJaMR=nKfp'2=Rb">ShQS%]Uqc#K
%@jcsLJd:,92S"DXF2ceUhIKJjYYb;\->SadCs^nc1@O'+o&ZLt9Jh9dBI4X&Il%BN%Cb]FT3I-h=4j8&9&sG",WB*XasPOj'=CMQ
%i<OCCr+Y"n<_;B76(0*<Z2GjY)@G4Bo#2`NVY3mXem>%EYX5pFc2sAcOUA+mLearGAlC)S^);*7':j^W8[L@rP6^9_,&REc1o5pq
%e07%(gk`Sa_FKB=Kg2lITlt6nC/)2OW+qA9eKu7Mll;'gG2Hd`MN%,)j[:YicT"^G4l7$^F\h4HQ>^YXZSN4k.Eji+mn6Y%1R(sI
%i0!"ZA-3].*Ra$''H:LY)3NsJM";`I,*H:9(DW<*EeJGPY6ZY+$,a;]QqjnJE(e]NHOtor!WslV`gWrbOcVMX:eXDW),b']>4V'f
%AD1`h[aUD_qIVF/dFgsKVh(q]lkS^dk>Vk+bCrq4M<.V/Kbl(@.WdTLG%FUj=[lM,!QA.X6eHEqF0G:f=("#WLa^Fi9b3S:7+Ios
%Gs?ojDIEk^JE/E*Jd)<G!@HMC#[N/g'V76;&VNR/2<mjs&iV!p[;lfmmt`2VfkA-Sa(DEA#r%--&WH<`MMPZ7ZZ+u[>,:g*5#mb=
%"XXZ`]HTJY8L+trjY$EIX$U2>Z:8.\__ja=Bq*""[@>E)k7'`\$O<;3-khW7#/lL?Hl]CV1Gs^ZS<e/sJcj%)d-EY/-A!=u::l@_
%4^\O1#30U<cP;u,)'mi:2.9@5PMg#V!W6#gfq4+Tj9?5kYcBH54mQcu-U`#6!)*dKV,0a*SAF_MW0\b)#U?#W!`%b7i.]?<cfIiH
%#o0&<P$5"#MM04+?ctk]F4e8pN_,*%1MIHb#E@f\\uusFiI[ATZA1Pf`]pE./j*e]PT0g`eHH:9=B5qe#Nq?_%4[&G1%ep93%p)T
%Ja;hGB+6\WGn$qChh$YKJ"?PI+Q>%U&5iB=[p$`<'IWPHrO3p/cTfu:lP.U$LcIGuI@,8T58r<b["Ec[[#(6D.au=5.tussd90=7
%%U=">K?gf,I<:)dQ([&m!t?r!`G(\0&=%q]"klKd'2taMLtpLI=LKK?%uciJ)iIJ@[1S,TPdVPB?^;tUP:#*Q35iP4>fZq'-6uDj
%i_Ub"hK!FU<=CV%j/IJEieP^'MtQ6?-.b.];`t\8_Rel_8BiFNG9`(kM#tEphl$N(d#iEB<TjF]5cArFBbX0UgQ[DuX-@9/[I.J?
%a=APDK`Y^;7H]pK"l`=9=H'C42d!u_Z@pc[NEV0QW4^h-.g]ICT$*3qKb4b\IY%n9QpW]PiVJEX3eZ-Q9lF'*FG@4t=e/?hL=ObV
%5AucZ9S;F1&*$p<H.B;7e,2oB2MfnuTjApbA*V,olQll_M@*j)q*)`!3R4*pQheg4=j=l)S/"cB_,[I#ROa@3)C5]0M<)&*H/1l>
%@PAjCp3#=^@?BH"/""oL&F1W".OSDqfW^@$((l=f6eeZYM7D.B_-tf<iC&@Z.1p(MbA"gpa!jd):b=&IjcpK8E*bOZ"'6nY80>c=
%m;(4\m*]6<3Ka-0i$.H3ksT.W>&^%\XEGfZ<>Q")JQVtT'5Ke/.YB`4/"kMpf-M,PE2mrG&!T[0k#8;'.-C-)lR4LnG<2%$X?K.b
%^K?2p)PdFG[1jS<\sQq:Y1Hg;;r_@!UOQ0-`CqQ?,o,1M,uTuNWsA3a\=?T"F>*f.729TO?;rY7VNQ`-+I/=/;]NC9qF'\6ASYuO
%+HRj7q8PZ;X=gZCJb//a3B15W3Dtm!!S%'n,o2VLZXYPaO3D>ik292TOi;gW&lmHqEs-)t(ATed==rh<DsuJ-/30m"r'#Z16bNaB
%$g:(807MBW7`N5\b8?0<nS(7t$$h&uA5F<Wo^<gXg6%eck@@S"WgXVR6(h'0bS(j+)4,bWlZgp?,L:=([g%&u_K`R_-T0o3gs2S&
%]QrUB>WTDX\dWRsnp]4U@CjE)e.ZHSDg[I-1uI9sMGV@(+:iHe6O0(sh!;I1da49uS$1Ko3ZVp=N2-I'1%t#ld*Q1!p)1G#?o_eq
%NX(IZ^+.#/.';OJ_Y*4/PA,cm[Yf$99p#$8l3N$^kni*M@s7tQg<:"mo+heXGTEnk.HbMirA`</c26qDIp'^la!QVs:MSI+K"sJn
%]Wb.-+8/K<36M^^Z?;$7nS+#,nM3Za89G;+bt16CPTf_48M]S)<^%[LdOX;+786>6(:S"X@)0%+N2OX4bUdl^k,h!F^<g:M$1kHI
%NCV:T"MPFa!k)-An;'"pRk<YS%K"Wk+GpF@A46d0oLTPrE]qNp?#%sSr42Y"\J)&EH^D:ViP<9S=aGcQ.jB0/SmV4)Q[r>8A(;nl
%>0KRCScZ*\[(-mOP3%pbb(R+fG"Ot%=T%unNYgpf05Z;H!-rs=()&@#F3Sdd<YU?kTW;XU$PFhg)bb)+KYmMXM=Ei=f=W#G&D1Rm
%iTbjKIi]<Fo8>C."GShi$A`2@Wi5]?`ib'[C05$qj'tLmq2p2N7,]goH;6jPa>WuF-m*+5*U#T#b#2uL(ITl;fRG)M'"konq;D5n
%s)DeER.U/[?8[*`o!ff?U''AqTcIRJhG:TE8*+l%%'M/N8pPcRT,0j&^hmg;pOdom_>32:hgIZfIRSQVhfK1:Npe7!NS7MJN_%36
%O8eu_*o?hlGM`iMhuTD1iHGh$rqOP&rn#&;rT;FI403@DVtNk+Gk>>q?LlY&9E&7;e$4Iq>t+F\l]Pp@dCKMo@G[<H;")Ee"mCb\
%q0)TD"'Y:u$umiHnWpX_h,WZW/;?p`0:VD`$"]\^G2aFh=rNlmkF*Lk/TsH--jk(aeKt:4q6Gsg6nNN+SSW<<PQ2>/Ha$%fh7=BF
%$tWI+DN3R3+RaA3j2]MY+KM8N2(Nr\g<On`n0qL"r^k8[dM/-_FC6>U!j&Wo\CXu#F3oM'ZpE$^eQ6n[b0!bo5n=,Dk^15V11f39
%_CT;lM?tZMRfqcKi(qCu$u&&5,G9rEK>an^>&t?_Lu2P5q!D"HcFCu$WNQ22e-6!,<Pdf:f0B?BGg:McoJYA8eO?-N7PU([EMir*
%qp/_8X_QNl>57,"dNEL.M8ki+:gG'HEH)dk.;SGhqQZY[3C+EL9b809q'Ic^EEm]TR;hu\C?FEu^/p+La3U_OORI)RM&qpWJep'D
%R_0a=PE[Dt3%Wmq11,n`HAo!4"$2Gq(M45.\+bqO'a/,p1aSHnXoip?EGF'aX$kr69&<6<_$cf^d-Li#j^o';*&-EQjQ#/_CNVgh
%ht@ScN.8)Sd/N!*bM9J0'<?lFqH/NAR[M]Fi-;Et6kB_mFSZ>D3/:\;Fc?>i.9g<0V4j70QBfJ3b\3uDa4KY,7$NZ^9R^E\K3s`l
%?V10@1Yp#/ib\al'6[YI&M$dK2t)1r/%Sgi!t:mOAP$Y[6m]g];IHF:fhI^[m3<s>AVYMhE4]:-:r]f6&*3.H:k7N3m=9JB_*Zd+
%eK#nq>ZEoK]UK4nOriVNh?'acG[&4_@(jpaq,:.h8IHH[$(9s3j5#.=$9h4++@'?[*=$EB[\`sO'1o`-::PH&XBh`WZg*1*`61se
%+snZh1p5;*X"I%"Qd7?/Gp#\GfneB:1U,tC,K3&?<lrYNVW7s?4W=U7dWZ=r$?>`6Q6<`<Y*gi_RV4Yn\,.AhB&;a'SfM@".BBDk
%>Y'=pkNirWSW]+EOl=4fhE+L1qh=mBNAB(3)_:-I%ir\K;PI$odoO\`DDNmc9[m>2,ifSL;Z`OeJ=6-Sk0=B;FjLH;YK'd1Z[+lL
%e9QtgLN5I?AKu?!gZOQXYE%eM+hK(W^s$>hU<7g2)8XnP\?2Jc.;BP&Uo9I7D9*$VB:492[<n;B^i:ZOI]K)BTk<VHlY\>X^f4YM
%r<#_nT/ONWS5pd]9+MlO@:#@^/5o<*3`LG2:lO0;g$'[`(E!Ie(0V8jhDd[=!n^t:XBl(E;+/&Mh%lZAngU9tFY]rd@Mn_s]=d2V
%j/OUf/2=;F-?kt3YJk\0iR_OQo99>L>cTN!b.O3:\eG0?No#&0=d#bQ"6GhEe#W$Ymt^n:F8LmQ^0"=+6I5F0p&7O=h!rrT-S]u'
%[qpkrR-+$K^h+Xadu=/M9H-+YCX<26GE&)+Ib4/fV]nFQ)b6b=lBp005P"rsEL_rgN,dZBS>/Ft)b4F;VICo>5hr-@CI>>4Yd>:L
%LB(pk8'TU[Wt;$>Uf@T3*i36H).p@dIts-!boh"is$Bd4R/C*LheFUTgA[(r>n>PF/$@NGX`'>\deABk:`E:a*1_d9cZmHJn.QL5
%HeQPr+Y\C?fJuPUKU!URCrem%G*5]\Qa<+[=o6+Bj3-e9L#7mg=`HDHG2:-+pe&G?.,"6LBQ'8`k#ls]qbe=.n".0jX1F341B,fD
%CP!HA2j=XrV$>_(c]:U<pq2hh.73etR/Sl-%9kjnq^+=L@D!?lO"jYXb<%nE=0coha(,S+_T"H1h'As:Rer%Wl]t+^91pl?:P0[a
%7HkV7<#Q9;]s9RZbhGLWDtC$T!tOngk3U]N7BH5FkVB#Or6CdJfG81-*r*UJ0]8=tEaXn25<cq`V4l\iBo\jm)"dKiS^4'Tam#!C
%O=\Y68taVlCj#YH4D^IbWnWmfSLGAb\YV%;ch#1GL-O^^MN/o_;rW2X/<$:DKTpR=74W(+2,N5lZCL=Ea71Q.M_tpm[`/X#^M^KR
%NJi3OPK.A]r"CkGjQ,Jq>P]NSmlGU2N3kKaioB[nAQWM1Ssiq0N&tPZ7p;EY7f,&oJ228WJ7JH#e9-2cF-2HODgp%fr$6k.BeuR-
%8Qh%uAK,:-,R'i+Ns/JK1_G(h[0f@7W?^bXAL@_!9;V8JQ]k)n^RO?*5Nmkpk.X7ONrZXD8^DV8,$l;9kV3,;la,UhP:)ef\N6=?
%EYIc\nU0l@+3X2u16L2_m!*.,Nr/)%HIf?PR<?$2q4;Fu`Sl,TgTj-VcSMR"'kc"TGqP>j2!4,bGoeHlla40mMth&bl?0h.BdL6^
%m"r,apH"?u5GN(NfD/moJ'D;4eL%+/nFF6UU84*/qe,R_&%-093BG)Z[rW:4=2+2cl]/rI>J/60B0",-gV(n6,nGaRg$=SsdEEA4
%^!>Ya)=(Q[XBt(a3f`QF][#/NhR0_:STRS;GB,dOMd/!Wq;QV4T7nXU<*oVNm!5$X_f&NFT2/H:_1or[5@b],6D#E.ChK0"j,4>@
%ELrak>46B'L5Vq$$s:7U5i"4JO$_*)Q5`:/AslC$BQ`CFP`!j']-hl3lJr<Ob80cJCNOr+o;EDUOIn"Yn+,LqJ^-uJ4!ku`!AiHb
%:#>$[Wq(macqSj.(M#@`%D%K<hrMM?k;j5md3eI`'k+hIRR"R-;ZeLeRQ+",e?Y&</WB6\r0uQ_?0g'apn3jB>,*I<*Nc!]"^)=;
%':]U`.'-9<5?'MnWoSmO8!mOjK\N2M^04]I:&ej'EMn[@ae=2G=.He,[O!lOOEQIhHml_hp1WSEC.\9J\<^;rd`27;I*stCU)8`Z
%V<m3H8R<-fSnHk1pDe?J-MQ!%PLKX0,5W\20:SD>$KL8D+\$OM\M0#pi\h,XcKB2ec*Ip]Yc?@o>(:D[cVP@eQ#MKG[ArODSOV2c
%7N$k^ODJb6GL2PaGCgQV6;2"+:?47RM$XdLbb*-8>4ec@/oFZ5,hGS>QT%b:`*F(RdiCDO<pEC;a/tbo36pF*jV"XseLUIo5qTMZ
%VW2XZj6Gd_/3iCgr:/ABXuL%F%$oDO&tB.\G49+J1q'MKa]X:UQlMr:F)WhV-\>3U9>l5'1)q%1)L@n=duiOA@PQnH/V#"<8%&=a
%,T,&YVN$NW;jF94:V:36hNWM#=chZu8Dr.RUW%[gbi</p140=FB&LaA2j\8$]'SiiDc,IlNl)]Ge7'7JZa=u44]k0-]VRN'X4F_%
%5s_Qj[iqOuEYF@AAkno&CTh@GMm&&:D5l^1"K>WTb-oQ^L!q3$A'@Q3UA5:Rng2`>ZH0c[R?dV.*8BeS&Q2CuDq[m>lB&k.E22sj
%l:X,eFV/M$FM0"KPn"S)5^$Z'55b5VT23$7T<XUD?5)A^:fGD75(PF$L0o,\BL?piV9GKmas#2d5Xa<&qHRbh#c?9!+%QL+4R5F2
%U?V7mD2iK*MQ.8nH-*VKN>T'FbCKBZF[)KtT0AP7j3+KhBcPMl"_#Ho/$-$a[<1/D.]gXgV6d<e@THdFI*8;Ff^Hc>Q^*>8hjj4Q
%+"NEI6:mp9h,doSj"K<Dc-j5ikfY<FIK:a'/2$,Om1Q;]-OIIo?^aCjO>cs@KF7fcff[<-,];m24k;:i?6'g%o,8qmh(ne:`u7u!
%P(L9C213g!00cp!%AM(+PXK:YasWG+G4h^pUCk-5rH(:d!=8(%D<7e@$`Bhc\"T`1mDdCL0`"rGQ("pkndS638LXR%h28PnaCMbL
%hTn>#Ug!/h_mGMF^\$f#>Yf\-n+!V7&2475iUlDml9Adkifmq!iMFaDYZi;4lD2c@`h=<IXcXBnUmSFRa/L!=Fd#Rq)IZO=MJu#P
%ht6(B/?Ll?ef(-jZp%l<rbXunV<&K09\%-T]%"2fkdnQE&n!)EBGA*6Or7P6Z4b\o1ate]Q$"X+1m(m,6jj88fBQ%&aeD-lf"+1$
%BhK):aU$"r1ro-bP@;[B_FYEP9#^&oMI;eA`:(Ii/.mVR>BpI0X82dRR+[tN8gk5E"2?CS[%g=i6:8qn9ppNSK"<Vpp)524K-q#S
%qm4GiF.)-X8kRcJQHPp^Vpgj"l3^??/M=@)Er5MV-J7Ef><Z3n^*fs.m<J@XZWZ"n\NIG6B5-mbjNjm8Z5SR\0"HSb^6WQ7fOkfC
%C/05BRO^]0R`LPk\`uEDRObkB'oe\%j-,Eba";a(S>`\"GDFXLc:W+(G$9FGg<b^<$"o%GYb_C.(/\80.'&:0Keal%X-@+3K@*:`
%('P1`@u_>iU36f'<M+GO#2[1/HSd-_1UeQC>:9-2<mfHpD<LkG4pLSlC%EP'Nj]jmZXq"I76?j$k[XZse>CeW5ssnYdj0.'80Do\
%,VOW7H8s12rNneD7J/FC,UBjf/MV^bd;P.iTjp`W-9AFu\W@2"GoTgMogKY<ZC2m2&BcV(h1&8D.j%`@%<Ab9!fd>.a=OJ6.A4h]
%8)<t0%H#4Sj<6UuI1bog-1<SE%*4PTMEc)&qjZn#Gs&M6K=UW]QD7TjXR3Ahn0&!P`?oZML;N"Rbpg/jg?4_8[`dOP(qD$&I!V#d
%0!jj:-5Y?_]D_X=;okUg^84Eq)J$DMgS`7Zn'TP]d:GRiPP8R:>iGY^'(*#Hm(mP#D8!+D@Pu,I>o'4dPAm`YT2i>$ZphV\8u:mR
%lL@uhG_mGlj-t1Oo@=_->3?$N>!&qZ6ZuYrMg/Ul<)ogeJB1bjMYVOghp9A"Q8sr$(t6_b?cCcg/995JTk@`E9U[28Ip1ru2#>[2
%:6:\&jqcXU`)lK;*r#B:7D$3U=l*p!O!g!>m*4@Iq#cJ@0CH&*)lEZN#b/BA[o%7d\#km']B[FBR('D9/Ba1[_[osC'7,r0\saJQ
%SJpYdC$C#0dD_nm8K>Y6.OQ9)^"udDD%f^VD%A+U-3YKp]pPgafT4G-]%j$ekkk:cr8kNa4b!(Rm*R#3G+]ttQc[fhEsA9kQ3Z8;
%q`2bO6F;>bbhhE[0:'4jgc)XJAD(?bYp:97RF]Qk&mD4I^r^jJb*-buKQr$k'hua)bWT7mlA5-Ep#+rS<^,b@(NS[RQTT\16Ba\O
%jo1r6d[FouNXsCK0c\p=L[NY_a>\BlktXj7FKsk!;q9k:&nCmg:%4nMoVJPEkbXf`1sm1H,,YsRP_Bb$&$>f4ACBL*ZUqhZ"7(a)
%i:gDdqfenc5ad_SB>0bA&(NGI!;k&_54ad6mPC@?+I<u$(s]Hk2hJeMgdXLW_Uis.k!+=)?DL&P*uHjGRr$gs1!-]35KZ8H(3Nqf
%>\)U4hp!rg'.\5form%ZU!-f1HH4c!fs\#bT?!/=./+MG8,e-lP:0sgD:<sBV$q^QB&gq:P]9STLEEshW?CHm-Z(;:*4O'-3Gk6Q
%Hu,99JYe^X5gho[5A8k2<n*i4cg`9k/@EF(`C74QRoR*QntjHV1E8&4m@'f>a0o,?\Smu7O[!d=glp9:`88$o_>/I3;ehbaT>oHm
%mcV0(ggB!jq4)h_/+lp4-h#7['aV53QJ2[6o$/e,MRHF6eu'+KWU'HTL`D[+Ehj6Y9M9sqUi*<AK-S3oX=<l]`mmcD]5QDtGREOK
%-"^'J5#e&O0a#KLXn225<3VRC#+jZY777ZkhRrNUm?`eQIYQ]=1p!BTEW3nB?FpXg7o=[L`5[Oe=>@PlIr*ION;ZF<<&k.GTk+b:
%D!6QdZj*e%eI>^B:hqCWAQKWV1?X=p3hA/"a@`nsKK5f2==RdU88)I32?e[4F]:rJO<nX_-)4#I9b9Z5FidH,CJtPefW)hG&KYM0
%h$k0R;Bo=f!.ps/cDi.7%YP)/]\'jN0[eKA0M@(FRDr4JlN)%)GMB1GJ8k@uMF;E`X:UBu>9MkCqR/g^Pkc(.;3s'2>ud0M65V3$
%YWYsg3u1`%.4;inlO7qNYP"N@jqmc<Bi"!$>*Ys/3Y:6;lqt!0LM.'f`sfUISC^Sp<68lGPa]U$3L)mu*>%9;LgO;I;%P8%>9u>+
%QPVF*K[-PMY>BS9l"lK0jC1@Y.Q=?MG-UO`-bWZ02li<:&UAl[=3@JsIh*5!M,YP[W[JZTPe20B38[NPK'S/BkDbMH;WMlMR]^$J
%c$R0MK%;K&<=)jW*P%sA6pmKU]XFBJmpI=WX.mc$WZ4H.0hfeTmNPH4hR=[3$j#8*YT+cmktqu&NBm;AV/iRr&5!c:^6tf"s$a:$
%-&k=NXTJ$0aX4Q0Mo0VRCU:BaIa0n(8!OFq;E*buN<Z<ISbjYjq\MJo8f%gfYe4Zi+S%C0Y302q^Jb.QqqEk3-l[,:cW1U]Uh2Gb
%'u5erTr4@HL^I)dIm<ZsONW2R8hk!oe&gj^1P*lGm#LTc=1[O3Cl#0=Vu,(qs+n/`(E<&T(^n7X*2[O0LF/uLNWL^%?b5O6BMlpl
%NtRBnATr":3\bo"A[0+K?>%fe$flWb7;V<GDYi3q(NRqV)CJ!qe+[uUgQjq4[)]c0Z+%AlP?I*01'QY/BI4]NJ*>;@+^8<fM"bd>
%:%"de)#1^7;=^dZ]MK-dB1amBS*o@Dfu2lQ)4-XJc$'R[SReXd3Q0ti;&[)*)+?QOc^gQ2h65@n6?kUbZClc.+&*f^o@3-d]q\5a
%qg^<=INL]K`G_r-\AmC4iX9,cjkFGBjX:!I-Ds^%TeKCFl]_`'plN-Yd"WmAFk^d5=93E/i"#h0$WP'+5]ffKV-5I<6NO?Z]h_V6
%R1_er9]dJNcY4O7&r%MI8p!tEHJ\7qo#retn#:T=<:VIin.gUC6O00Zn'FG80"#5?4alMInV1=2*h]Z,E"U@@7(f32YTef7m8]S^
%]T\G5p3KqU5,68c2N'c<)5-'04YTMO7>#@9O@jQFc-*JV(HuMN:q(RQpj@;PP+X(6VWFI;JX,9k36ucqBm]<sj,?+SgX"=0ea'J5
%_+_<+F?BoTJN736-5YA3njU38F(oY:c,IJ*1u;Z=pH$=eoYt*O@C>-G6&DtUm,K3LA>]_t`5`WXRbWsUFc=MC;1qqM:8\;-6.I`@
%p*LU/Bnd/ghU/1AI6\TYJ*Dd;-XQok6i-N06i'B(cBhf+2g5QS)Eta%]7a(ef\>e!!rm*.m<"[kHKT<0h'J:FN?R39-"t3H4S$[$
%69WGdK\>f,+_]tV\kDI<qIF-t;eJRs<sNEsHmKN\am&Lk!k*@GCV>n0%MV1XE@#$&%R]=F8fB@=J=,.t8HMg>V^i&u1:HjJ]'nd>
%cGR5'B40rB0/T^]'K=;ke5^d.\%c0[AJ)\j&Q?&^.T!KA*YBKRr/KY4LESW10P,\I^U_DJG':_%AMD""NSjYR-90BD^)Xn5D-<fl
%mE'SMaAd*l[dpY\aAaO\dRr:[X4+o!'i^V$I8!p'Q7a>l:Q01QTI`HL*2FMcpjL=A'L8Y,;<a\/$"m'qQOd8q+b8ito1FD/WTc`P
%hg*WAMcUKrQ=)mRRX*8ONl.LSI8EE`m__sh;'FPW5K6(?mr7*5L%;ff0jT^CD0u?Gl6N9b*j9#Yi*g<g5,DrG^ql5Yej\'%$\p&E
%*7Y,mN'-18k9,;AV:ASSo`.F"&HdpJ`W^X&;gsFipJ2[1?i.Dt\diIno4eJYW6>B:Rd21!`m9XINdDbUW(/'2?TPh\/DSGhIS=u$
%LjbQTrIe)_:?eu9$o8V">JQ/^\I5@Qp1@u_&o^(.E[S)_hm6mb6Bf3X6)>&6AV_Hc#k!=AN<_-GIYr+J`!J7+['DRu+TlZ[^d[0k
%N/T4he7c\"KCoTDT8E%6pAX(qWP0'%=)^Q+.0"ccC2M:'U$(>X&O:4Fc&J>`>FjE,:FZUJ#()=HHmtU7"9Am(m-)V5/ej-C'?J\g
%=<!L!#Z+;Sg)MpZ/2[Mi,eF/cgbB^UY!p5H.F&QcK*+lZ$"0<cA5a#AL@GSVqkAUJSW]XZ2/@j`D%Vdg+t+GDQ&-rFE--PrS#Rbb
%E.3s+I6X"co]&?4'E7KYd6)k>B'ZjLg0P)MR%"H_VXitrN\'%)jjY;-a==4A?t`i^_%r^r@9KI\W%U?;ILSt>lnU#hs!HOTa(7*A
%<4*V^V\%h+\Gr"+^B-qCY!+@/p?=VicROb=7@]FpN-o%_Ik*6TM\>61kRq1g(rqk-lFRj'l[;R'mS_";l!DZ>8:'"K-[8Ud#G"7q
%&J*9"$X+bDoU0J7QcnLll[[cIAHtFoK4fFFNF\.0YOM1nDVG>.`N2u(6it6>2k!h8C^-H"7/@BuOoR)>.K0O5g,%,RCB-9'l$Vc]
%''^C:PU]QpE&CGK5?1VNN#^FZCl]Q\9`V'QZKP>!UhVGn.0o,g!LBJ&.hD1P&8RhihC<Oq0+,RLbeI1:OFA2sDfI.8_rjDP!ia$L
%-%H5"6\H[^5L-sG-\4If+ADY:_6A2^,hDc8EO?<"7$'B>)5"NOQHtSMFD5O@Oe%V/*4qaf:arb#CO#B]J;c%^5[KLk0hL/jd[h@I
%2OP36mA3!@Lu#DVo-D*H6D(RngT+I8GFuhjhbJ/D18[+&5'YkO62Z(nKh?Il107-b!Pu%:QUY.ZZa^9LHqKg;;IW[/W<;LHlaMi_
%R&eaU'"!O)r]Gff+&*`?*fmDe#!nQ5]tKO$4UZI&De-1Za?<DB].+*1,KAek0plJtGD9WA4a'JgZD,l7Nf(((o^ai%m^ifBSAZ['
%i22gaEu)"#9+>b;>Z1\N6>Mc,ojXX;YPPdtkP>$s1lP3"e]6kFJHa74q!D3*8RJK'Rj8,1-)%^'a8p!"5@h,'p@UD.`hQ?M@#9j`
%$F)ld#2h25h!r*;O7_JmB&R=NSM@?&.nMo&(<3MAD@l1<7QofHAW>e/KFi`<D\K*)@n0CH`9kCj"9=@;@HS)Fk%AuWoJ)Ad+Va@T
%?3_9:*P0Uq:<lFkWL_:.*emidNh=RD11WVtRi#P)66XZ[Nr%/Geq[%u*uR!k]R*N!Kih/+8mO$D&ifluN:Ne;fLAi#jYb""UF.k_
%8[T%t*5[@Uq63*2U5+]5;JnV%e1.7JAqZn,?WNl7c%TD'%e.H-A*6<Xff<$M.G$Plc9gI#NL&NSG6G,GgaFEq`U]fE!'MR>50Hg:
%=XIC"3UE<[g2%nKqa39R_9kr=bU+-@b?38.6EEs;$TM%bP@X3GRKkPDjTk^n)s>\r,-aTFlNa9j%aA_]NfaV_bELtOEt%qCFC%=[
%Y'uJP)&i=CD(P=%C#th\'ln[BKNL5=9h`fPI##t&]\?sR=NjkJ`&NJEl:HBq?5r4EgJ:lr'e+(sK`P;JGn4:(X1&&j*]W5YoA1.O
%:ndTBgjt!4\pW98Na'3nI(BTfFM7(Go3$:bOf-&p091PV6MH=l98QQ[S,:.)S5I>UEM%JACYGHUqo#`E`B/1U:E1]SYcD9K:Rm<$
%m?6/kP>@_/PC1&>`ju@iYFb.q:SHc#Zg6[ecqd-oT388bRCA=m)eHRlQ+W75QA=4!8b5jWc-bL(HXqoqkuLF<oe9))kuLDinEG&B
%N-QFfKQ<[1\'gQ>^#YQ=Y21uJ8IP*e>NmD<DP`PE\U@S1.GnE'X*D1=<j>q%DB+dE<,9[BjN)]m%H6GEEiS'ea7/FjEf;V%(Ul:'
%(p5TJohN*pHr$?D09):ll,TjJi-!p_D(^ke$9d9QD>+Dmc]..>TuqS'Rr-rMp$%q7C&RGL2GDlW8krKl2YeT*F,ugXU=W2d1I7K"
%_N/;Urj\_j3UMDqF@$B,(>ilITf^8mh1&DGN14"dhtS",![K_tc6>jiV-)(743\K8k_B%X'!&0(p>4AVM:6QjAiYp^btnh#5\':c
%P*i!h3>pGWpk(.W:DZ9XIR:;_V#4'D;VX>XLCQJE281rY[\q!bdGWU]Yu%G^2i)aA%=W5DG:91g3H[,CNSSnaLN>1sp>HN^j2GLL
%O?5=hX[<$=]Ir:XT_=rSZC]cL1Mh*cXVcuF50Z[c@'_X2o5%Y.!29ai,NKS"<#G"^d.!`[<fqN_<n1.d_0X/,UdH\0%4COa9^C>r
%^"i8H/<>l9[9@M1!KX)8IeVt`os8u)\=`^Bne,Ig*o4Ms[<E]10=]eN&Q2`m0dRCmlsQ<9S(2S6*d=W`3V^/oV]!SJ@OMGUYJhuI
%6pI;bgQZQn^2;kgqMZt`+AaiF2OR+<O<p[J)Ii`8\D\s\GUhj6N:%fh4)bPLYa"iQl-#m83L3RX?:oEN>=s*K>=r\c3YFK0ecLZ%
%)bt.O0G_%KT`)0@"h'A04#uP;fi5OeESV_]S#ftQJdneH+0gqRlPnKlaAt4Em:%&Dj)^3Thj8YTh0m.!HWkh0mg25e8qf5VLpSJ8
%3D4%T$_i7#09TLi8Ru$:'[Dth(A>iZ)UN9%)@CJ7r^mBuY#<NKC8E$LU*5DC;W;\dbqB4m7P9nlW4TEn[tK.Fn5B]XAk52&B2KL]
%0XTrnDs!b\"BX5H_L?ecTH6N<VRRnXJN=NR_+"d0JLO;r^,/i:)ri7&6dX:7o4K-Y!er+hZV7kFX$PF5ihBXfGLO<VbaZ9)d9dMo
%`+2CU,Gc8i7^712XTZ8D3La>aq[f*3ZY:.&8t&2<f9VFfbq.3M\4M9$C2f/.8]H\PIMeD(XNtp>96"m)r(5%L1sl,"XQ%)pkHK1#
%ptuTcC:#jY-um(b>84()Zrp<5@[BYF:f3qmd>g_N4K6YH1jR1/m:Dl.]6NZ-gZp#M7K!9gmK[ApOB3mU,t.duUXG4goYjlPpCdIT
%:8ro%kB'<2rUmsO=h%!r+-0O%We;79'Lf`6a78e;M/Q:_m@pX_(>:8"DnkD7=//Y8;Rl=_H^mY!Po3!&-l@%I9X9qcO8FUlrsJ>i
%d*bSpJCDciEY<>>!QuN8*NOQ`_uP_d%#CZS0KpeiR7]g1]"4M)RP(Q.Ja;MhAdW%[rAb.7;><f)Mhli-2lT/:BGfGn9(fX]ne`d4
%A&Cu&9#\)$@ZK[Q5W@</:#&]Bn%Zru:#gVPAIA";i#aBhD0V3YRr!WF;Dq/JBUI87fHH[gNnOcP@8o'sQNbGri.sRG*E^*kcJj6%
%Qs;8Q6oao=4MRY1r8l::p;^=ub\;$Z;'A\(_Z"U&l(h([>$kU5e/qMq7E`2bCQ\#??[f_Mo\I/0A*n-$(A2h=QV-h*ST"JQ-e\I"
%^AG-Mpn\E):N=,:'W*4@OCGqo\BL>Y@nf"_Or<`@VkTP]ARkVuihhq,&>M4\[[GErQja`ZC0Y`;+Gm1_lHn%jVK/0&cE5.Oq&o27
%11rsW^kjBP2W6+[Tl(Q=oerIKAc[ToN#SA-p*<Bo_gA!"Ke0P%YePAD6k5L!2(mpaLY*VMH'ZKA<nSJb]4n!5nMWi)cf0@2"3`*&
%81h/snUW;c"J<BPcN]G*o-Ve4:or=%+!_o@M2PJCQKl':r?Bh7T*.:ni$UBPlQQ]@Pjr?l&lVKb]$E8F+h[HX4KS"&AHiF"[7d"U
%c$9;Y=KRbNUgVj'!];rX]In,+AEqU4H-B%Bf)>>%idIWCH^5P[S(!FW#(?=_]jJcfm$^tVVXmEm9o<u*G,`IqMEY^LR-Gpt8'`[2
%%VYuEOH];7=\9O+pP7cLgC8;!0YG"s,IRd,_Zn";Ini#+d+45D/@*s"GB54$GjkP,)t>i-rB8>'geZYa-hT&o"\9JH4`F!0N<r_9
%L/_[.JZ2mOor%_VU$c"/T>/&O6fD,/)XStL*69afp+h&cCmtHD.+QA5ppQHGEjU(Ik.=?mg8(B^3P"=5p)kn:r\RE_Cg/'hQcGlA
%BT=G.#QDApE^@TuNsG&e`c1UFTNrT/;s*/]61'7XR#1`3B__Lh#/#;QHY]\Spl*Qe='<=,I,6Klk'%*V=V@J85b8_##6g9*0:F%W
%+-.b)mF&qW:?EnJ!>YE(JM\:aojugCP6+=9Z0]?OdbH74mQ::Eb@J%qn=nZ$;&;f:o5^C<N'sH8&.+UjU_tU,c'5Y#8.N,FZ#8&[
%$57[!@@hDe7;C9hLqlJc1jVP]B"t#l]'AMVT+_*g&t4uNgm>F(P$33;M;OP"0r?2PX?DGd-CFPt.!`0OLNW!<[P@caCG,tOXK;%u
%j5ndBeXNCZf?YhBq8[.*)T0X^Vg)Ob+bRrQ(A=l(V,oblq7M@eq?6<"QNo$tP'LWr!XF_YDH8GcFtZR%?bq!RPOaZ-/,5j2?[can
%,9*8(E&QJs_@##t_!L9$)t>%J_c`El`-iK?EooE3kIim#PJCHh^/8@?m*_iTS.%9OO#,jH/"V=J3.pJ!@/hO43dCEZS9\.fZ!5E<
%MO>!?"XRgT_jLDeA:j`Q'2Nm8?1C[U,UhH=OpGoTDY/-@MM&m;*!D6^cs[qe1S$6.O7\/JltWuchLl:j4O@B0AGtK*9GPQJAn*>g
%p0aaq?:F*m@AXCG;IH2$?^RgE#7J>j&\;s\?+oPWOK@cOF%W$D&pbZT>++GPPHSam""Tiu^@?=L:Ggt"ppq/U#utOB$X]5%'&KFJ
%Y%rj5P:?<_K<@iR5YY"eQ*+mb9(ZBai#>tROF[QPAp&mm]'d=tT3aNmDRKm&d</#]6^d"?cuiV&r6hWTesq>>hBHV@?e7k3&N(8'
%RakIY$^]if1K;*XFic/$M^E"\PU`W[:/*@HKDT9nn+9dVP<06*o(J?RC[('RkWYZ9anr@CTOulD@-ge!YNFn!T!>=.^A'-]A^;Lc
%dMhd%MM:@=m*]%41q[+oKjP"N\+=_oZA#LJ,b9<g$>!kNC"i?njEPghjbFLVQgt3j3!slDY1$-&^9/"8fl_Z!*!?#r`5qi7Q:5l%
%4?E+V/(35[].Ai3qOF7=YY1&N\WnONQXnB^SW:h)TCtdu)I=Nl9"[e_5>J":4dDW&=>rTC[:p%L@(q)iaTU?n,0I!b'6+V*)<%&b
%*c;Wq.WiuhiS#M&E2%5EOa^#UOWc=D&)mX(WVP!#+ZmAa&T>ATe.Kd-3!LUVEoDOdj*l&4*H*%-jBjCk3fkV#Qpuo@o;Mrh9^^ga
%eV^?P@%:;]QcqT'fm:!Sj]).7l?cEDm?e,O1^3LriErt6bqn8[i)RlT*cfY`QaLs:aH&EjO\(m2QEg2$4D#(;a-WkBaH<<Tma-Ac
%%Fs%[R$4bq/6R3k;_]\bj&(s6VGi\:Cqe\RIYa1V_q$0T#9!C$q<aZq2Se1sj3_@!H]*(MJ)%C/AbjQ)&OmDC^GuLMEg[BqF5&^m
%oEJ^,/K8L@/R*3,n%1K>%k>*P@s8Gf*h>+BSc^"U*fJS;#=3!Pp@HCHaA)uV,2Ne2iXAEXK]=2JPg`7jf7W"15/-eP^alJ6Qqun\
%0V%[cV42OV$DNW@^i2@?GSJ6-oc1c[DT.(=S-*9_)N+4`*4Y4Mqoob&FT3sX=uYq#hR6YHU^C">pMIH_A_k1%GKb*\j&+gWJdY_M
%>\)"f?H(ZJ>FO?VjZ4!s%UM3-4F.G"B_$'-:DSrf!2OJ(S8XGfVAZHMM%[)]`BHNh4p[b1>OIe_5)N0Zo9bT>,EZC`);p4Olj*$a
%.Rip)g<sm%>qpe'C.hC"j;aO>H4b(4eerTYG("p7,/"9!poIY5.R1u;XMs>PGG9qBg\^&?b0Q<lQ3d2YEUsoXO65&'"jnVVbg<d-
%I8a#]Lf6M_E<X&3F&$O"?\sGrMhuelGj`ORgHN<X!*7BQE+7#"<Z6E'eb&jC3DAos0;"]N>A<,q023I%.@Q[b9,!.@NTBl_SQ\QQ
%LJM9G3`n$Lc2C:Z$?k_192jM@KYP3Ll(P1].e</,g![.ZUYD+FU4u[$BDp9.&.e`OX^@N\FdaBKQbJirVa'i]!csi'CMGSC!oZ$'
%AW`IHm;.Zmj""+cf#6Z*2@O2e:<$"?Rfb@$>Y^=]hpjVYs4QHWZ^9FMGA0F8P1T/9Z*=@84M?-+D2Qm1kOIajStjE>O[%0-nd36O
%i7Q%bf>_Gb9M"!fD#?7&';kUtlDpJ'$MXBmgL6g[lX1=!FjhniI>'1i0qUAKco?koe=00b,2L0!%%30.`7+[!e#]ibdk&pqKeG%G
%4(3F1C""(#4>tG=Sn$7)NVn'kk#6!KZu`BUPFq;Ybg**HVm(6F?'>6&ZaQEF6p<u7;+5Am7*HTiS)p!&I\opL6&]-i5]fi$%5BhH
%D5mU>4=4Cm?.3Bp.?HT.iG!^W`,15E:lJk"H0`g2#eQt'[lXGDAQ(GZ[pHH?ic4.0r\n1s1*/0hJZQF!=t"L+#c,.]Sb1Nl<GG;U
%qb$f]Zg:LkImhL<&^<sqFPXIn`jl3(]FjcKA866VO3)fJb-9%"g+4-Lk['QR5GflHp$"jU%H\'_%ms9l!]ATO-g[*BN!3%kN^C+h
%en6R6P1RM%WcHpQiJ.`0Ap,F'5I1U*l#3Q//udD:W*d;2bk&MBTDc.[=mG9Y:PRp"$S'DS16f,eJq8M%)^,tW+1<';Y6i[9anD,"
%Msp<:;<\8mZMY%ai%!*V&`;Q"nrbOk2(oiI%'C?,^D!-X!&i^u9H5h"*!dibc?,4-2/J&.4=3cgfo#Vd^Uhd$XFNrT^CZ'@M_eD!
%a\@)eRcAMX1jZ8pHqsl%jnN^Yb=6hU/GcdVYhWRqq4Cr,AQH#ZY'\AW(W"'N)ns`[YV-@6s$KIPZf2'sJgoWa7r*0p`gPk&,n3,#
%-8koUcuPic"Ius^A4$u4pFb/,&i+p.ogu[UN.V_pJ_4U-\PiVV.LgZE)3T!)`/+^e[#6^[8^,n/h]p,3=!-io3q1SNl!_d9#.4Fu
%.E1gXP4#:C'=qj0PSU-ko\<qV([[P-AtcfYk),#MXDPU`q/K3b^V?;FXlA7&W]T=Sj_5!!gnfq%<3"=B9KOCkj/kuc:tBnY"CO5Y
%ej^mUPPXZhgHWc@=Qj3e*#bDnp8/M4.DdsR"3b-DI0+8B.']3tE@@8T.XY/>j8>[Bp['2b5<5\*-/V-XK"<HpM900F$RJ&,TOA>s
%,78;E:,2L)jG>rH!!uY;c@cE2U/@:M0M]#;#f0GqZX*ZXF99p3M@q7!4P$L1'dXi@:e_d,H$]gnUk@K7\8'(%9Nu2dRMEV04:Bio
%D3j:enqM<@kP3IV.9VnhT),Yt<GFsXX'k8ELOia8AeF#+Og'2KlQ@2I)Wj/4UEu-7RHe=9LZgPNj=Xl]K?66S@S_M9]#+E9LBr8p
%Y_N;q8!FQ`P7rRTk>`6mi`<-'mR/"_J)/3E;@A`+B#+pYeTdlHls`D2onAQF,K78@BGujkaDOLM86aT*Q#KCXIt4[YMZIl)$`/j,
%=;LA<T>F3lTn\ki:_VV`$VmZp^nJ\o]MA,7#`C0b[7Dd/GksZn^nhu`-<8XlG03b8A5_,%.9MojWeb9n';%]6-3[L*L`Uqui3nr^
%nVJe,\Hl(.E*WB:3'k>i<R`hI.pr&+[s&;Ke^#"m(Q$957:eg:Wq3R3dAtQrYc,/\Osj+o+nD[js+mHAo0+o6!ZQgc9AX&7_ZB10
%!KeKPEE>dj$3%N^D,Il;-?OCUDFFl$B*g"jg!5bXJpoe$OU'XJBV/.=7$.=`-<*6)l9kd/3Tt<TKpjfC2+B$Y@EK6o)FG?%6asN2
%EEZ/L$%OWVLKQqY,H?[[bjb';:d3DengY+EK/.YKCa^>G(UcLJ<-cGD>QO/rD*JMj&s%bN>3b3Kmp-S0W3:1(&.6VTEo%nA_tk32
%M7<L=m$_;\;uYBWW5&<-cej-ElI?UH_`,@1[m*E:2q@n?_5m(@iAq\=MN+#9^AXZgqn'WCol'j*+90MKs5pfjrE'$`iU%^.omQc+
%^V0U55Q0m+5<kZe0F[#Lrf_R+3drg_lWk\Es7a/*Gc\YEruYVJrgSE5md#@L:N(a_Vm!l8k2GVjquI2nS,Y;De&1XhqrU]SpQ+3[
%oC/[XrQ"q'_N4C4r;>aXpmYXjm-joqT0EPM~>
%AI9_PrivateDataEnd
